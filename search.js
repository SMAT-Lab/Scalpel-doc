window.pdocSearch = (function(){
/** elasticlunr - http://weixsong.github.io * Copyright (C) 2017 Oliver Nightingale * Copyright (C) 2017 Wei Song * MIT Licensed */!function(){function e(e){if(null===e||"object"!=typeof e)return e;var t=e.constructor();for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n]);return t}var t=function(e){var n=new t.Index;return n.pipeline.add(t.trimmer,t.stopWordFilter,t.stemmer),e&&e.call(n,n),n};t.version="0.9.5",lunr=t,t.utils={},t.utils.warn=function(e){return function(t){e.console&&console.warn&&console.warn(t)}}(this),t.utils.toString=function(e){return void 0===e||null===e?"":e.toString()},t.EventEmitter=function(){this.events={}},t.EventEmitter.prototype.addListener=function(){var e=Array.prototype.slice.call(arguments),t=e.pop(),n=e;if("function"!=typeof t)throw new TypeError("last argument must be a function");n.forEach(function(e){this.hasHandler(e)||(this.events[e]=[]),this.events[e].push(t)},this)},t.EventEmitter.prototype.removeListener=function(e,t){if(this.hasHandler(e)){var n=this.events[e].indexOf(t);-1!==n&&(this.events[e].splice(n,1),0==this.events[e].length&&delete this.events[e])}},t.EventEmitter.prototype.emit=function(e){if(this.hasHandler(e)){var t=Array.prototype.slice.call(arguments,1);this.events[e].forEach(function(e){e.apply(void 0,t)},this)}},t.EventEmitter.prototype.hasHandler=function(e){return e in this.events},t.tokenizer=function(e){if(!arguments.length||null===e||void 0===e)return[];if(Array.isArray(e)){var n=e.filter(function(e){return null===e||void 0===e?!1:!0});n=n.map(function(e){return t.utils.toString(e).toLowerCase()});var i=[];return n.forEach(function(e){var n=e.split(t.tokenizer.seperator);i=i.concat(n)},this),i}return e.toString().trim().toLowerCase().split(t.tokenizer.seperator)},t.tokenizer.defaultSeperator=/[\s\-]+/,t.tokenizer.seperator=t.tokenizer.defaultSeperator,t.tokenizer.setSeperator=function(e){null!==e&&void 0!==e&&"object"==typeof e&&(t.tokenizer.seperator=e)},t.tokenizer.resetSeperator=function(){t.tokenizer.seperator=t.tokenizer.defaultSeperator},t.tokenizer.getSeperator=function(){return t.tokenizer.seperator},t.Pipeline=function(){this._queue=[]},t.Pipeline.registeredFunctions={},t.Pipeline.registerFunction=function(e,n){n in t.Pipeline.registeredFunctions&&t.utils.warn("Overwriting existing registered function: "+n),e.label=n,t.Pipeline.registeredFunctions[n]=e},t.Pipeline.getRegisteredFunction=function(e){return e in t.Pipeline.registeredFunctions!=!0?null:t.Pipeline.registeredFunctions[e]},t.Pipeline.warnIfFunctionNotRegistered=function(e){var n=e.label&&e.label in this.registeredFunctions;n||t.utils.warn("Function is not registered with pipeline. This may cause problems when serialising the index.\n",e)},t.Pipeline.load=function(e){var n=new t.Pipeline;return e.forEach(function(e){var i=t.Pipeline.getRegisteredFunction(e);if(!i)throw new Error("Cannot load un-registered function: "+e);n.add(i)}),n},t.Pipeline.prototype.add=function(){var e=Array.prototype.slice.call(arguments);e.forEach(function(e){t.Pipeline.warnIfFunctionNotRegistered(e),this._queue.push(e)},this)},t.Pipeline.prototype.after=function(e,n){t.Pipeline.warnIfFunctionNotRegistered(n);var i=this._queue.indexOf(e);if(-1===i)throw new Error("Cannot find existingFn");this._queue.splice(i+1,0,n)},t.Pipeline.prototype.before=function(e,n){t.Pipeline.warnIfFunctionNotRegistered(n);var i=this._queue.indexOf(e);if(-1===i)throw new Error("Cannot find existingFn");this._queue.splice(i,0,n)},t.Pipeline.prototype.remove=function(e){var t=this._queue.indexOf(e);-1!==t&&this._queue.splice(t,1)},t.Pipeline.prototype.run=function(e){for(var t=[],n=e.length,i=this._queue.length,o=0;n>o;o++){for(var r=e[o],s=0;i>s&&(r=this._queue[s](r,o,e),void 0!==r&&null!==r);s++);void 0!==r&&null!==r&&t.push(r)}return t},t.Pipeline.prototype.reset=function(){this._queue=[]},t.Pipeline.prototype.get=function(){return this._queue},t.Pipeline.prototype.toJSON=function(){return this._queue.map(function(e){return t.Pipeline.warnIfFunctionNotRegistered(e),e.label})},t.Index=function(){this._fields=[],this._ref="id",this.pipeline=new t.Pipeline,this.documentStore=new t.DocumentStore,this.index={},this.eventEmitter=new t.EventEmitter,this._idfCache={},this.on("add","remove","update",function(){this._idfCache={}}.bind(this))},t.Index.prototype.on=function(){var e=Array.prototype.slice.call(arguments);return this.eventEmitter.addListener.apply(this.eventEmitter,e)},t.Index.prototype.off=function(e,t){return this.eventEmitter.removeListener(e,t)},t.Index.load=function(e){e.version!==t.version&&t.utils.warn("version mismatch: current "+t.version+" importing "+e.version);var n=new this;n._fields=e.fields,n._ref=e.ref,n.documentStore=t.DocumentStore.load(e.documentStore),n.pipeline=t.Pipeline.load(e.pipeline),n.index={};for(var i in e.index)n.index[i]=t.InvertedIndex.load(e.index[i]);return n},t.Index.prototype.addField=function(e){return this._fields.push(e),this.index[e]=new t.InvertedIndex,this},t.Index.prototype.setRef=function(e){return this._ref=e,this},t.Index.prototype.saveDocument=function(e){return this.documentStore=new t.DocumentStore(e),this},t.Index.prototype.addDoc=function(e,n){if(e){var n=void 0===n?!0:n,i=e[this._ref];this.documentStore.addDoc(i,e),this._fields.forEach(function(n){var o=this.pipeline.run(t.tokenizer(e[n]));this.documentStore.addFieldLength(i,n,o.length);var r={};o.forEach(function(e){e in r?r[e]+=1:r[e]=1},this);for(var s in r){var u=r[s];u=Math.sqrt(u),this.index[n].addToken(s,{ref:i,tf:u})}},this),n&&this.eventEmitter.emit("add",e,this)}},t.Index.prototype.removeDocByRef=function(e){if(e&&this.documentStore.isDocStored()!==!1&&this.documentStore.hasDoc(e)){var t=this.documentStore.getDoc(e);this.removeDoc(t,!1)}},t.Index.prototype.removeDoc=function(e,n){if(e){var n=void 0===n?!0:n,i=e[this._ref];this.documentStore.hasDoc(i)&&(this.documentStore.removeDoc(i),this._fields.forEach(function(n){var o=this.pipeline.run(t.tokenizer(e[n]));o.forEach(function(e){this.index[n].removeToken(e,i)},this)},this),n&&this.eventEmitter.emit("remove",e,this))}},t.Index.prototype.updateDoc=function(e,t){var t=void 0===t?!0:t;this.removeDocByRef(e[this._ref],!1),this.addDoc(e,!1),t&&this.eventEmitter.emit("update",e,this)},t.Index.prototype.idf=function(e,t){var n="@"+t+"/"+e;if(Object.prototype.hasOwnProperty.call(this._idfCache,n))return this._idfCache[n];var i=this.index[t].getDocFreq(e),o=1+Math.log(this.documentStore.length/(i+1));return this._idfCache[n]=o,o},t.Index.prototype.getFields=function(){return this._fields.slice()},t.Index.prototype.search=function(e,n){if(!e)return[];e="string"==typeof e?{any:e}:JSON.parse(JSON.stringify(e));var i=null;null!=n&&(i=JSON.stringify(n));for(var o=new t.Configuration(i,this.getFields()).get(),r={},s=Object.keys(e),u=0;u<s.length;u++){var a=s[u];r[a]=this.pipeline.run(t.tokenizer(e[a]))}var l={};for(var c in o){var d=r[c]||r.any;if(d){var f=this.fieldSearch(d,c,o),h=o[c].boost;for(var p in f)f[p]=f[p]*h;for(var p in f)p in l?l[p]+=f[p]:l[p]=f[p]}}var v,g=[];for(var p in l)v={ref:p,score:l[p]},this.documentStore.hasDoc(p)&&(v.doc=this.documentStore.getDoc(p)),g.push(v);return g.sort(function(e,t){return t.score-e.score}),g},t.Index.prototype.fieldSearch=function(e,t,n){var i=n[t].bool,o=n[t].expand,r=n[t].boost,s=null,u={};return 0!==r?(e.forEach(function(e){var n=[e];1==o&&(n=this.index[t].expandToken(e));var r={};n.forEach(function(n){var o=this.index[t].getDocs(n),a=this.idf(n,t);if(s&&"AND"==i){var l={};for(var c in s)c in o&&(l[c]=o[c]);o=l}n==e&&this.fieldSearchStats(u,n,o);for(var c in o){var d=this.index[t].getTermFrequency(n,c),f=this.documentStore.getFieldLength(c,t),h=1;0!=f&&(h=1/Math.sqrt(f));var p=1;n!=e&&(p=.15*(1-(n.length-e.length)/n.length));var v=d*a*h*p;c in r?r[c]+=v:r[c]=v}},this),s=this.mergeScores(s,r,i)},this),s=this.coordNorm(s,u,e.length)):void 0},t.Index.prototype.mergeScores=function(e,t,n){if(!e)return t;if("AND"==n){var i={};for(var o in t)o in e&&(i[o]=e[o]+t[o]);return i}for(var o in t)o in e?e[o]+=t[o]:e[o]=t[o];return e},t.Index.prototype.fieldSearchStats=function(e,t,n){for(var i in n)i in e?e[i].push(t):e[i]=[t]},t.Index.prototype.coordNorm=function(e,t,n){for(var i in e)if(i in t){var o=t[i].length;e[i]=e[i]*o/n}return e},t.Index.prototype.toJSON=function(){var e={};return this._fields.forEach(function(t){e[t]=this.index[t].toJSON()},this),{version:t.version,fields:this._fields,ref:this._ref,documentStore:this.documentStore.toJSON(),index:e,pipeline:this.pipeline.toJSON()}},t.Index.prototype.use=function(e){var t=Array.prototype.slice.call(arguments,1);t.unshift(this),e.apply(this,t)},t.DocumentStore=function(e){this._save=null===e||void 0===e?!0:e,this.docs={},this.docInfo={},this.length=0},t.DocumentStore.load=function(e){var t=new this;return t.length=e.length,t.docs=e.docs,t.docInfo=e.docInfo,t._save=e.save,t},t.DocumentStore.prototype.isDocStored=function(){return this._save},t.DocumentStore.prototype.addDoc=function(t,n){this.hasDoc(t)||this.length++,this.docs[t]=this._save===!0?e(n):null},t.DocumentStore.prototype.getDoc=function(e){return this.hasDoc(e)===!1?null:this.docs[e]},t.DocumentStore.prototype.hasDoc=function(e){return e in this.docs},t.DocumentStore.prototype.removeDoc=function(e){this.hasDoc(e)&&(delete this.docs[e],delete this.docInfo[e],this.length--)},t.DocumentStore.prototype.addFieldLength=function(e,t,n){null!==e&&void 0!==e&&0!=this.hasDoc(e)&&(this.docInfo[e]||(this.docInfo[e]={}),this.docInfo[e][t]=n)},t.DocumentStore.prototype.updateFieldLength=function(e,t,n){null!==e&&void 0!==e&&0!=this.hasDoc(e)&&this.addFieldLength(e,t,n)},t.DocumentStore.prototype.getFieldLength=function(e,t){return null===e||void 0===e?0:e in this.docs&&t in this.docInfo[e]?this.docInfo[e][t]:0},t.DocumentStore.prototype.toJSON=function(){return{docs:this.docs,docInfo:this.docInfo,length:this.length,save:this._save}},t.stemmer=function(){var e={ational:"ate",tional:"tion",enci:"ence",anci:"ance",izer:"ize",bli:"ble",alli:"al",entli:"ent",eli:"e",ousli:"ous",ization:"ize",ation:"ate",ator:"ate",alism:"al",iveness:"ive",fulness:"ful",ousness:"ous",aliti:"al",iviti:"ive",biliti:"ble",logi:"log"},t={icate:"ic",ative:"",alize:"al",iciti:"ic",ical:"ic",ful:"",ness:""},n="[^aeiou]",i="[aeiouy]",o=n+"[^aeiouy]*",r=i+"[aeiou]*",s="^("+o+")?"+r+o,u="^("+o+")?"+r+o+"("+r+")?$",a="^("+o+")?"+r+o+r+o,l="^("+o+")?"+i,c=new RegExp(s),d=new RegExp(a),f=new RegExp(u),h=new RegExp(l),p=/^(.+?)(ss|i)es$/,v=/^(.+?)([^s])s$/,g=/^(.+?)eed$/,m=/^(.+?)(ed|ing)$/,y=/.$/,S=/(at|bl|iz)$/,x=new RegExp("([^aeiouylsz])\\1$"),w=new RegExp("^"+o+i+"[^aeiouwxy]$"),I=/^(.+?[^aeiou])y$/,b=/^(.+?)(ational|tional|enci|anci|izer|bli|alli|entli|eli|ousli|ization|ation|ator|alism|iveness|fulness|ousness|aliti|iviti|biliti|logi)$/,E=/^(.+?)(icate|ative|alize|iciti|ical|ful|ness)$/,D=/^(.+?)(al|ance|ence|er|ic|able|ible|ant|ement|ment|ent|ou|ism|ate|iti|ous|ive|ize)$/,F=/^(.+?)(s|t)(ion)$/,_=/^(.+?)e$/,P=/ll$/,k=new RegExp("^"+o+i+"[^aeiouwxy]$"),z=function(n){var i,o,r,s,u,a,l;if(n.length<3)return n;if(r=n.substr(0,1),"y"==r&&(n=r.toUpperCase()+n.substr(1)),s=p,u=v,s.test(n)?n=n.replace(s,"$1$2"):u.test(n)&&(n=n.replace(u,"$1$2")),s=g,u=m,s.test(n)){var z=s.exec(n);s=c,s.test(z[1])&&(s=y,n=n.replace(s,""))}else if(u.test(n)){var z=u.exec(n);i=z[1],u=h,u.test(i)&&(n=i,u=S,a=x,l=w,u.test(n)?n+="e":a.test(n)?(s=y,n=n.replace(s,"")):l.test(n)&&(n+="e"))}if(s=I,s.test(n)){var z=s.exec(n);i=z[1],n=i+"i"}if(s=b,s.test(n)){var z=s.exec(n);i=z[1],o=z[2],s=c,s.test(i)&&(n=i+e[o])}if(s=E,s.test(n)){var z=s.exec(n);i=z[1],o=z[2],s=c,s.test(i)&&(n=i+t[o])}if(s=D,u=F,s.test(n)){var z=s.exec(n);i=z[1],s=d,s.test(i)&&(n=i)}else if(u.test(n)){var z=u.exec(n);i=z[1]+z[2],u=d,u.test(i)&&(n=i)}if(s=_,s.test(n)){var z=s.exec(n);i=z[1],s=d,u=f,a=k,(s.test(i)||u.test(i)&&!a.test(i))&&(n=i)}return s=P,u=d,s.test(n)&&u.test(n)&&(s=y,n=n.replace(s,"")),"y"==r&&(n=r.toLowerCase()+n.substr(1)),n};return z}(),t.Pipeline.registerFunction(t.stemmer,"stemmer"),t.stopWordFilter=function(e){return e&&t.stopWordFilter.stopWords[e]!==!0?e:void 0},t.clearStopWords=function(){t.stopWordFilter.stopWords={}},t.addStopWords=function(e){null!=e&&Array.isArray(e)!==!1&&e.forEach(function(e){t.stopWordFilter.stopWords[e]=!0},this)},t.resetStopWords=function(){t.stopWordFilter.stopWords=t.defaultStopWords},t.defaultStopWords={"":!0,a:!0,able:!0,about:!0,across:!0,after:!0,all:!0,almost:!0,also:!0,am:!0,among:!0,an:!0,and:!0,any:!0,are:!0,as:!0,at:!0,be:!0,because:!0,been:!0,but:!0,by:!0,can:!0,cannot:!0,could:!0,dear:!0,did:!0,"do":!0,does:!0,either:!0,"else":!0,ever:!0,every:!0,"for":!0,from:!0,get:!0,got:!0,had:!0,has:!0,have:!0,he:!0,her:!0,hers:!0,him:!0,his:!0,how:!0,however:!0,i:!0,"if":!0,"in":!0,into:!0,is:!0,it:!0,its:!0,just:!0,least:!0,let:!0,like:!0,likely:!0,may:!0,me:!0,might:!0,most:!0,must:!0,my:!0,neither:!0,no:!0,nor:!0,not:!0,of:!0,off:!0,often:!0,on:!0,only:!0,or:!0,other:!0,our:!0,own:!0,rather:!0,said:!0,say:!0,says:!0,she:!0,should:!0,since:!0,so:!0,some:!0,than:!0,that:!0,the:!0,their:!0,them:!0,then:!0,there:!0,these:!0,they:!0,"this":!0,tis:!0,to:!0,too:!0,twas:!0,us:!0,wants:!0,was:!0,we:!0,were:!0,what:!0,when:!0,where:!0,which:!0,"while":!0,who:!0,whom:!0,why:!0,will:!0,"with":!0,would:!0,yet:!0,you:!0,your:!0},t.stopWordFilter.stopWords=t.defaultStopWords,t.Pipeline.registerFunction(t.stopWordFilter,"stopWordFilter"),t.trimmer=function(e){if(null===e||void 0===e)throw new Error("token should not be undefined");return e.replace(/^\W+/,"").replace(/\W+$/,"")},t.Pipeline.registerFunction(t.trimmer,"trimmer"),t.InvertedIndex=function(){this.root={docs:{},df:0}},t.InvertedIndex.load=function(e){var t=new this;return t.root=e.root,t},t.InvertedIndex.prototype.addToken=function(e,t,n){for(var n=n||this.root,i=0;i<=e.length-1;){var o=e[i];o in n||(n[o]={docs:{},df:0}),i+=1,n=n[o]}var r=t.ref;n.docs[r]?n.docs[r]={tf:t.tf}:(n.docs[r]={tf:t.tf},n.df+=1)},t.InvertedIndex.prototype.hasToken=function(e){if(!e)return!1;for(var t=this.root,n=0;n<e.length;n++){if(!t[e[n]])return!1;t=t[e[n]]}return!0},t.InvertedIndex.prototype.getNode=function(e){if(!e)return null;for(var t=this.root,n=0;n<e.length;n++){if(!t[e[n]])return null;t=t[e[n]]}return t},t.InvertedIndex.prototype.getDocs=function(e){var t=this.getNode(e);return null==t?{}:t.docs},t.InvertedIndex.prototype.getTermFrequency=function(e,t){var n=this.getNode(e);return null==n?0:t in n.docs?n.docs[t].tf:0},t.InvertedIndex.prototype.getDocFreq=function(e){var t=this.getNode(e);return null==t?0:t.df},t.InvertedIndex.prototype.removeToken=function(e,t){if(e){var n=this.getNode(e);null!=n&&t in n.docs&&(delete n.docs[t],n.df-=1)}},t.InvertedIndex.prototype.expandToken=function(e,t,n){if(null==e||""==e)return[];var t=t||[];if(void 0==n&&(n=this.getNode(e),null==n))return t;n.df>0&&t.push(e);for(var i in n)"docs"!==i&&"df"!==i&&this.expandToken(e+i,t,n[i]);return t},t.InvertedIndex.prototype.toJSON=function(){return{root:this.root}},t.Configuration=function(e,n){var e=e||"";if(void 0==n||null==n)throw new Error("fields should not be null");this.config={};var i;try{i=JSON.parse(e),this.buildUserConfig(i,n)}catch(o){t.utils.warn("user configuration parse failed, will use default configuration"),this.buildDefaultConfig(n)}},t.Configuration.prototype.buildDefaultConfig=function(e){this.reset(),e.forEach(function(e){this.config[e]={boost:1,bool:"OR",expand:!1}},this)},t.Configuration.prototype.buildUserConfig=function(e,n){var i="OR",o=!1;if(this.reset(),"bool"in e&&(i=e.bool||i),"expand"in e&&(o=e.expand||o),"fields"in e)for(var r in e.fields)if(n.indexOf(r)>-1){var s=e.fields[r],u=o;void 0!=s.expand&&(u=s.expand),this.config[r]={boost:s.boost||0===s.boost?s.boost:1,bool:s.bool||i,expand:u}}else t.utils.warn("field name in user configuration not found in index instance fields");else this.addAllFields2UserConfig(i,o,n)},t.Configuration.prototype.addAllFields2UserConfig=function(e,t,n){n.forEach(function(n){this.config[n]={boost:1,bool:e,expand:t}},this)},t.Configuration.prototype.get=function(){return this.config},t.Configuration.prototype.reset=function(){this.config={}},lunr.SortedSet=function(){this.length=0,this.elements=[]},lunr.SortedSet.load=function(e){var t=new this;return t.elements=e,t.length=e.length,t},lunr.SortedSet.prototype.add=function(){var e,t;for(e=0;e<arguments.length;e++)t=arguments[e],~this.indexOf(t)||this.elements.splice(this.locationFor(t),0,t);this.length=this.elements.length},lunr.SortedSet.prototype.toArray=function(){return this.elements.slice()},lunr.SortedSet.prototype.map=function(e,t){return this.elements.map(e,t)},lunr.SortedSet.prototype.forEach=function(e,t){return this.elements.forEach(e,t)},lunr.SortedSet.prototype.indexOf=function(e){for(var t=0,n=this.elements.length,i=n-t,o=t+Math.floor(i/2),r=this.elements[o];i>1;){if(r===e)return o;e>r&&(t=o),r>e&&(n=o),i=n-t,o=t+Math.floor(i/2),r=this.elements[o]}return r===e?o:-1},lunr.SortedSet.prototype.locationFor=function(e){for(var t=0,n=this.elements.length,i=n-t,o=t+Math.floor(i/2),r=this.elements[o];i>1;)e>r&&(t=o),r>e&&(n=o),i=n-t,o=t+Math.floor(i/2),r=this.elements[o];return r>e?o:e>r?o+1:void 0},lunr.SortedSet.prototype.intersect=function(e){for(var t=new lunr.SortedSet,n=0,i=0,o=this.length,r=e.length,s=this.elements,u=e.elements;;){if(n>o-1||i>r-1)break;s[n]!==u[i]?s[n]<u[i]?n++:s[n]>u[i]&&i++:(t.add(s[n]),n++,i++)}return t},lunr.SortedSet.prototype.clone=function(){var e=new lunr.SortedSet;return e.elements=this.toArray(),e.length=e.elements.length,e},lunr.SortedSet.prototype.union=function(e){var t,n,i;this.length>=e.length?(t=this,n=e):(t=e,n=this),i=t.clone();for(var o=0,r=n.toArray();o<r.length;o++)i.add(r[o]);return i},lunr.SortedSet.prototype.toJSON=function(){return this.toArray()},function(e,t){"function"==typeof define&&define.amd?define(t):"object"==typeof exports?module.exports=t():e.elasticlunr=t()}(this,function(){return t})}();
    /** pdoc search index */const docs = {"version": "0.9.5", "fields": ["qualname", "fullname", "doc"], "ref": "fullname", "documentStore": {"docs": {"scalpel": {"fullname": "scalpel", "modulename": "scalpel", "qualname": "", "type": "module", "doc": "<h1 id=\"static-anaysis-for-python-programs\">Static Anaysis for Python Programs</h1>\n\n<p>Scalpel is a Python module integrating classical program anaysis algorithms\nwith tailored features for Python language. It aims to provide simple and\nefficient solutions to software engineering researchers that are accessible to\neverybody and reusable in various contexts.</p>\n"}, "scalpel.rewriter": {"fullname": "scalpel.rewriter", "modulename": "scalpel", "qualname": "rewriter", "type": "variable", "doc": "<p></p>\n"}, "scalpel.SSA": {"fullname": "scalpel.SSA", "modulename": "scalpel.SSA", "qualname": "", "type": "module", "doc": "<p>Static Single Assignment (SSA) is a technique of IR in the compiling thoery, it also shows great benefits to static anaysis tasks such as constant propagation, dead code elimination and etc.\nConstant propagation is also a matured technique in static anaysis. \nIt is the process of evaluating or recognizing the actual constant values or expressions at a particular program point. This is realized by utilizing control flow and data flow information. Determining the possible values for variables before runtime gives great benefits to software anaysis. \nFor instance, with constant value propagation, we can detect and remove dead code or perfrom type checking.\nIn scalpel, we implement constant propagation along with the SSA for execution efficiency.</p>\n"}, "scalpel.SSA.alg": {"fullname": "scalpel.SSA.alg", "modulename": "scalpel.SSA.alg", "qualname": "", "type": "module", "doc": "<p>In this code we include a lightweight adaption algorithm for dominating relationships computing. The code is adapted from  Networkx\nPlease see the original one at https://networkx.org/documentation/stable/_modules/networkx/algorithms/dominance.html#dominance_frontiers\nTODO: implement a datastructure such as G from networkx for control flow graph. so that networkx is not required in this library.</p>\n"}, "scalpel.SSA.alg.immediate_dominators": {"fullname": "scalpel.SSA.alg.immediate_dominators", "modulename": "scalpel.SSA.alg", "qualname": "immediate_dominators", "type": "function", "doc": "<p>Returns the immediate dominators of all nodes of a directed graph.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>G : a DiGraph or MultiDiGraph\n    The graph where dominance is to be computed.</p>\n\n<p>start : node\n    The start node of dominance computation.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>idom : dict keyed by nodes\n    A dict containing the immediate dominators of each node reachable from\n    <code>start</code>.</p>\n\n<h2 id=\"raises\">Raises</h2>\n\n<p>NetworkXNotImplemented\n    If <code>G</code> is undirected.</p>\n\n<p>NetworkXError\n    If <code>start</code> is not in <code>G</code>.</p>\n\n<h2 id=\"notes\">Notes</h2>\n\n<p>Except for <code>start</code>, the immediate dominators are the parents of their\ncorresponding nodes in the dominator tree.</p>\n\n<h2 id=\"examples\">Examples</h2>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">G</span> <span class=\"o\">=</span> <span class=\"n\">nx</span><span class=\"o\">.</span><span class=\"n\">DiGraph</span><span class=\"p\">([(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">)])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">sorted</span><span class=\"p\">(</span><span class=\"n\">nx</span><span class=\"o\">.</span><span class=\"n\">immediate_dominators</span><span class=\"p\">(</span><span class=\"n\">G</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">items</span><span class=\"p\">())</span>\n<span class=\"go\">[(1, 1), (2, 1), (3, 1), (4, 3), (5, 1)]</span>\n</code></pre></div>\n\n<h2 id=\"references\">References</h2>\n\n<p>.. [1] K. D. Cooper, T. J. Harvey, and K. Kennedy.\n       A simple, fast dominance algorithm.\n       Software Practice &amp; Experience, 4:110, 2001.</p>\n", "parameters": ["G", "start"], "funcdef": "def"}, "scalpel.SSA.alg.dominance_frontiers": {"fullname": "scalpel.SSA.alg.dominance_frontiers", "modulename": "scalpel.SSA.alg", "qualname": "dominance_frontiers", "type": "function", "doc": "<p>Returns the dominance frontiers of all nodes of a directed graph.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>G : a DiGraph or MultiDiGraph\n    The graph where dominance is to be computed.</p>\n\n<p>start : node\n    The start node of dominance computation.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>df : dict keyed by nodes\n    A dict containing the dominance frontiers of each node reachable from\n    <code>start</code> as lists.</p>\n\n<h2 id=\"raises\">Raises</h2>\n\n<p>NetworkXNotImplemented\n    If <code>G</code> is undirected.</p>\n\n<p>NetworkXError\n    If <code>start</code> is not in <code>G</code>.</p>\n\n<h2 id=\"examples\">Examples</h2>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">G</span> <span class=\"o\">=</span> <span class=\"n\">nx</span><span class=\"o\">.</span><span class=\"n\">DiGraph</span><span class=\"p\">([(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">)])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">sorted</span><span class=\"p\">((</span><span class=\"n\">u</span><span class=\"p\">,</span> <span class=\"nb\">sorted</span><span class=\"p\">(</span><span class=\"n\">df</span><span class=\"p\">))</span> <span class=\"k\">for</span> <span class=\"n\">u</span><span class=\"p\">,</span> <span class=\"n\">df</span> <span class=\"ow\">in</span> <span class=\"n\">nx</span><span class=\"o\">.</span><span class=\"n\">dominance_frontiers</span><span class=\"p\">(</span><span class=\"n\">G</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">items</span><span class=\"p\">())</span>\n<span class=\"go\">[(1, []), (2, [5]), (3, [5]), (4, [5]), (5, [])]</span>\n</code></pre></div>\n\n<h2 id=\"references\">References</h2>\n\n<p>.. [1] K. D. Cooper, T. J. Harvey, and K. Kennedy.\n       A simple, fast dominance algorithm.\n       Software Practice &amp; Experience, 4:110, 2001.</p>\n", "parameters": ["G", "start"], "funcdef": "def"}, "scalpel.SSA.alg.main": {"fullname": "scalpel.SSA.alg.main", "modulename": "scalpel.SSA.alg", "qualname": "main", "type": "function", "doc": "<p></p>\n", "parameters": [], "funcdef": "def"}, "scalpel.SSA.const": {"fullname": "scalpel.SSA.const", "modulename": "scalpel.SSA.const", "qualname": "", "type": "module", "doc": "<p>In this module, the single static assignment forms are implemented to allow\nfuther anaysis. The module contain a single class named SSA.</p>\n"}, "scalpel.SSA.const.parse_val": {"fullname": "scalpel.SSA.const.parse_val", "modulename": "scalpel.SSA.const", "qualname": "parse_val", "type": "function", "doc": "<p></p>\n", "parameters": ["node"], "funcdef": "def"}, "scalpel.SSA.const.SSA": {"fullname": "scalpel.SSA.const.SSA", "modulename": "scalpel.SSA.const", "qualname": "SSA", "type": "class", "doc": "<p>Build SSA graph from a given AST node based on the CFG.</p>\n"}, "scalpel.SSA.const.SSA.__init__": {"fullname": "scalpel.SSA.const.SSA.__init__", "modulename": "scalpel.SSA.const", "qualname": "SSA.__init__", "type": "function", "doc": "<p>Args:\n    src: the source code as input.</p>\n", "parameters": ["self"], "funcdef": "def"}, "scalpel.SSA.const.SSA.get_attribute_stmts": {"fullname": "scalpel.SSA.const.SSA.get_attribute_stmts", "modulename": "scalpel.SSA.const", "qualname": "SSA.get_attribute_stmts", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "stmts"], "funcdef": "def"}, "scalpel.SSA.const.SSA.get_identifiers": {"fullname": "scalpel.SSA.const.SSA.get_identifiers", "modulename": "scalpel.SSA.const", "qualname": "SSA.get_identifiers", "type": "function", "doc": "<p>Extract all identifiers from the given AST node.\nArgs:\n    ast_node: AST node.</p>\n", "parameters": ["self", "ast_node"], "funcdef": "def"}, "scalpel.SSA.const.SSA.compute_SSA": {"fullname": "scalpel.SSA.const.SSA.compute_SSA", "modulename": "scalpel.SSA.const", "qualname": "SSA.compute_SSA", "type": "function", "doc": "<p>Compute single static assignment form representations for a given CFG. \nDuring the computing, constant value and alias pairs are generated. The following steps are used to compute SSA representations:\nstep 1a: compute the dominance frontier\nstep 1b: use dominance frontier to place phi node\nif node X contains assignment to a, put phi node for a in dominance frontier of X\nadding phi function may require introducing additional phi function \nstart from the entry node \nstep2: rename variables so only one definition per name</p>\n\n<p>Args:\n    cfg: a control flow graph.</p>\n", "parameters": ["self", "cfg"], "funcdef": "def"}, "scalpel.SSA.const.SSA.get_stmt_idents_ctx": {"fullname": "scalpel.SSA.const.SSA.get_stmt_idents_ctx", "modulename": "scalpel.SSA.const", "qualname": "SSA.get_stmt_idents_ctx", "type": "function", "doc": "<p>Extract the contexual information of each of identifiers. \nFor assignment statements, the assigned values for each of variables will be stored.\nIn addition, the del_set will store all deleted variables. \nArgs:\n    stmt: statement from AST trees.\n    del_set: deleted identifiers\n    const_dict: a mapping relationship between variables and their assigned values in this statement</p>\n", "parameters": ["self", "stmt", "del_set", "const_dict"], "funcdef": "def"}, "scalpel.SSA.const.SSA.to_json": {"fullname": "scalpel.SSA.const.SSA.to_json", "modulename": "scalpel.SSA.const", "qualname": "SSA.to_json", "type": "function", "doc": "<p></p>\n", "parameters": ["self"], "funcdef": "def"}, "scalpel.SSA.const.SSA.print_block": {"fullname": "scalpel.SSA.const.SSA.print_block", "modulename": "scalpel.SSA.const", "qualname": "SSA.print_block", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "block"], "funcdef": "def"}, "scalpel.SSA.const.SSA.compute_idom": {"fullname": "scalpel.SSA.const.SSA.compute_idom", "modulename": "scalpel.SSA.const", "qualname": "SSA.compute_idom", "type": "function", "doc": "<p>Compute immediate immediate dominators for each of blocks\nArgs:\n    ssa_blocks: blocks from a control flow graph.</p>\n", "parameters": ["self", "ssa_blocks"], "funcdef": "def"}, "scalpel.SSA.const.SSA.compute_DF": {"fullname": "scalpel.SSA.const.SSA.compute_DF", "modulename": "scalpel.SSA.const", "qualname": "SSA.compute_DF", "type": "function", "doc": "<p>Compute dominating frontiers for each of blocks\nArgs:\n    ssa_blocks: blocks from a control flow graph.</p>\n", "parameters": ["self", "ssa_blocks"], "funcdef": "def"}, "scalpel.SSA.ssa": {"fullname": "scalpel.SSA.ssa", "modulename": "scalpel.SSA.ssa", "qualname": "", "type": "module", "doc": "<p>In this module, the single static assignment forms are  implemented to allow\nfuther anaysis. The module contain a single class named SSA.</p>\n"}, "scalpel.SSA.ssa.parse_val": {"fullname": "scalpel.SSA.ssa.parse_val", "modulename": "scalpel.SSA.ssa", "qualname": "parse_val", "type": "function", "doc": "<p></p>\n", "parameters": ["node"], "funcdef": "def"}, "scalpel.SSA.ssa.SSA": {"fullname": "scalpel.SSA.ssa.SSA", "modulename": "scalpel.SSA.ssa", "qualname": "SSA", "type": "class", "doc": "<p>Build SSA graph from a given AST node based on the CFG.</p>\n"}, "scalpel.SSA.ssa.SSA.__init__": {"fullname": "scalpel.SSA.ssa.SSA.__init__", "modulename": "scalpel.SSA.ssa", "qualname": "SSA.__init__", "type": "function", "doc": "<p>Args:\n    src: the source code as input.</p>\n", "parameters": ["self", "src"], "funcdef": "def"}, "scalpel.SSA.ssa.SSA.get_global_live_vars": {"fullname": "scalpel.SSA.ssa.SSA.get_global_live_vars", "modulename": "scalpel.SSA.ssa", "qualname": "SSA.get_global_live_vars", "type": "function", "doc": "<p></p>\n", "parameters": ["self"], "funcdef": "def"}, "scalpel.SSA.ssa.SSA.flatten_tuple": {"fullname": "scalpel.SSA.ssa.SSA.flatten_tuple", "modulename": "scalpel.SSA.ssa", "qualname": "SSA.flatten_tuple", "type": "function", "doc": "<p>input: ast tuple object\nreturn a list of elements in the given tuple</p>\n", "parameters": ["ast_tuple"], "funcdef": "def"}, "scalpel.SSA.ssa.SSA.get_attribute_stmts": {"fullname": "scalpel.SSA.ssa.SSA.get_attribute_stmts", "modulename": "scalpel.SSA.ssa", "qualname": "SSA.get_attribute_stmts", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "stmts"], "funcdef": "def"}, "scalpel.SSA.ssa.SSA.get_identifiers": {"fullname": "scalpel.SSA.ssa.SSA.get_identifiers", "modulename": "scalpel.SSA.ssa", "qualname": "SSA.get_identifiers", "type": "function", "doc": "<p>Extract all identifiers from the given AST node.\nArgs:\n    ast_node: AST node.</p>\n", "parameters": ["self", "ast_node"], "funcdef": "def"}, "scalpel.SSA.ssa.SSA.get_stmt_idents_ctx": {"fullname": "scalpel.SSA.ssa.SSA.get_stmt_idents_ctx", "modulename": "scalpel.SSA.ssa", "qualname": "SSA.get_stmt_idents_ctx", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "stmt", "del_set"], "funcdef": "def"}, "scalpel.SSA.ssa.SSA.compute_undefined_names": {"fullname": "scalpel.SSA.ssa.SSA.compute_undefined_names", "modulename": "scalpel.SSA.ssa", "qualname": "SSA.compute_undefined_names", "type": "function", "doc": "<p>generate undefined names from given cfg</p>\n", "parameters": ["self", "cfg", "scope"], "funcdef": "def"}, "scalpel.SSA.ssa.SSA.backward_query_new": {"fullname": "scalpel.SSA.ssa.SSA.backward_query_new", "modulename": "scalpel.SSA.ssa", "qualname": "SSA.backward_query_new", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "block", "ident_name", "visited", "path", "dom", "idom", "dom_stmt_res", "block_ident_gen", "block_ident_del", "condition_cons", "entry_id"], "funcdef": "def"}, "scalpel.SSA.ssa.SSA.hit_scope": {"fullname": "scalpel.SSA.ssa.SSA.hit_scope", "modulename": "scalpel.SSA.ssa", "qualname": "SSA.hit_scope", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "ident_name", "block_ident_gen", "block_ident_unorder"], "funcdef": "def"}, "scalpel.SSA.ssa.SSA.is_undefined": {"fullname": "scalpel.SSA.ssa.SSA.is_undefined", "modulename": "scalpel.SSA.ssa", "qualname": "SSA.is_undefined", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "load_idents"], "funcdef": "def"}, "scalpel.SSA.ssa.SSA.to_json": {"fullname": "scalpel.SSA.ssa.SSA.to_json", "modulename": "scalpel.SSA.ssa", "qualname": "SSA.to_json", "type": "function", "doc": "<p></p>\n", "parameters": ["self"], "funcdef": "def"}, "scalpel.SSA.ssa.SSA.print_block": {"fullname": "scalpel.SSA.ssa.SSA.print_block", "modulename": "scalpel.SSA.ssa", "qualname": "SSA.print_block", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "block"], "funcdef": "def"}, "scalpel.SSA.ssa.SSA.compute_idom": {"fullname": "scalpel.SSA.ssa.SSA.compute_idom", "modulename": "scalpel.SSA.ssa", "qualname": "SSA.compute_idom", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "ssa_blocks"], "funcdef": "def"}, "scalpel.SSA.ssa.SSA.RD": {"fullname": "scalpel.SSA.ssa.SSA.RD", "modulename": "scalpel.SSA.ssa", "qualname": "SSA.RD", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "cfg_blocks"], "funcdef": "def"}, "scalpel.SSA.ssa.SSA.compute_dom_old": {"fullname": "scalpel.SSA.ssa.SSA.compute_dom_old", "modulename": "scalpel.SSA.ssa", "qualname": "SSA.compute_dom_old", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "ssa_blocks"], "funcdef": "def"}, "scalpel.call_graph": {"fullname": "scalpel.call_graph", "modulename": "scalpel.call_graph", "qualname": "", "type": "module", "doc": "<p>A call graph depicts calling relationships between subroutines in a computer program. \nIt is an essential component in most static analysis and can be leveraged to build more sophisicated applications such as profiling, vunerability propagation and refactoring. </p>\n\n<p>Please note scalpel.pycg module is a wrapper of <a href=\"https://pypi.org/project/pycg/\">PyCG</a>. \nIt aims to construct the call graphs for given Python projects. </p>\n\n<p>The basic node can be either a function, a class or a module. \nThe edges represent calling relationships between program nodes.</p>\n"}, "scalpel.call_graph.pycg": {"fullname": "scalpel.call_graph.pycg", "modulename": "scalpel.call_graph.pycg", "qualname": "", "type": "module", "doc": "<p>This file is a wrapper of the pycg, a practical python call graph generator. Please refer to:</p>\n\n<ol>\n<li>https://github.com/vitsalis/PyCG</li>\n<li>https://pypi.org/project/pycg/</li>\n<li>Vitalis Salis, Thodoris Sotiropoulos, Panos Louridas, Diomidis Spinellis and Dimitris Mitropoulos. PyCG: Practical\nCall Graph Generation in Python. In 43rd International Conference on Software Engineering, ICSE '21, 25\u201328 May 2021.</li>\n</ol>\n"}, "scalpel.cfg": {"fullname": "scalpel.cfg", "modulename": "scalpel.cfg", "qualname": "", "type": "module", "doc": "<p>The control-flow graph(CFG) is an essential component in static flow analysis with applications such as program\noptimization and taint analysis.\nscalpel.cfg module is used to construct the control flow graph for given python programs. The basic unit in the CFG,\nBlock, contains a list of sequential statements that can be executed in a program without any control jumps. The Blocks\nare linked by Link objects, which represent control flow jumps between two blocks and contain the jump conditions in\nthe form of an expression. Please see the example diagram a control flow graph <img src=\"https://raw.githubusercontent.com/SMAT-Lab/Scalpel/dev/resources/cfg_example.png\" alt=\"Fibonacci CFG\" /></p>\n"}, "scalpel.cfg.builder": {"fullname": "scalpel.cfg.builder", "modulename": "scalpel.cfg.builder", "qualname": "", "type": "module", "doc": "<p>This implementation is partly adapted from the static cfg project\nhttps://github.com/coetaur0/staticfg</p>\n"}, "scalpel.cfg.builder.is_py38_or_higher": {"fullname": "scalpel.cfg.builder.is_py38_or_higher", "modulename": "scalpel.cfg.builder", "qualname": "is_py38_or_higher", "type": "function", "doc": "<p></p>\n", "parameters": [], "funcdef": "def"}, "scalpel.cfg.builder.invert": {"fullname": "scalpel.cfg.builder.invert", "modulename": "scalpel.cfg.builder", "qualname": "invert", "type": "function", "doc": "<p>Invert the operation in an ast node object (get its negation).\nArgs:\n    node: An ast node object.\nReturns:\n    An ast node object containing the inverse (negation) of the input node.</p>\n", "parameters": ["node"], "funcdef": "def"}, "scalpel.cfg.builder.merge_exitcases": {"fullname": "scalpel.cfg.builder.merge_exitcases", "modulename": "scalpel.cfg.builder", "qualname": "merge_exitcases", "type": "function", "doc": "<p>Merge the exitcases of two Links.</p>\n\n<p>Args:\n    exit1: The exitcase of a Link object.\n    exit2: Another exitcase to merge with exit1.</p>\n\n<p>Returns:\n    The merged exitcases.</p>\n", "parameters": ["exit1", "exit2"], "funcdef": "def"}, "scalpel.cfg.builder.CFGBuilder": {"fullname": "scalpel.cfg.builder.CFGBuilder", "modulename": "scalpel.cfg.builder", "qualname": "CFGBuilder", "type": "class", "doc": "<p>Control flow graph builder.</p>\n\n<p>A control flow graph builder is an ast.NodeVisitor that can walk through\na program's AST and iteratively build the corresponding CFG.</p>\n"}, "scalpel.cfg.builder.CFGBuilder.__init__": {"fullname": "scalpel.cfg.builder.CFGBuilder.__init__", "modulename": "scalpel.cfg.builder", "qualname": "CFGBuilder.__init__", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "separate"], "funcdef": "def"}, "scalpel.cfg.builder.CFGBuilder.build": {"fullname": "scalpel.cfg.builder.CFGBuilder.build", "modulename": "scalpel.cfg.builder", "qualname": "CFGBuilder.build", "type": "function", "doc": "<p>Build a CFG from an AST.</p>\n\n<p>Args:\n    name: The name of the CFG being built.\n    tree: The root of the AST from which the CFG must be built.\n    async: Boolean indicating whether the CFG being built represents an\n           asynchronous function or not. When the CFG of a Python\n           program is being built, it is considered like a synchronous\n           'main' function.\n    entry_id: Value for the id of the entry block of the CFG.</p>\n\n<p>Returns:\n    The CFG produced from the AST.</p>\n", "parameters": ["self", "name", "tree", "asynchr", "entry_id"], "funcdef": "def"}, "scalpel.cfg.builder.CFGBuilder.build_from_src": {"fullname": "scalpel.cfg.builder.CFGBuilder.build_from_src", "modulename": "scalpel.cfg.builder", "qualname": "CFGBuilder.build_from_src", "type": "function", "doc": "<p>Build a CFG from some Python source code.</p>\n\n<p>Args:\n    name: The name of the CFG being built.\n    src: A string containing the source code to build the CFG from.</p>\n\n<p>Returns:\n    The CFG produced from the source code.</p>\n", "parameters": ["self", "name", "src"], "funcdef": "def"}, "scalpel.cfg.builder.CFGBuilder.build_from_file": {"fullname": "scalpel.cfg.builder.CFGBuilder.build_from_file", "modulename": "scalpel.cfg.builder", "qualname": "CFGBuilder.build_from_file", "type": "function", "doc": "<p>Build a CFG from some Python source file.</p>\n\n<p>Args:\n    name: The name of the CFG being built.\n    filepath: The path to the file containing the Python source code\n              to build the CFG from.</p>\n\n<p>Returns:\n    The CFG produced from the source file.</p>\n", "parameters": ["self", "name", "filepath"], "funcdef": "def"}, "scalpel.cfg.builder.CFGBuilder.new_block": {"fullname": "scalpel.cfg.builder.CFGBuilder.new_block", "modulename": "scalpel.cfg.builder", "qualname": "CFGBuilder.new_block", "type": "function", "doc": "<p>Create a new block with a new id.\nReturns:\n    A Block object with a new unique id.</p>\n", "parameters": ["self"], "funcdef": "def"}, "scalpel.cfg.builder.CFGBuilder.add_statement": {"fullname": "scalpel.cfg.builder.CFGBuilder.add_statement", "modulename": "scalpel.cfg.builder", "qualname": "CFGBuilder.add_statement", "type": "function", "doc": "<p>Add a statement to a block.\nArgs:\n    block: A Block object to which a statement must be added.\n    statement: An AST node representing the statement that must be\n               added to the current block.</p>\n", "parameters": ["self", "block", "statement"], "funcdef": "def"}, "scalpel.cfg.builder.CFGBuilder.add_exit": {"fullname": "scalpel.cfg.builder.CFGBuilder.add_exit", "modulename": "scalpel.cfg.builder", "qualname": "CFGBuilder.add_exit", "type": "function", "doc": "<p>Add a new exit to a block.\nArgs:\n    block: A block to which an exit must be added.\n    nextblock: The block to which control jumps from the new exit.\n    exitcase: An AST node representing the 'case' (or condition)\n              leading to the exit from the block in the program.</p>\n", "parameters": ["self", "block", "nextblock", "exitcase"], "funcdef": "def"}, "scalpel.cfg.builder.CFGBuilder.new_loopguard": {"fullname": "scalpel.cfg.builder.CFGBuilder.new_loopguard", "modulename": "scalpel.cfg.builder", "qualname": "CFGBuilder.new_loopguard", "type": "function", "doc": "<p>Create a new block for a loop's guard if the current block is not\nempty. Links the current block to the new loop guard.</p>\n\n<p>Returns:\n    The block to be used as new loop guard.</p>\n", "parameters": ["self"], "funcdef": "def"}, "scalpel.cfg.builder.CFGBuilder.new_functionCFG": {"fullname": "scalpel.cfg.builder.CFGBuilder.new_functionCFG", "modulename": "scalpel.cfg.builder", "qualname": "CFGBuilder.new_functionCFG", "type": "function", "doc": "<p>Create a new sub-CFG for a function definition and add it to the\nfunction CFGs of the CFG being built.</p>\n\n<p>Args:\n    node: The AST node containing the function definition.\n    async: Boolean indicating whether the function for which the CFG is\n           being built is asynchronous or not.</p>\n", "parameters": ["self", "node", "asynchr", "enclosing_block_id"], "funcdef": "def"}, "scalpel.cfg.builder.CFGBuilder.new_ClassCFG": {"fullname": "scalpel.cfg.builder.CFGBuilder.new_ClassCFG", "modulename": "scalpel.cfg.builder", "qualname": "CFGBuilder.new_ClassCFG", "type": "function", "doc": "<p>Create a new sub-CFG for a class definition and add it to the\nfunction CFGs of the CFG being built.</p>\n\n<p>Args:\n    node: The AST node containing the function definition.\n    asynchr: Boolean indicating whether the function for which the CFG is\n           being built is asynchronous or not.</p>\n", "parameters": ["self", "node", "asynchr"], "funcdef": "def"}, "scalpel.cfg.builder.CFGBuilder.clean_cfg": {"fullname": "scalpel.cfg.builder.CFGBuilder.clean_cfg", "modulename": "scalpel.cfg.builder", "qualname": "CFGBuilder.clean_cfg", "type": "function", "doc": "<p>Remove the useless (empty) blocks from a CFG.</p>\n\n<p>Args:\n    block: The block from which to start traversing the CFG to clean\n           it.\n    visited: A list of blocks that already have been visited by\n             clean_cfg (recursive function).</p>\n", "parameters": ["self", "block", "visited"], "funcdef": "def"}, "scalpel.cfg.builder.CFGBuilder.goto_new_block": {"fullname": "scalpel.cfg.builder.CFGBuilder.goto_new_block", "modulename": "scalpel.cfg.builder", "qualname": "CFGBuilder.goto_new_block", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "node"], "funcdef": "def"}, "scalpel.cfg.builder.CFGBuilder.visit_Expr": {"fullname": "scalpel.cfg.builder.CFGBuilder.visit_Expr", "modulename": "scalpel.cfg.builder", "qualname": "CFGBuilder.visit_Expr", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "node"], "funcdef": "def"}, "scalpel.cfg.builder.CFGBuilder.visit_Call": {"fullname": "scalpel.cfg.builder.CFGBuilder.visit_Call", "modulename": "scalpel.cfg.builder", "qualname": "CFGBuilder.visit_Call", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "node"], "funcdef": "def"}, "scalpel.cfg.builder.CFGBuilder.visit_Assign": {"fullname": "scalpel.cfg.builder.CFGBuilder.visit_Assign", "modulename": "scalpel.cfg.builder", "qualname": "CFGBuilder.visit_Assign", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "node"], "funcdef": "def"}, "scalpel.cfg.builder.CFGBuilder.visit_AnnAssign": {"fullname": "scalpel.cfg.builder.CFGBuilder.visit_AnnAssign", "modulename": "scalpel.cfg.builder", "qualname": "CFGBuilder.visit_AnnAssign", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "node"], "funcdef": "def"}, "scalpel.cfg.builder.CFGBuilder.visit_AugAssign": {"fullname": "scalpel.cfg.builder.CFGBuilder.visit_AugAssign", "modulename": "scalpel.cfg.builder", "qualname": "CFGBuilder.visit_AugAssign", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "node"], "funcdef": "def"}, "scalpel.cfg.builder.CFGBuilder.visit_Global": {"fullname": "scalpel.cfg.builder.CFGBuilder.visit_Global", "modulename": "scalpel.cfg.builder", "qualname": "CFGBuilder.visit_Global", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "node"], "funcdef": "def"}, "scalpel.cfg.builder.CFGBuilder.visit_Nonlocal": {"fullname": "scalpel.cfg.builder.CFGBuilder.visit_Nonlocal", "modulename": "scalpel.cfg.builder", "qualname": "CFGBuilder.visit_Nonlocal", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "node"], "funcdef": "def"}, "scalpel.cfg.builder.CFGBuilder.visit_Pass": {"fullname": "scalpel.cfg.builder.CFGBuilder.visit_Pass", "modulename": "scalpel.cfg.builder", "qualname": "CFGBuilder.visit_Pass", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "node"], "funcdef": "def"}, "scalpel.cfg.builder.CFGBuilder.visit_Delete": {"fullname": "scalpel.cfg.builder.CFGBuilder.visit_Delete", "modulename": "scalpel.cfg.builder", "qualname": "CFGBuilder.visit_Delete", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "node"], "funcdef": "def"}, "scalpel.cfg.builder.CFGBuilder.visit_Raise": {"fullname": "scalpel.cfg.builder.CFGBuilder.visit_Raise", "modulename": "scalpel.cfg.builder", "qualname": "CFGBuilder.visit_Raise", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "node"], "funcdef": "def"}, "scalpel.cfg.builder.CFGBuilder.visit_Assert": {"fullname": "scalpel.cfg.builder.CFGBuilder.visit_Assert", "modulename": "scalpel.cfg.builder", "qualname": "CFGBuilder.visit_Assert", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "node"], "funcdef": "def"}, "scalpel.cfg.builder.CFGBuilder.visit_Try": {"fullname": "scalpel.cfg.builder.CFGBuilder.visit_Try", "modulename": "scalpel.cfg.builder", "qualname": "CFGBuilder.visit_Try", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "node"], "funcdef": "def"}, "scalpel.cfg.builder.CFGBuilder.visit_If": {"fullname": "scalpel.cfg.builder.CFGBuilder.visit_If", "modulename": "scalpel.cfg.builder", "qualname": "CFGBuilder.visit_If", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "node"], "funcdef": "def"}, "scalpel.cfg.builder.CFGBuilder.visit_While": {"fullname": "scalpel.cfg.builder.CFGBuilder.visit_While", "modulename": "scalpel.cfg.builder", "qualname": "CFGBuilder.visit_While", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "node"], "funcdef": "def"}, "scalpel.cfg.builder.CFGBuilder.visit_For": {"fullname": "scalpel.cfg.builder.CFGBuilder.visit_For", "modulename": "scalpel.cfg.builder", "qualname": "CFGBuilder.visit_For", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "node"], "funcdef": "def"}, "scalpel.cfg.builder.CFGBuilder.visit_AsyncFor": {"fullname": "scalpel.cfg.builder.CFGBuilder.visit_AsyncFor", "modulename": "scalpel.cfg.builder", "qualname": "CFGBuilder.visit_AsyncFor", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "node"], "funcdef": "def"}, "scalpel.cfg.builder.CFGBuilder.visit_Break": {"fullname": "scalpel.cfg.builder.CFGBuilder.visit_Break", "modulename": "scalpel.cfg.builder", "qualname": "CFGBuilder.visit_Break", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "node"], "funcdef": "def"}, "scalpel.cfg.builder.CFGBuilder.visit_Continue": {"fullname": "scalpel.cfg.builder.CFGBuilder.visit_Continue", "modulename": "scalpel.cfg.builder", "qualname": "CFGBuilder.visit_Continue", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "node"], "funcdef": "def"}, "scalpel.cfg.builder.CFGBuilder.visit_Import": {"fullname": "scalpel.cfg.builder.CFGBuilder.visit_Import", "modulename": "scalpel.cfg.builder", "qualname": "CFGBuilder.visit_Import", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "node"], "funcdef": "def"}, "scalpel.cfg.builder.CFGBuilder.visit_ImportFrom": {"fullname": "scalpel.cfg.builder.CFGBuilder.visit_ImportFrom", "modulename": "scalpel.cfg.builder", "qualname": "CFGBuilder.visit_ImportFrom", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "node"], "funcdef": "def"}, "scalpel.cfg.builder.CFGBuilder.visit_FunctionDef": {"fullname": "scalpel.cfg.builder.CFGBuilder.visit_FunctionDef", "modulename": "scalpel.cfg.builder", "qualname": "CFGBuilder.visit_FunctionDef", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "node"], "funcdef": "def"}, "scalpel.cfg.builder.CFGBuilder.visit_AsyncFunctionDef": {"fullname": "scalpel.cfg.builder.CFGBuilder.visit_AsyncFunctionDef", "modulename": "scalpel.cfg.builder", "qualname": "CFGBuilder.visit_AsyncFunctionDef", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "node"], "funcdef": "def"}, "scalpel.cfg.builder.CFGBuilder.visit_ClassDef": {"fullname": "scalpel.cfg.builder.CFGBuilder.visit_ClassDef", "modulename": "scalpel.cfg.builder", "qualname": "CFGBuilder.visit_ClassDef", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "node"], "funcdef": "def"}, "scalpel.cfg.builder.CFGBuilder.visit_Await": {"fullname": "scalpel.cfg.builder.CFGBuilder.visit_Await", "modulename": "scalpel.cfg.builder", "qualname": "CFGBuilder.visit_Await", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "node"], "funcdef": "def"}, "scalpel.cfg.builder.CFGBuilder.visit_Return": {"fullname": "scalpel.cfg.builder.CFGBuilder.visit_Return", "modulename": "scalpel.cfg.builder", "qualname": "CFGBuilder.visit_Return", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "node"], "funcdef": "def"}, "scalpel.cfg.builder.CFGBuilder.visit_Yield": {"fullname": "scalpel.cfg.builder.CFGBuilder.visit_Yield", "modulename": "scalpel.cfg.builder", "qualname": "CFGBuilder.visit_Yield", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "node"], "funcdef": "def"}, "scalpel.cfg.builder.CFGBuilder.visit_With": {"fullname": "scalpel.cfg.builder.CFGBuilder.visit_With", "modulename": "scalpel.cfg.builder", "qualname": "CFGBuilder.visit_With", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "node"], "funcdef": "def"}, "scalpel.cfg.builder.CFGBuilder.visit_AsyncWith": {"fullname": "scalpel.cfg.builder.CFGBuilder.visit_AsyncWith", "modulename": "scalpel.cfg.builder", "qualname": "CFGBuilder.visit_AsyncWith", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "node"], "funcdef": "def"}, "scalpel.cfg.model": {"fullname": "scalpel.cfg.model", "modulename": "scalpel.cfg.model", "qualname": "", "type": "module", "doc": "<p>Control flow graph for Python programs.</p>\n"}, "scalpel.cfg.model.Block": {"fullname": "scalpel.cfg.model.Block", "modulename": "scalpel.cfg.model", "qualname": "Block", "type": "class", "doc": "<p>Basic block in a control flow graph.</p>\n\n<p>Contains a list of statements executed in a program without any control\njumps. A block of statements is exited through one of its exits. Exits are\na list of Links that represent control flow jumps.</p>\n"}, "scalpel.cfg.model.Block.__init__": {"fullname": "scalpel.cfg.model.Block.__init__", "modulename": "scalpel.cfg.model", "qualname": "Block.__init__", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "id"], "funcdef": "def"}, "scalpel.cfg.model.Block.id": {"fullname": "scalpel.cfg.model.Block.id", "modulename": "scalpel.cfg.model", "qualname": "Block.id", "type": "variable", "doc": "<p></p>\n"}, "scalpel.cfg.model.Block.statements": {"fullname": "scalpel.cfg.model.Block.statements", "modulename": "scalpel.cfg.model", "qualname": "Block.statements", "type": "variable", "doc": "<p></p>\n"}, "scalpel.cfg.model.Block.func_calls": {"fullname": "scalpel.cfg.model.Block.func_calls", "modulename": "scalpel.cfg.model", "qualname": "Block.func_calls", "type": "variable", "doc": "<p></p>\n"}, "scalpel.cfg.model.Block.predecessors": {"fullname": "scalpel.cfg.model.Block.predecessors", "modulename": "scalpel.cfg.model", "qualname": "Block.predecessors", "type": "variable", "doc": "<p></p>\n"}, "scalpel.cfg.model.Block.exits": {"fullname": "scalpel.cfg.model.Block.exits", "modulename": "scalpel.cfg.model", "qualname": "Block.exits", "type": "variable", "doc": "<p></p>\n"}, "scalpel.cfg.model.Block.at": {"fullname": "scalpel.cfg.model.Block.at", "modulename": "scalpel.cfg.model", "qualname": "Block.at", "type": "function", "doc": "<p>Get the line number of the first statement of the block in the program.</p>\n", "parameters": ["self"], "funcdef": "def"}, "scalpel.cfg.model.Block.is_empty": {"fullname": "scalpel.cfg.model.Block.is_empty", "modulename": "scalpel.cfg.model", "qualname": "Block.is_empty", "type": "function", "doc": "<p>Check if the block is empty.\nReturns:\n    A boolean indicating if the block is empty (True) or not (False).</p>\n", "parameters": ["self"], "funcdef": "def"}, "scalpel.cfg.model.Block.strip_comment": {"fullname": "scalpel.cfg.model.Block.strip_comment", "modulename": "scalpel.cfg.model", "qualname": "Block.strip_comment", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "src"], "funcdef": "def"}, "scalpel.cfg.model.Block.get_source": {"fullname": "scalpel.cfg.model.Block.get_source", "modulename": "scalpel.cfg.model", "qualname": "Block.get_source", "type": "function", "doc": "<p>Get a string containing the Python source code corresponding to the\nstatements in the block.\nReturns:\n    A string containing the source code of the statements.</p>\n", "parameters": ["self"], "funcdef": "def"}, "scalpel.cfg.model.Block.get_calls": {"fullname": "scalpel.cfg.model.Block.get_calls", "modulename": "scalpel.cfg.model", "qualname": "Block.get_calls", "type": "function", "doc": "<p>Get a string containing the calls to other functions inside the block.</p>\n\n<p>Returns:\n    A string containing the names of the functions called inside the\n    block.</p>\n", "parameters": ["self"], "funcdef": "def"}, "scalpel.cfg.model.Block.ssa_form": {"fullname": "scalpel.cfg.model.Block.ssa_form", "modulename": "scalpel.cfg.model", "qualname": "Block.ssa_form", "type": "variable", "doc": "<p></p>\n"}, "scalpel.cfg.model.Link": {"fullname": "scalpel.cfg.model.Link", "modulename": "scalpel.cfg.model", "qualname": "Link", "type": "class", "doc": "<p>Link between blocks in a control flow graph.</p>\n\n<p>Represents a control flow jump between two blocks. Contains an exitcase in\nthe form of an expression, representing the case in which the associated\ncontrol jump is made.</p>\n"}, "scalpel.cfg.model.Link.__init__": {"fullname": "scalpel.cfg.model.Link.__init__", "modulename": "scalpel.cfg.model", "qualname": "Link.__init__", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "source", "target", "exitcase"], "funcdef": "def"}, "scalpel.cfg.model.Link.source": {"fullname": "scalpel.cfg.model.Link.source", "modulename": "scalpel.cfg.model", "qualname": "Link.source", "type": "variable", "doc": "<p></p>\n"}, "scalpel.cfg.model.Link.target": {"fullname": "scalpel.cfg.model.Link.target", "modulename": "scalpel.cfg.model", "qualname": "Link.target", "type": "variable", "doc": "<p></p>\n"}, "scalpel.cfg.model.Link.exitcase": {"fullname": "scalpel.cfg.model.Link.exitcase", "modulename": "scalpel.cfg.model", "qualname": "Link.exitcase", "type": "variable", "doc": "<p></p>\n"}, "scalpel.cfg.model.Link.get_exitcase": {"fullname": "scalpel.cfg.model.Link.get_exitcase", "modulename": "scalpel.cfg.model", "qualname": "Link.get_exitcase", "type": "function", "doc": "<p>Get a string containing the Python source code corresponding to the\nexitcase of the Link.</p>\n\n<p>Returns:\n    A string containing the source code.</p>\n", "parameters": ["self"], "funcdef": "def"}, "scalpel.cfg.model.CFG": {"fullname": "scalpel.cfg.model.CFG", "modulename": "scalpel.cfg.model", "qualname": "CFG", "type": "class", "doc": "<p>Control flow graph (CFG).</p>\n\n<p>A control flow graph is composed of basic blocks and links between them\nrepresenting control flow jumps. It has a unique entry block and several\npossible 'final' blocks (blocks with no exits representing the end of the\nCFG).</p>\n"}, "scalpel.cfg.model.CFG.__init__": {"fullname": "scalpel.cfg.model.CFG.__init__", "modulename": "scalpel.cfg.model", "qualname": "CFG.__init__", "type": "function", "doc": "<p>The constructor of CFG class. Only name of this graph is required.</p>\n", "parameters": ["self", "name", "asynchr"], "funcdef": "def"}, "scalpel.cfg.model.CFG.remove_comments": {"fullname": "scalpel.cfg.model.CFG.remove_comments", "modulename": "scalpel.cfg.model", "qualname": "CFG.remove_comments", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "src"], "funcdef": "def"}, "scalpel.cfg.model.CFG.get_all_blocks": {"fullname": "scalpel.cfg.model.CFG.get_all_blocks", "modulename": "scalpel.cfg.model", "qualname": "CFG.get_all_blocks", "type": "function", "doc": "<p>Get a list of code blocks in this CFG; This is generated by BFS order.</p>\n\n<p>Returns:\n    A list of code blocks.</p>\n", "parameters": ["self"], "funcdef": "def"}, "scalpel.cfg.model.CFG.build_visual": {"fullname": "scalpel.cfg.model.CFG.build_visual", "modulename": "scalpel.cfg.model", "qualname": "CFG.build_visual", "type": "function", "doc": "<p>Build a visualisation of the CFG with graphviz and output it in a DOT\nfile.</p>\n\n<p>Args:\n    filename: The name of the output file in which the visualisation\n              must be saved.\n    format: The format to use for the output file (PDF, ...).\n    show: A boolean indicating whether to automatically open the output\n          file after building the visualisation.</p>\n", "parameters": ["self", "format", "calls", "show"], "funcdef": "def"}, "scalpel.core": {"fullname": "scalpel.core", "modulename": "scalpel.core", "qualname": "", "type": "module", "doc": "<p></p>\n"}, "scalpel.core.class_visitor": {"fullname": "scalpel.core.class_visitor", "modulename": "scalpel.core.class_visitor", "qualname": "", "type": "module", "doc": "<p></p>\n"}, "scalpel.core.class_visitor.get_keywords": {"fullname": "scalpel.core.class_visitor.get_keywords", "modulename": "scalpel.core.class_visitor", "qualname": "get_keywords", "type": "function", "doc": "<p></p>\n", "parameters": ["node"], "funcdef": "def"}, "scalpel.core.class_visitor.ClassVisitor": {"fullname": "scalpel.core.class_visitor.ClassVisitor", "modulename": "scalpel.core.class_visitor", "qualname": "ClassVisitor", "type": "class", "doc": "<p>A node visitor base class that walks the abstract syntax tree and calls a\nvisitor function for every node found.  This function may return a value\nwhich is forwarded by the <code>visit</code> method.</p>\n\n<p>This class is meant to be subclassed, with the subclass adding visitor\nmethods.</p>\n\n<p>Per default the visitor functions for the nodes are <code>'visit_'</code> +\nclass name of the node.  So a <code>TryFinally</code> node visit function would\nbe <code>visit_TryFinally</code>.  This behavior can be changed by overriding\nthe <code>visit</code> method.  If no visitor function exists for a node\n(return value <code>None</code>) the <code>generic_visit</code> visitor is used instead.</p>\n\n<p>Don't use the <code>NodeVisitor</code> if you want to apply changes to nodes during\ntraversing.  For this a special visitor exists (<code>NodeTransformer</code>) that\nallows modifications.</p>\n"}, "scalpel.core.class_visitor.ClassVisitor.__init__": {"fullname": "scalpel.core.class_visitor.ClassVisitor.__init__", "modulename": "scalpel.core.class_visitor", "qualname": "ClassVisitor.__init__", "type": "function", "doc": "<p></p>\n", "parameters": ["self"], "funcdef": "def"}, "scalpel.core.class_visitor.ClassVisitor.visit_FunctionDef": {"fullname": "scalpel.core.class_visitor.ClassVisitor.visit_FunctionDef", "modulename": "scalpel.core.class_visitor", "qualname": "ClassVisitor.visit_FunctionDef", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "node"], "funcdef": "def"}, "scalpel.core.fun_def_visitor": {"fullname": "scalpel.core.fun_def_visitor", "modulename": "scalpel.core.fun_def_visitor", "qualname": "", "type": "module", "doc": "<p></p>\n"}, "scalpel.core.fun_def_visitor.FunDefVisitor": {"fullname": "scalpel.core.fun_def_visitor.FunDefVisitor", "modulename": "scalpel.core.fun_def_visitor", "qualname": "FunDefVisitor", "type": "class", "doc": "<p>A node visitor base class that walks the abstract syntax tree and calls a\nvisitor function for every node found.  This function may return a value\nwhich is forwarded by the <code>visit</code> method.</p>\n\n<p>This class is meant to be subclassed, with the subclass adding visitor\nmethods.</p>\n\n<p>Per default the visitor functions for the nodes are <code>'visit_'</code> +\nclass name of the node.  So a <code>TryFinally</code> node visit function would\nbe <code>visit_TryFinally</code>.  This behavior can be changed by overriding\nthe <code>visit</code> method.  If no visitor function exists for a node\n(return value <code>None</code>) the <code>generic_visit</code> visitor is used instead.</p>\n\n<p>Don't use the <code>NodeVisitor</code> if you want to apply changes to nodes during\ntraversing.  For this a special visitor exists (<code>NodeTransformer</code>) that\nallows modifications.</p>\n"}, "scalpel.core.fun_def_visitor.FunDefVisitor.__init__": {"fullname": "scalpel.core.fun_def_visitor.FunDefVisitor.__init__", "modulename": "scalpel.core.fun_def_visitor", "qualname": "FunDefVisitor.__init__", "type": "function", "doc": "<p></p>\n", "parameters": ["self"], "funcdef": "def"}, "scalpel.core.fun_def_visitor.FunDefVisitor.visit": {"fullname": "scalpel.core.fun_def_visitor.FunDefVisitor.visit", "modulename": "scalpel.core.fun_def_visitor", "qualname": "FunDefVisitor.visit", "type": "function", "doc": "<p>Visit a node.</p>\n", "parameters": ["self", "node"], "funcdef": "def"}, "scalpel.core.fun_def_visitor.FunDefVisitor.visit_Args": {"fullname": "scalpel.core.fun_def_visitor.FunDefVisitor.visit_Args", "modulename": "scalpel.core.fun_def_visitor", "qualname": "FunDefVisitor.visit_Args", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "node"], "funcdef": "def"}, "scalpel.core.func_call_visitor": {"fullname": "scalpel.core.func_call_visitor", "modulename": "scalpel.core.func_call_visitor", "qualname": "", "type": "module", "doc": "<p></p>\n"}, "scalpel.core.func_call_visitor.is_py38_or_higher": {"fullname": "scalpel.core.func_call_visitor.is_py38_or_higher", "modulename": "scalpel.core.func_call_visitor", "qualname": "is_py38_or_higher", "type": "function", "doc": "<p></p>\n", "parameters": [], "funcdef": "def"}, "scalpel.core.func_call_visitor.CallTransformer": {"fullname": "scalpel.core.func_call_visitor.CallTransformer", "modulename": "scalpel.core.func_call_visitor", "qualname": "CallTransformer", "type": "class", "doc": "<p>A :class:<code>NodeVisitor</code> subclass that walks the abstract syntax tree and\nallows modification of nodes.</p>\n\n<p>The <code>NodeTransformer</code> will walk the AST and use the return value of the\nvisitor methods to replace or remove the old node.  If the return value of\nthe visitor method is <code>None</code>, the node will be removed from its location,\notherwise it is replaced with the return value.  The return value may be the\noriginal node in which case no replacement takes place.</p>\n\n<p>Here is an example transformer that rewrites all occurrences of name lookups\n(<code>foo</code>) to <code>data['foo']</code>::</p>\n\n<p>class RewriteName(NodeTransformer):</p>\n\n<pre><code>   def visit_Name(self, node):\n       return copy_location(Subscript(\n           value=Name(id='data', ctx=Load()),\n           slice=Index(value=Str(s=node.id)),\n           ctx=node.ctx\n       ), node)\n</code></pre>\n\n<p>Keep in mind that if the node you're operating on has child nodes you must\neither transform the child nodes yourself or call the :meth:<code>generic_visit</code>\nmethod for the node first.</p>\n\n<p>For nodes that were part of a collection of statements (that applies to all\nstatement nodes), the visitor may also return a list of nodes rather than\njust a single node.</p>\n\n<p>Usually you use the transformer like this::</p>\n\n<p>node = YourTransformer().visit(node)</p>\n"}, "scalpel.core.func_call_visitor.CallTransformer.__init__": {"fullname": "scalpel.core.func_call_visitor.CallTransformer.__init__", "modulename": "scalpel.core.func_call_visitor", "qualname": "CallTransformer.__init__", "type": "function", "doc": "<p></p>\n", "parameters": ["self"], "funcdef": "def"}, "scalpel.core.func_call_visitor.CallTransformer.visit_Attribute": {"fullname": "scalpel.core.func_call_visitor.CallTransformer.visit_Attribute", "modulename": "scalpel.core.func_call_visitor", "qualname": "CallTransformer.visit_Attribute", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "node"], "funcdef": "def"}, "scalpel.core.func_call_visitor.CallTransformer.param2str": {"fullname": "scalpel.core.func_call_visitor.CallTransformer.param2str", "modulename": "scalpel.core.func_call_visitor", "qualname": "CallTransformer.param2str", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "param"], "funcdef": "def"}, "scalpel.core.func_call_visitor.CallTransformer.visit_Call": {"fullname": "scalpel.core.func_call_visitor.CallTransformer.visit_Call", "modulename": "scalpel.core.func_call_visitor", "qualname": "CallTransformer.visit_Call", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "node"], "funcdef": "def"}, "scalpel.core.func_call_visitor.FuncCallVisitor": {"fullname": "scalpel.core.func_call_visitor.FuncCallVisitor", "modulename": "scalpel.core.func_call_visitor", "qualname": "FuncCallVisitor", "type": "class", "doc": "<p>A node visitor base class that walks the abstract syntax tree and calls a\nvisitor function for every node found.  This function may return a value\nwhich is forwarded by the <code>visit</code> method.</p>\n\n<p>This class is meant to be subclassed, with the subclass adding visitor\nmethods.</p>\n\n<p>Per default the visitor functions for the nodes are <code>'visit_'</code> +\nclass name of the node.  So a <code>TryFinally</code> node visit function would\nbe <code>visit_TryFinally</code>.  This behavior can be changed by overriding\nthe <code>visit</code> method.  If no visitor function exists for a node\n(return value <code>None</code>) the <code>generic_visit</code> visitor is used instead.</p>\n\n<p>Don't use the <code>NodeVisitor</code> if you want to apply changes to nodes during\ntraversing.  For this a special visitor exists (<code>NodeTransformer</code>) that\nallows modifications.</p>\n"}, "scalpel.core.func_call_visitor.FuncCallVisitor.__init__": {"fullname": "scalpel.core.func_call_visitor.FuncCallVisitor.__init__", "modulename": "scalpel.core.func_call_visitor", "qualname": "FuncCallVisitor.__init__", "type": "function", "doc": "<p></p>\n", "parameters": ["self"], "funcdef": "def"}, "scalpel.core.func_call_visitor.FuncCallVisitor.clear": {"fullname": "scalpel.core.func_call_visitor.FuncCallVisitor.clear", "modulename": "scalpel.core.func_call_visitor", "qualname": "FuncCallVisitor.clear", "type": "function", "doc": "<p></p>\n", "parameters": ["self"], "funcdef": "def"}, "scalpel.core.func_call_visitor.FuncCallVisitor.name": {"fullname": "scalpel.core.func_call_visitor.FuncCallVisitor.name", "modulename": "scalpel.core.func_call_visitor", "qualname": "FuncCallVisitor.name", "type": "variable", "doc": "<p></p>\n"}, "scalpel.core.func_call_visitor.FuncCallVisitor.visit_Name": {"fullname": "scalpel.core.func_call_visitor.FuncCallVisitor.visit_Name", "modulename": "scalpel.core.func_call_visitor", "qualname": "FuncCallVisitor.visit_Name", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "node"], "funcdef": "def"}, "scalpel.core.func_call_visitor.FuncCallVisitor.visit_Attribute": {"fullname": "scalpel.core.func_call_visitor.FuncCallVisitor.visit_Attribute", "modulename": "scalpel.core.func_call_visitor", "qualname": "FuncCallVisitor.visit_Attribute", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "node"], "funcdef": "def"}, "scalpel.core.func_call_visitor.FuncCallVisitor.visit_Call": {"fullname": "scalpel.core.func_call_visitor.FuncCallVisitor.visit_Call", "modulename": "scalpel.core.func_call_visitor", "qualname": "FuncCallVisitor.visit_Call", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "node"], "funcdef": "def"}, "scalpel.core.func_call_visitor.get_args": {"fullname": "scalpel.core.func_call_visitor.get_args", "modulename": "scalpel.core.func_call_visitor", "qualname": "get_args", "type": "function", "doc": "<p></p>\n", "parameters": ["node"], "funcdef": "def"}, "scalpel.core.func_call_visitor.get_call_type": {"fullname": "scalpel.core.func_call_visitor.get_call_type", "modulename": "scalpel.core.func_call_visitor", "qualname": "get_call_type", "type": "function", "doc": "<p></p>\n", "parameters": ["tree"], "funcdef": "def"}, "scalpel.core.func_call_visitor.get_func_calls": {"fullname": "scalpel.core.func_call_visitor.get_func_calls", "modulename": "scalpel.core.func_call_visitor", "qualname": "get_func_calls", "type": "function", "doc": "<p></p>\n", "parameters": ["tree"], "funcdef": "def"}, "scalpel.core.kw_visitor": {"fullname": "scalpel.core.kw_visitor", "modulename": "scalpel.core.kw_visitor", "qualname": "", "type": "module", "doc": "<p></p>\n"}, "scalpel.core.kw_visitor.KWVisitor": {"fullname": "scalpel.core.kw_visitor.KWVisitor", "modulename": "scalpel.core.kw_visitor", "qualname": "KWVisitor", "type": "class", "doc": "<p>A node visitor base class that walks the abstract syntax tree and calls a\nvisitor function for every node found.  This function may return a value\nwhich is forwarded by the <code>visit</code> method.</p>\n\n<p>This class is meant to be subclassed, with the subclass adding visitor\nmethods.</p>\n\n<p>Per default the visitor functions for the nodes are <code>'visit_'</code> +\nclass name of the node.  So a <code>TryFinally</code> node visit function would\nbe <code>visit_TryFinally</code>.  This behavior can be changed by overriding\nthe <code>visit</code> method.  If no visitor function exists for a node\n(return value <code>None</code>) the <code>generic_visit</code> visitor is used instead.</p>\n\n<p>Don't use the <code>NodeVisitor</code> if you want to apply changes to nodes during\ntraversing.  For this a special visitor exists (<code>NodeTransformer</code>) that\nallows modifications.</p>\n"}, "scalpel.core.kw_visitor.KWVisitor.__init__": {"fullname": "scalpel.core.kw_visitor.KWVisitor.__init__", "modulename": "scalpel.core.kw_visitor", "qualname": "KWVisitor.__init__", "type": "function", "doc": "<p></p>\n", "parameters": ["self"], "funcdef": "def"}, "scalpel.core.kw_visitor.KWVisitor.visit_keyword": {"fullname": "scalpel.core.kw_visitor.KWVisitor.visit_keyword", "modulename": "scalpel.core.kw_visitor", "qualname": "KWVisitor.visit_keyword", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "node"], "funcdef": "def"}, "scalpel.core.mnode": {"fullname": "scalpel.core.mnode", "modulename": "scalpel.core.mnode", "qualname": "", "type": "module", "doc": "<p>In this module, Scalplel provides the interface to users. Each of Python source\nfiles are fed into this module to generate an frontend object for both parsing\nand code instrumentation. In addition, scope information can also be given for\nfine-grained operations.</p>\n"}, "scalpel.core.mnode.get_attr_name": {"fullname": "scalpel.core.mnode.get_attr_name", "modulename": "scalpel.core.mnode", "qualname": "get_attr_name", "type": "function", "doc": "<p></p>\n", "parameters": ["node"], "funcdef": "def"}, "scalpel.core.mnode.ImportRelation": {"fullname": "scalpel.core.mnode.ImportRelation", "modulename": "scalpel.core.mnode", "qualname": "ImportRelation", "type": "class", "doc": "<p></p>\n"}, "scalpel.core.mnode.ImportRelation.__init__": {"fullname": "scalpel.core.mnode.ImportRelation.__init__", "modulename": "scalpel.core.mnode", "qualname": "ImportRelation.__init__", "type": "function", "doc": "<p></p>\n", "parameters": ["self"], "funcdef": "def"}, "scalpel.core.mnode.MNode": {"fullname": "scalpel.core.mnode.MNode", "modulename": "scalpel.core.mnode", "qualname": "MNode", "type": "class", "doc": "<p>Build a Module node  of the given input source file with publicaly APIs to\nmanipulate for parsing and  code instrumentation\nfile.</p>\n"}, "scalpel.core.mnode.MNode.__init__": {"fullname": "scalpel.core.mnode.MNode.__init__", "modulename": "scalpel.core.mnode", "qualname": "MNode.__init__", "type": "function", "doc": "<p>Args:\n    name: The filename of the input source file.</p>\n", "parameters": ["self", "name"], "funcdef": "def"}, "scalpel.core.mnode.MNode.rewrite": {"fullname": "scalpel.core.mnode.MNode.rewrite", "modulename": "scalpel.core.mnode", "qualname": "MNode.rewrite", "type": "function", "doc": "<p>rewrite code</p>\n", "parameters": ["self", "scope"], "funcdef": "def"}, "scalpel.core.mnode.MNode.parse_vars": {"fullname": "scalpel.core.mnode.MNode.parse_vars", "modulename": "scalpel.core.mnode", "qualname": "MNode.parse_vars", "type": "function", "doc": "<p>Returns a list of variable records ranking by their line numbers\nArgs:\n    scope: a dotted string to provide name space. For instance, A.fun\n    means to retreive the function named fun in the class A</p>\n", "parameters": ["self", "scope"], "funcdef": "def"}, "scalpel.core.mnode.MNode.gen_import_relations": {"fullname": "scalpel.core.mnode.MNode.gen_import_relations", "modulename": "scalpel.core.mnode", "qualname": "MNode.gen_import_relations", "type": "function", "doc": "<p></p>\n", "parameters": [], "funcdef": "def"}, "scalpel.core.mnode.MNode.parse_func_calls": {"fullname": "scalpel.core.mnode.MNode.parse_func_calls", "modulename": "scalpel.core.mnode", "qualname": "MNode.parse_func_calls", "type": "function", "doc": "<p>Returns a list of function calls ranking by their line numbers\nArgs:\n    scope: a dotted string to provide name space. For instance, A.fun\n    means to retreive the function named fun in the class A</p>\n", "parameters": ["self", "scope"], "funcdef": "def"}, "scalpel.core.mnode.MNode.gen_ast": {"fullname": "scalpel.core.mnode.MNode.gen_ast", "modulename": "scalpel.core.mnode", "qualname": "MNode.gen_ast", "type": "function", "doc": "<p>Build AST tree for th source</p>\n", "parameters": ["self"], "funcdef": "def"}, "scalpel.core.mnode.MNode.parse_func_defs": {"fullname": "scalpel.core.mnode.MNode.parse_func_defs", "modulename": "scalpel.core.mnode", "qualname": "MNode.parse_func_defs", "type": "function", "doc": "<p>Return a list of dictionaries, each of its item is a dictionary of\nfunction/class definition information.</p>\n", "parameters": ["self"], "funcdef": "def"}, "scalpel.core.mnode.MNode.parse_import_stmts": {"fullname": "scalpel.core.mnode.MNode.parse_import_stmts", "modulename": "scalpel.core.mnode", "qualname": "MNode.parse_import_stmts", "type": "function", "doc": "<p>Return a dictionary data structure to map the imported name, from which\nmodule and its aliases.</p>\n", "parameters": ["self"], "funcdef": "def"}, "scalpel.core.mnode.MNode.retrieve_meta": {"fullname": "scalpel.core.mnode.MNode.retrieve_meta", "modulename": "scalpel.core.mnode", "qualname": "MNode.retrieve_meta", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "node"], "funcdef": "def"}, "scalpel.core.mnode.MNode.gen_cfg": {"fullname": "scalpel.core.mnode.MNode.gen_cfg", "modulename": "scalpel.core.mnode", "qualname": "MNode.gen_cfg", "type": "function", "doc": "<p></p>\n", "parameters": ["self"], "funcdef": "def"}, "scalpel.core.mnode.MNode.make_unit_walker": {"fullname": "scalpel.core.mnode.MNode.make_unit_walker", "modulename": "scalpel.core.mnode", "qualname": "MNode.make_unit_walker", "type": "function", "doc": "<p>Returns a generator of units at statement level</p>\n", "parameters": ["self"], "funcdef": "def"}, "scalpel.core.source_visitor": {"fullname": "scalpel.core.source_visitor", "modulename": "scalpel.core.source_visitor", "qualname": "", "type": "module", "doc": "<p></p>\n"}, "scalpel.core.source_visitor.get_keywords": {"fullname": "scalpel.core.source_visitor.get_keywords", "modulename": "scalpel.core.source_visitor", "qualname": "get_keywords", "type": "function", "doc": "<p></p>\n", "parameters": ["node"], "funcdef": "def"}, "scalpel.core.source_visitor.SourceVisitor": {"fullname": "scalpel.core.source_visitor.SourceVisitor", "modulename": "scalpel.core.source_visitor", "qualname": "SourceVisitor", "type": "class", "doc": "<p>A node visitor base class that walks the abstract syntax tree and calls a\nvisitor function for every node found.  This function may return a value\nwhich is forwarded by the <code>visit</code> method.</p>\n\n<p>This class is meant to be subclassed, with the subclass adding visitor\nmethods.</p>\n\n<p>Per default the visitor functions for the nodes are <code>'visit_'</code> +\nclass name of the node.  So a <code>TryFinally</code> node visit function would\nbe <code>visit_TryFinally</code>.  This behavior can be changed by overriding\nthe <code>visit</code> method.  If no visitor function exists for a node\n(return value <code>None</code>) the <code>generic_visit</code> visitor is used instead.</p>\n\n<p>Don't use the <code>NodeVisitor</code> if you want to apply changes to nodes during\ntraversing.  For this a special visitor exists (<code>NodeTransformer</code>) that\nallows modifications.</p>\n"}, "scalpel.core.source_visitor.SourceVisitor.__init__": {"fullname": "scalpel.core.source_visitor.SourceVisitor.__init__", "modulename": "scalpel.core.source_visitor", "qualname": "SourceVisitor.__init__", "type": "function", "doc": "<p></p>\n", "parameters": ["self"], "funcdef": "def"}, "scalpel.core.source_visitor.SourceVisitor.visit_FunctionDef": {"fullname": "scalpel.core.source_visitor.SourceVisitor.visit_FunctionDef", "modulename": "scalpel.core.source_visitor", "qualname": "SourceVisitor.visit_FunctionDef", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "node"], "funcdef": "def"}, "scalpel.core.source_visitor.SourceVisitor.visit_ClassDef": {"fullname": "scalpel.core.source_visitor.SourceVisitor.visit_ClassDef", "modulename": "scalpel.core.source_visitor", "qualname": "SourceVisitor.visit_ClassDef", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "node"], "funcdef": "def"}, "scalpel.core.util": {"fullname": "scalpel.core.util", "modulename": "scalpel.core.util", "qualname": "", "type": "module", "doc": "<p></p>\n"}, "scalpel.core.util.iter_fields": {"fullname": "scalpel.core.util.iter_fields", "modulename": "scalpel.core.util", "qualname": "iter_fields", "type": "function", "doc": "<p>Yield a tuple of <code>(fieldname, value)</code> for each field in <code>node._fields</code>\nthat is present on <em>node</em>.</p>\n", "parameters": ["node"], "funcdef": "def"}, "scalpel.core.util.iter_child_nodes": {"fullname": "scalpel.core.util.iter_child_nodes", "modulename": "scalpel.core.util", "qualname": "iter_child_nodes", "type": "function", "doc": "<p>Yield all direct child nodes of <em>node</em>, that is, all fields that are nodes\nand all items of fields that are lists of nodes.</p>\n", "parameters": ["node"], "funcdef": "def"}, "scalpel.core.util.iter_stmt_children": {"fullname": "scalpel.core.util.iter_stmt_children", "modulename": "scalpel.core.util", "qualname": "iter_stmt_children", "type": "function", "doc": "<p>Yield all direct child nodes of <em>node</em>, that is, all fields that are nodes\nand all items of fields that are lists of nodes.</p>\n", "parameters": ["node"], "funcdef": "def"}, "scalpel.core.util.find_local_modules": {"fullname": "scalpel.core.util.find_local_modules", "modulename": "scalpel.core.util", "qualname": "find_local_modules", "type": "function", "doc": "<p></p>\n", "parameters": ["import_smts"], "funcdef": "def"}, "scalpel.core.util.get_path_by_extension": {"fullname": "scalpel.core.util.get_path_by_extension", "modulename": "scalpel.core.util", "qualname": "get_path_by_extension", "type": "function", "doc": "<p></p>\n", "parameters": ["root_dir", "num_of_required_paths", "flag"], "funcdef": "def"}, "scalpel.core.util.Unit": {"fullname": "scalpel.core.util.Unit", "modulename": "scalpel.core.util", "qualname": "Unit", "type": "class", "doc": "<p></p>\n"}, "scalpel.core.util.Unit.__init__": {"fullname": "scalpel.core.util.Unit.__init__", "modulename": "scalpel.core.util", "qualname": "Unit.__init__", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "node", "parent"], "funcdef": "def"}, "scalpel.core.util.Unit.search_for_pos": {"fullname": "scalpel.core.util.Unit.search_for_pos", "modulename": "scalpel.core.util", "qualname": "Unit.search_for_pos", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "stmt_lst", "current_stmt"], "funcdef": "def"}, "scalpel.core.util.Unit.insert_stmt_before": {"fullname": "scalpel.core.util.Unit.insert_stmt_before", "modulename": "scalpel.core.util", "qualname": "Unit.insert_stmt_before", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "new_stmt"], "funcdef": "def"}, "scalpel.core.util.Unit.insert_stmts_before": {"fullname": "scalpel.core.util.Unit.insert_stmts_before", "modulename": "scalpel.core.util", "qualname": "Unit.insert_stmts_before", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "new_stmts"], "funcdef": "def"}, "scalpel.core.util.Unit.insert_after": {"fullname": "scalpel.core.util.Unit.insert_after", "modulename": "scalpel.core.util", "qualname": "Unit.insert_after", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "new_stmt"], "funcdef": "def"}, "scalpel.core.util.Unit.remove": {"fullname": "scalpel.core.util.Unit.remove", "modulename": "scalpel.core.util", "qualname": "Unit.remove", "type": "function", "doc": "<p></p>\n", "parameters": [], "funcdef": "def"}, "scalpel.core.util.Unit.replace": {"fullname": "scalpel.core.util.Unit.replace", "modulename": "scalpel.core.util", "qualname": "Unit.replace", "type": "function", "doc": "<p></p>\n", "parameters": [], "funcdef": "def"}, "scalpel.core.util.UnitWalker": {"fullname": "scalpel.core.util.UnitWalker", "modulename": "scalpel.core.util", "qualname": "UnitWalker", "type": "function", "doc": "<p></p>\n", "parameters": ["module_node"], "funcdef": "def"}, "scalpel.core.util.StmtIterator": {"fullname": "scalpel.core.util.StmtIterator", "modulename": "scalpel.core.util", "qualname": "StmtIterator", "type": "class", "doc": "<p></p>\n"}, "scalpel.core.util.StmtIterator.__init__": {"fullname": "scalpel.core.util.StmtIterator.__init__", "modulename": "scalpel.core.util", "qualname": "StmtIterator.__init__", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "src"], "funcdef": "def"}, "scalpel.core.util.StmtIterator.insert_before": {"fullname": "scalpel.core.util.StmtIterator.insert_before", "modulename": "scalpel.core.util", "qualname": "StmtIterator.insert_before", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "new_stmt"], "funcdef": "def"}, "scalpel.core.util.StmtIterator.insert_after": {"fullname": "scalpel.core.util.StmtIterator.insert_after", "modulename": "scalpel.core.util", "qualname": "StmtIterator.insert_after", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "new_stmt"], "funcdef": "def"}, "scalpel.core.util.StmtIterator.remove": {"fullname": "scalpel.core.util.StmtIterator.remove", "modulename": "scalpel.core.util", "qualname": "StmtIterator.remove", "type": "function", "doc": "<p></p>\n", "parameters": ["self"], "funcdef": "def"}, "scalpel.core.util.StmtIterator.replace": {"fullname": "scalpel.core.util.StmtIterator.replace", "modulename": "scalpel.core.util", "qualname": "StmtIterator.replace", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "new_stmt"], "funcdef": "def"}, "scalpel.core.vars_visitor": {"fullname": "scalpel.core.vars_visitor", "modulename": "scalpel.core.vars_visitor", "qualname": "", "type": "module", "doc": "<p></p>\n"}, "scalpel.core.vars_visitor.VarsVisitor": {"fullname": "scalpel.core.vars_visitor.VarsVisitor", "modulename": "scalpel.core.vars_visitor", "qualname": "VarsVisitor", "type": "class", "doc": "<p>A node visitor base class that walks the abstract syntax tree and calls a\nvisitor function for every node found.  This function may return a value\nwhich is forwarded by the <code>visit</code> method.</p>\n\n<p>This class is meant to be subclassed, with the subclass adding visitor\nmethods.</p>\n\n<p>Per default the visitor functions for the nodes are <code>'visit_'</code> +\nclass name of the node.  So a <code>TryFinally</code> node visit function would\nbe <code>visit_TryFinally</code>.  This behavior can be changed by overriding\nthe <code>visit</code> method.  If no visitor function exists for a node\n(return value <code>None</code>) the <code>generic_visit</code> visitor is used instead.</p>\n\n<p>Don't use the <code>NodeVisitor</code> if you want to apply changes to nodes during\ntraversing.  For this a special visitor exists (<code>NodeTransformer</code>) that\nallows modifications.</p>\n"}, "scalpel.core.vars_visitor.VarsVisitor.__init__": {"fullname": "scalpel.core.vars_visitor.VarsVisitor.__init__", "modulename": "scalpel.core.vars_visitor", "qualname": "VarsVisitor.__init__", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "skip_call_name"], "funcdef": "def"}, "scalpel.core.vars_visitor.VarsVisitor.visit_Name": {"fullname": "scalpel.core.vars_visitor.VarsVisitor.visit_Name", "modulename": "scalpel.core.vars_visitor", "qualname": "VarsVisitor.visit_Name", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "node"], "funcdef": "def"}, "scalpel.core.vars_visitor.VarsVisitor.visit_BoolOp": {"fullname": "scalpel.core.vars_visitor.VarsVisitor.visit_BoolOp", "modulename": "scalpel.core.vars_visitor", "qualname": "VarsVisitor.visit_BoolOp", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "node"], "funcdef": "def"}, "scalpel.core.vars_visitor.VarsVisitor.visit_BinOp": {"fullname": "scalpel.core.vars_visitor.VarsVisitor.visit_BinOp", "modulename": "scalpel.core.vars_visitor", "qualname": "VarsVisitor.visit_BinOp", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "node"], "funcdef": "def"}, "scalpel.core.vars_visitor.VarsVisitor.visit_UnaryOp": {"fullname": "scalpel.core.vars_visitor.VarsVisitor.visit_UnaryOp", "modulename": "scalpel.core.vars_visitor", "qualname": "VarsVisitor.visit_UnaryOp", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "node"], "funcdef": "def"}, "scalpel.core.vars_visitor.VarsVisitor.visit_Lambda": {"fullname": "scalpel.core.vars_visitor.VarsVisitor.visit_Lambda", "modulename": "scalpel.core.vars_visitor", "qualname": "VarsVisitor.visit_Lambda", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "node"], "funcdef": "def"}, "scalpel.core.vars_visitor.VarsVisitor.visit_IfExp": {"fullname": "scalpel.core.vars_visitor.VarsVisitor.visit_IfExp", "modulename": "scalpel.core.vars_visitor", "qualname": "VarsVisitor.visit_IfExp", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "node"], "funcdef": "def"}, "scalpel.core.vars_visitor.VarsVisitor.visit_Dict": {"fullname": "scalpel.core.vars_visitor.VarsVisitor.visit_Dict", "modulename": "scalpel.core.vars_visitor", "qualname": "VarsVisitor.visit_Dict", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "node"], "funcdef": "def"}, "scalpel.core.vars_visitor.VarsVisitor.visit_Set": {"fullname": "scalpel.core.vars_visitor.VarsVisitor.visit_Set", "modulename": "scalpel.core.vars_visitor", "qualname": "VarsVisitor.visit_Set", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "node"], "funcdef": "def"}, "scalpel.core.vars_visitor.VarsVisitor.comprehension": {"fullname": "scalpel.core.vars_visitor.VarsVisitor.comprehension", "modulename": "scalpel.core.vars_visitor", "qualname": "VarsVisitor.comprehension", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "node"], "funcdef": "def"}, "scalpel.core.vars_visitor.VarsVisitor.visit_ListComp": {"fullname": "scalpel.core.vars_visitor.VarsVisitor.visit_ListComp", "modulename": "scalpel.core.vars_visitor", "qualname": "VarsVisitor.visit_ListComp", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "node"], "funcdef": "def"}, "scalpel.core.vars_visitor.VarsVisitor.visit_SetComp": {"fullname": "scalpel.core.vars_visitor.VarsVisitor.visit_SetComp", "modulename": "scalpel.core.vars_visitor", "qualname": "VarsVisitor.visit_SetComp", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "node"], "funcdef": "def"}, "scalpel.core.vars_visitor.VarsVisitor.visit_DictComp": {"fullname": "scalpel.core.vars_visitor.VarsVisitor.visit_DictComp", "modulename": "scalpel.core.vars_visitor", "qualname": "VarsVisitor.visit_DictComp", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "node"], "funcdef": "def"}, "scalpel.core.vars_visitor.VarsVisitor.visit_GeneratorComp": {"fullname": "scalpel.core.vars_visitor.VarsVisitor.visit_GeneratorComp", "modulename": "scalpel.core.vars_visitor", "qualname": "VarsVisitor.visit_GeneratorComp", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "node"], "funcdef": "def"}, "scalpel.core.vars_visitor.VarsVisitor.visit_Yield": {"fullname": "scalpel.core.vars_visitor.VarsVisitor.visit_Yield", "modulename": "scalpel.core.vars_visitor", "qualname": "VarsVisitor.visit_Yield", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "node"], "funcdef": "def"}, "scalpel.core.vars_visitor.VarsVisitor.visit_YieldFrom": {"fullname": "scalpel.core.vars_visitor.VarsVisitor.visit_YieldFrom", "modulename": "scalpel.core.vars_visitor", "qualname": "VarsVisitor.visit_YieldFrom", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "node"], "funcdef": "def"}, "scalpel.core.vars_visitor.VarsVisitor.visit_Compare": {"fullname": "scalpel.core.vars_visitor.VarsVisitor.visit_Compare", "modulename": "scalpel.core.vars_visitor", "qualname": "VarsVisitor.visit_Compare", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "node"], "funcdef": "def"}, "scalpel.core.vars_visitor.VarsVisitor.visit_Call": {"fullname": "scalpel.core.vars_visitor.VarsVisitor.visit_Call", "modulename": "scalpel.core.vars_visitor", "qualname": "VarsVisitor.visit_Call", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "node"], "funcdef": "def"}, "scalpel.core.vars_visitor.VarsVisitor.visit_keyword": {"fullname": "scalpel.core.vars_visitor.VarsVisitor.visit_keyword", "modulename": "scalpel.core.vars_visitor", "qualname": "VarsVisitor.visit_keyword", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "node"], "funcdef": "def"}, "scalpel.core.vars_visitor.VarsVisitor.visit_Attribute": {"fullname": "scalpel.core.vars_visitor.VarsVisitor.visit_Attribute", "modulename": "scalpel.core.vars_visitor", "qualname": "VarsVisitor.visit_Attribute", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "node"], "funcdef": "def"}, "scalpel.core.vars_visitor.VarsVisitor.get_attr_name": {"fullname": "scalpel.core.vars_visitor.VarsVisitor.get_attr_name", "modulename": "scalpel.core.vars_visitor", "qualname": "VarsVisitor.get_attr_name", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "node"], "funcdef": "def"}, "scalpel.core.vars_visitor.VarsVisitor.slicev": {"fullname": "scalpel.core.vars_visitor.VarsVisitor.slicev", "modulename": "scalpel.core.vars_visitor", "qualname": "VarsVisitor.slicev", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "node"], "funcdef": "def"}, "scalpel.core.vars_visitor.VarsVisitor.visit_Subscript": {"fullname": "scalpel.core.vars_visitor.VarsVisitor.visit_Subscript", "modulename": "scalpel.core.vars_visitor", "qualname": "VarsVisitor.visit_Subscript", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "node"], "funcdef": "def"}, "scalpel.core.vars_visitor.VarsVisitor.visit_Starred": {"fullname": "scalpel.core.vars_visitor.VarsVisitor.visit_Starred", "modulename": "scalpel.core.vars_visitor", "qualname": "VarsVisitor.visit_Starred", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "node"], "funcdef": "def"}, "scalpel.core.vars_visitor.VarsVisitor.visit_List": {"fullname": "scalpel.core.vars_visitor.VarsVisitor.visit_List", "modulename": "scalpel.core.vars_visitor", "qualname": "VarsVisitor.visit_List", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "node"], "funcdef": "def"}, "scalpel.core.vars_visitor.VarsVisitor.visit_Tuple": {"fullname": "scalpel.core.vars_visitor.VarsVisitor.visit_Tuple", "modulename": "scalpel.core.vars_visitor", "qualname": "VarsVisitor.visit_Tuple", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "node"], "funcdef": "def"}, "scalpel.core.vars_visitor.VarsVisitor.visit_FunctionDef": {"fullname": "scalpel.core.vars_visitor.VarsVisitor.visit_FunctionDef", "modulename": "scalpel.core.vars_visitor", "qualname": "VarsVisitor.visit_FunctionDef", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "node"], "funcdef": "def"}, "scalpel.core.vars_visitor.VarsVisitor.visit_Assign": {"fullname": "scalpel.core.vars_visitor.VarsVisitor.visit_Assign", "modulename": "scalpel.core.vars_visitor", "qualname": "VarsVisitor.visit_Assign", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "node"], "funcdef": "def"}, "scalpel.core.vars_visitor.get_vars": {"fullname": "scalpel.core.vars_visitor.get_vars", "modulename": "scalpel.core.vars_visitor", "qualname": "get_vars", "type": "function", "doc": "<p></p>\n", "parameters": ["node", "skip_call_name"], "funcdef": "def"}, "scalpel.import_graph": {"fullname": "scalpel.import_graph", "modulename": "scalpel.import_graph", "qualname": "", "type": "module", "doc": "<p>scalpel.import_graph is data structure for contructing an import graph of a python project. \nAn import graph represents the dependency relationship of  module files  in the given project. \nThis information can be important to understand the import flow, hierarchy, encapsulation as well as software architecture.\nEach node in the import graph datastructure is a module file that can be manipulated to extract statements, function calls.\nAll the leaf nodes in the import graph can be processed future.</p>\n"}, "scalpel.import_graph.import_graph": {"fullname": "scalpel.import_graph.import_graph", "modulename": "scalpel.import_graph.import_graph", "qualname": "", "type": "module", "doc": "<p>Import Graph module</p>\n"}, "scalpel.import_graph.import_graph.Tree": {"fullname": "scalpel.import_graph.import_graph.Tree", "modulename": "scalpel.import_graph.import_graph", "qualname": "Tree", "type": "class", "doc": "<p></p>\n"}, "scalpel.import_graph.import_graph.Tree.__init__": {"fullname": "scalpel.import_graph.import_graph.Tree.__init__", "modulename": "scalpel.import_graph.import_graph", "qualname": "Tree.__init__", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "name"], "funcdef": "def"}, "scalpel.import_graph.import_graph.ImportGraph": {"fullname": "scalpel.import_graph.import_graph.ImportGraph", "modulename": "scalpel.import_graph.import_graph", "qualname": "ImportGraph", "type": "class", "doc": "<p>The Import Graph class is a data structure that allows users to manipulate different files under a Python project. \nIt leverage import relations in each of source files.</p>\n"}, "scalpel.import_graph.import_graph.ImportGraph.__init__": {"fullname": "scalpel.import_graph.import_graph.ImportGraph.__init__", "modulename": "scalpel.import_graph.import_graph", "qualname": "ImportGraph.__init__", "type": "function", "doc": "<p>To constuct a import graph.\nArgs:\nentry_point: the top level folder path such as \"my-python-projects/homework1\".\nThe argument must not endswith slash!</p>\n", "parameters": ["self", "entry_point"], "funcdef": "def"}, "scalpel.import_graph.import_graph.ImportGraph.build_dir_tree": {"fullname": "scalpel.import_graph.import_graph.ImportGraph.build_dir_tree", "modulename": "scalpel.import_graph.import_graph", "qualname": "ImportGraph.build_dir_tree", "type": "function", "doc": "<p>To build enhanced directory tree for further analysis</p>\n", "parameters": ["self"], "funcdef": "def"}, "scalpel.import_graph.import_graph.ImportGraph.get_leaf_nodes": {"fullname": "scalpel.import_graph.import_graph.ImportGraph.get_leaf_nodes", "modulename": "scalpel.import_graph.import_graph", "qualname": "ImportGraph.get_leaf_nodes", "type": "function", "doc": "<p>To return all the leaf nodes in this tree. Each of leaf nodes represents a single Python script.</p>\n", "parameters": ["self"], "funcdef": "def"}, "scalpel.import_graph.import_graph.ImportGraph.go_to_that_node": {"fullname": "scalpel.import_graph.import_graph.ImportGraph.go_to_that_node", "modulename": "scalpel.import_graph.import_graph", "qualname": "ImportGraph.go_to_that_node", "type": "function", "doc": "<p>To locate a particular node from the tree from the current node given a visit path from import statement. \nFor instance,  a visit path of [example, module_a, func] means, if we can locate the function definition <code>func</code> from module_a under example folder. \nThe function tries to locate the given path using both relative and absolute import path. \nArgs:\nvisit_path: a list of names that represent different level python modules.</p>\n", "parameters": ["self", "cur_node", "visit_path"], "funcdef": "def"}, "scalpel.import_graph.import_graph.ImportGraph.parse_import": {"fullname": "scalpel.import_graph.import_graph.ImportGraph.parse_import", "modulename": "scalpel.import_graph.import_graph", "qualname": "ImportGraph.parse_import", "type": "function", "doc": "<p>To parse import statements from the AST tree\nArgs:\ntree: Python AST object\nReturns: an import map data structure</p>\n", "parameters": ["tree"], "funcdef": "def"}, "scalpel.import_graph.import_graph.ImportGraph.extract_class_from_source": {"fullname": "scalpel.import_graph.import_graph.ImportGraph.extract_class_from_source", "modulename": "scalpel.import_graph.import_graph", "qualname": "ImportGraph.extract_class_from_source", "type": "function", "doc": "<p>To parse import statements from the AST tree\nArgs:\nsource: source code text\nReturns: class/function definitions, ast tree and alias pairs</p>\n", "parameters": ["source"], "funcdef": "def"}, "scalpel.import_graph.import_graph.ImportGraph.leaf2root": {"fullname": "scalpel.import_graph.import_graph.ImportGraph.leaf2root", "modulename": "scalpel.import_graph.import_graph", "qualname": "ImportGraph.leaf2root", "type": "function", "doc": "<p>To generate the full path to the top level module from the given node. \nArgs:\nnode: the tree node \nReturns: the full path name in the form of dotted string.</p>\n", "parameters": ["node"], "funcdef": "def"}, "scalpel.import_graph.import_graph.ImportGraph.find_child_by_name": {"fullname": "scalpel.import_graph.import_graph.ImportGraph.find_child_by_name", "modulename": "scalpel.import_graph.import_graph", "qualname": "ImportGraph.find_child_by_name", "type": "function", "doc": "<p>To locate a child node using node name</p>\n", "parameters": ["node", "name"], "funcdef": "def"}, "scalpel.import_graph.import_graph.ImportGraph.find_node_by_name": {"fullname": "scalpel.import_graph.import_graph.ImportGraph.find_node_by_name", "modulename": "scalpel.import_graph.import_graph", "qualname": "ImportGraph.find_node_by_name", "type": "function", "doc": "<p>To locate a  node using node name</p>\n", "parameters": ["nodes", "name"], "funcdef": "def"}, "scalpel.typeinfer": {"fullname": "scalpel.typeinfer", "modulename": "scalpel.typeinfer", "qualname": "", "type": "module", "doc": "<p><code>scalpel.typeinfer</code> is provided for automatic type inference to facilitate static analysis for Python programs.\nThe analyser takes a python file or the root folder of a whole package as input, and will output a dictionary of\ndetailed type information for each variable. Type information is essential for many sophisticated static analysis tasks.</p>\n"}, "scalpel.typeinfer.analysers": {"fullname": "scalpel.typeinfer.analysers", "modulename": "scalpel.typeinfer.analysers", "qualname": "", "type": "module", "doc": "<p>This module contains a set of helper classes for type inference, e.g. a few ast visitors for extracting data, heuristic\nfunctions, etc.</p>\n"}, "scalpel.typeinfer.analysers.BinaryOperatorMap": {"fullname": "scalpel.typeinfer.analysers.BinaryOperatorMap", "modulename": "scalpel.typeinfer.analysers", "qualname": "BinaryOperatorMap", "type": "class", "doc": "<p>Class for storing binary operation information</p>\n"}, "scalpel.typeinfer.analysers.BinaryOperatorMap.__init__": {"fullname": "scalpel.typeinfer.analysers.BinaryOperatorMap.__init__", "modulename": "scalpel.typeinfer.analysers", "qualname": "BinaryOperatorMap.__init__", "type": "function", "doc": "<p></p>\n", "parameters": ["self"], "funcdef": "def"}, "scalpel.typeinfer.analysers.BinaryOperatorMap.append": {"fullname": "scalpel.typeinfer.analysers.BinaryOperatorMap.append", "modulename": "scalpel.typeinfer.analysers", "qualname": "BinaryOperatorMap.append", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "operation"], "funcdef": "def"}, "scalpel.typeinfer.analysers.BinaryOperatorMap.chain_types": {"fullname": "scalpel.typeinfer.analysers.BinaryOperatorMap.chain_types", "modulename": "scalpel.typeinfer.analysers", "qualname": "BinaryOperatorMap.chain_types", "type": "function", "doc": "<p></p>\n", "parameters": ["self"], "funcdef": "def"}, "scalpel.typeinfer.analysers.ImportTypeMap": {"fullname": "scalpel.typeinfer.analysers.ImportTypeMap", "modulename": "scalpel.typeinfer.analysers", "qualname": "ImportTypeMap", "type": "class", "doc": "<p>Class for mapping imported functions, variables, etc. to their types</p>\n"}, "scalpel.typeinfer.analysers.ImportTypeMap.__init__": {"fullname": "scalpel.typeinfer.analysers.ImportTypeMap.__init__", "modulename": "scalpel.typeinfer.analysers", "qualname": "ImportTypeMap.__init__", "type": "function", "doc": "<p>Args:\n    root: The root node of the input source file.</p>\n", "parameters": ["self", "root"], "funcdef": "def"}, "scalpel.typeinfer.analysers.ImportTypeMap.map": {"fullname": "scalpel.typeinfer.analysers.ImportTypeMap.map", "modulename": "scalpel.typeinfer.analysers", "qualname": "ImportTypeMap.map", "type": "function", "doc": "<p>Get the import type map</p>\n", "parameters": ["self"], "funcdef": "def"}, "scalpel.typeinfer.analysers.ImportTypeMap.get_imported_type": {"fullname": "scalpel.typeinfer.analysers.ImportTypeMap.get_imported_type", "modulename": "scalpel.typeinfer.analysers", "qualname": "ImportTypeMap.get_imported_type", "type": "function", "doc": "<p>Get the type of an imported function, variable, etc.\nArgs:\n    import_name: a fully qualified name of the function, the variable, etc.</p>\n", "parameters": ["self", "import_name"], "funcdef": "def"}, "scalpel.typeinfer.analysers.ClassDefinitionMap": {"fullname": "scalpel.typeinfer.analysers.ClassDefinitionMap", "modulename": "scalpel.typeinfer.analysers", "qualname": "ClassDefinitionMap", "type": "class", "doc": "<p>Class for retrieving class definitions in a file</p>\n"}, "scalpel.typeinfer.analysers.ClassDefinitionMap.__init__": {"fullname": "scalpel.typeinfer.analysers.ClassDefinitionMap.__init__", "modulename": "scalpel.typeinfer.analysers", "qualname": "ClassDefinitionMap.__init__", "type": "function", "doc": "<p>Args:\n    root: The root node of the input source file.</p>\n", "parameters": ["self", "root"], "funcdef": "def"}, "scalpel.typeinfer.analysers.ClassDefinitionMap.map": {"fullname": "scalpel.typeinfer.analysers.ClassDefinitionMap.map", "modulename": "scalpel.typeinfer.analysers", "qualname": "ClassDefinitionMap.map", "type": "function", "doc": "<p>Get the class definitions</p>\n", "parameters": ["self"], "funcdef": "def"}, "scalpel.typeinfer.analysers.FunctionDefinitionMap": {"fullname": "scalpel.typeinfer.analysers.FunctionDefinitionMap", "modulename": "scalpel.typeinfer.analysers", "qualname": "FunctionDefinitionMap", "type": "class", "doc": "<p>Class for retrieving functions definitions in a file</p>\n"}, "scalpel.typeinfer.analysers.FunctionDefinitionMap.__init__": {"fullname": "scalpel.typeinfer.analysers.FunctionDefinitionMap.__init__", "modulename": "scalpel.typeinfer.analysers", "qualname": "FunctionDefinitionMap.__init__", "type": "function", "doc": "<p>Args:\n    root: The root node of the input source file.</p>\n", "parameters": ["self", "root"], "funcdef": "def"}, "scalpel.typeinfer.analysers.FunctionDefinitionMap.map": {"fullname": "scalpel.typeinfer.analysers.FunctionDefinitionMap.map", "modulename": "scalpel.typeinfer.analysers", "qualname": "FunctionDefinitionMap.map", "type": "function", "doc": "<p>Get the function definitions</p>\n", "parameters": ["self"], "funcdef": "def"}, "scalpel.typeinfer.analysers.VariableAssignmentMap": {"fullname": "scalpel.typeinfer.analysers.VariableAssignmentMap", "modulename": "scalpel.typeinfer.analysers", "qualname": "VariableAssignmentMap", "type": "class", "doc": "<p>Class for retrieving variable assignments</p>\n"}, "scalpel.typeinfer.analysers.VariableAssignmentMap.__init__": {"fullname": "scalpel.typeinfer.analysers.VariableAssignmentMap.__init__", "modulename": "scalpel.typeinfer.analysers", "qualname": "VariableAssignmentMap.__init__", "type": "function", "doc": "<p>Args:\n    root: The root node of the input source file.\n    imports: The import type map of the input source file</p>\n", "parameters": ["self", "root", "imports"], "funcdef": "def"}, "scalpel.typeinfer.analysers.VariableAssignmentMap.map": {"fullname": "scalpel.typeinfer.analysers.VariableAssignmentMap.map", "modulename": "scalpel.typeinfer.analysers", "qualname": "VariableAssignmentMap.map", "type": "function", "doc": "<p>Get the variable assignments</p>\n", "parameters": ["self"], "funcdef": "def"}, "scalpel.typeinfer.analysers.BinaryOperationMap": {"fullname": "scalpel.typeinfer.analysers.BinaryOperationMap", "modulename": "scalpel.typeinfer.analysers", "qualname": "BinaryOperationMap", "type": "class", "doc": "<p>Class for retrieving binary operations</p>\n"}, "scalpel.typeinfer.analysers.BinaryOperationMap.__init__": {"fullname": "scalpel.typeinfer.analysers.BinaryOperationMap.__init__", "modulename": "scalpel.typeinfer.analysers", "qualname": "BinaryOperationMap.__init__", "type": "function", "doc": "<p>Args:\n    root: The root node of the input source file.</p>\n", "parameters": ["self", "root"], "funcdef": "def"}, "scalpel.typeinfer.analysers.BinaryOperationMap.map": {"fullname": "scalpel.typeinfer.analysers.BinaryOperationMap.map", "modulename": "scalpel.typeinfer.analysers", "qualname": "BinaryOperationMap.map", "type": "function", "doc": "<p>Get the binary operations</p>\n", "parameters": ["self"], "funcdef": "def"}, "scalpel.typeinfer.analysers.HeuristicParser": {"fullname": "scalpel.typeinfer.analysers.HeuristicParser", "modulename": "scalpel.typeinfer.analysers", "qualname": "HeuristicParser", "type": "class", "doc": "<p>A heuristic NodeVisitor for assisting type inference</p>\n"}, "scalpel.typeinfer.analysers.HeuristicParser.__init__": {"fullname": "scalpel.typeinfer.analysers.HeuristicParser.__init__", "modulename": "scalpel.typeinfer.analysers", "qualname": "HeuristicParser.__init__", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "node"], "funcdef": "def"}, "scalpel.typeinfer.analysers.HeuristicParser.visit_FunctionDef": {"fullname": "scalpel.typeinfer.analysers.HeuristicParser.visit_FunctionDef", "modulename": "scalpel.typeinfer.analysers", "qualname": "HeuristicParser.visit_FunctionDef", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "node"], "funcdef": "def"}, "scalpel.typeinfer.analysers.HeuristicParser.visit_Import": {"fullname": "scalpel.typeinfer.analysers.HeuristicParser.visit_Import", "modulename": "scalpel.typeinfer.analysers", "qualname": "HeuristicParser.visit_Import", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "node"], "funcdef": "def"}, "scalpel.typeinfer.analysers.HeuristicParser.visit_ImportFrom": {"fullname": "scalpel.typeinfer.analysers.HeuristicParser.visit_ImportFrom", "modulename": "scalpel.typeinfer.analysers", "qualname": "HeuristicParser.visit_ImportFrom", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "node"], "funcdef": "def"}, "scalpel.typeinfer.analysers.HeuristicParser.visit_While": {"fullname": "scalpel.typeinfer.analysers.HeuristicParser.visit_While", "modulename": "scalpel.typeinfer.analysers", "qualname": "HeuristicParser.visit_While", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "node"], "funcdef": "def"}, "scalpel.typeinfer.analysers.HeuristicParser.visit_Compare": {"fullname": "scalpel.typeinfer.analysers.HeuristicParser.visit_Compare", "modulename": "scalpel.typeinfer.analysers", "qualname": "HeuristicParser.visit_Compare", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "node"], "funcdef": "def"}, "scalpel.typeinfer.analysers.HeuristicParser.visit_BinOp": {"fullname": "scalpel.typeinfer.analysers.HeuristicParser.visit_BinOp", "modulename": "scalpel.typeinfer.analysers", "qualname": "HeuristicParser.visit_BinOp", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "node"], "funcdef": "def"}, "scalpel.typeinfer.analysers.HeuristicParser.visit_IfExp": {"fullname": "scalpel.typeinfer.analysers.HeuristicParser.visit_IfExp", "modulename": "scalpel.typeinfer.analysers", "qualname": "HeuristicParser.visit_IfExp", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "node"], "funcdef": "def"}, "scalpel.typeinfer.analysers.HeuristicParser.visit_If": {"fullname": "scalpel.typeinfer.analysers.HeuristicParser.visit_If", "modulename": "scalpel.typeinfer.analysers", "qualname": "HeuristicParser.visit_If", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "node"], "funcdef": "def"}, "scalpel.typeinfer.analysers.SourceSplitVisitor": {"fullname": "scalpel.typeinfer.analysers.SourceSplitVisitor", "modulename": "scalpel.typeinfer.analysers", "qualname": "SourceSplitVisitor", "type": "class", "doc": "<p>ast NodeVisitor class for retrieving assignments</p>\n"}, "scalpel.typeinfer.analysers.SourceSplitVisitor.__init__": {"fullname": "scalpel.typeinfer.analysers.SourceSplitVisitor.__init__", "modulename": "scalpel.typeinfer.analysers", "qualname": "SourceSplitVisitor.__init__", "type": "function", "doc": "<p></p>\n", "parameters": ["self"], "funcdef": "def"}, "scalpel.typeinfer.analysers.SourceSplitVisitor.visit_Assign": {"fullname": "scalpel.typeinfer.analysers.SourceSplitVisitor.visit_Assign", "modulename": "scalpel.typeinfer.analysers", "qualname": "SourceSplitVisitor.visit_Assign", "type": "function", "doc": "<p>When visit Assign, add information to the assignment dictionary\nArgs:\n    ast_node_lst: a list of statements to be visited.\n    def_records: a list of dictionary, each of whose entry is a\n    function/class definition.\n    scope: the scope that is currently being visited. When it is \"mod\",\n    it is visiting under the entire module.</p>\n", "parameters": ["self", "node"], "funcdef": "def"}, "scalpel.typeinfer.analysers.SourceSplitVisitor.visit_FunctionDef": {"fullname": "scalpel.typeinfer.analysers.SourceSplitVisitor.visit_FunctionDef", "modulename": "scalpel.typeinfer.analysers", "qualname": "SourceSplitVisitor.visit_FunctionDef", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "node"], "funcdef": "def"}, "scalpel.typeinfer.analysers.ClassSplitVisitor": {"fullname": "scalpel.typeinfer.analysers.ClassSplitVisitor", "modulename": "scalpel.typeinfer.analysers", "qualname": "ClassSplitVisitor", "type": "class", "doc": "<p>ast NodeVisitor class for retrieving compositions of a class: function nodes, bases and assignment records</p>\n"}, "scalpel.typeinfer.analysers.ClassSplitVisitor.__init__": {"fullname": "scalpel.typeinfer.analysers.ClassSplitVisitor.__init__", "modulename": "scalpel.typeinfer.analysers", "qualname": "ClassSplitVisitor.__init__", "type": "function", "doc": "<p></p>\n", "parameters": ["self"], "funcdef": "def"}, "scalpel.typeinfer.analysers.ClassSplitVisitor.visit_FunctionDef": {"fullname": "scalpel.typeinfer.analysers.ClassSplitVisitor.visit_FunctionDef", "modulename": "scalpel.typeinfer.analysers", "qualname": "ClassSplitVisitor.visit_FunctionDef", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "node"], "funcdef": "def"}, "scalpel.typeinfer.analysers.ClassSplitVisitor.visit_ClassDef": {"fullname": "scalpel.typeinfer.analysers.ClassSplitVisitor.visit_ClassDef", "modulename": "scalpel.typeinfer.analysers", "qualname": "ClassSplitVisitor.visit_ClassDef", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "node"], "funcdef": "def"}, "scalpel.typeinfer.analysers.ReturnStmtVisitor": {"fullname": "scalpel.typeinfer.analysers.ReturnStmtVisitor", "modulename": "scalpel.typeinfer.analysers", "qualname": "ReturnStmtVisitor", "type": "class", "doc": "<p>Class for inferring function return types</p>\n"}, "scalpel.typeinfer.analysers.ReturnStmtVisitor.__init__": {"fullname": "scalpel.typeinfer.analysers.ReturnStmtVisitor.__init__", "modulename": "scalpel.typeinfer.analysers", "qualname": "ReturnStmtVisitor.__init__", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "imports", "assignments"], "funcdef": "def"}, "scalpel.typeinfer.analysers.ReturnStmtVisitor.import_assign_records": {"fullname": "scalpel.typeinfer.analysers.ReturnStmtVisitor.import_assign_records", "modulename": "scalpel.typeinfer.analysers", "qualname": "ReturnStmtVisitor.import_assign_records", "type": "function", "doc": "<p>Import assignment records for return type inference\nArgs:\n    assign_records: a list of assignment records.</p>\n", "parameters": ["self", "assign_records"], "funcdef": "def"}, "scalpel.typeinfer.analysers.ReturnStmtVisitor.import_class_assign_records": {"fullname": "scalpel.typeinfer.analysers.ReturnStmtVisitor.import_class_assign_records", "modulename": "scalpel.typeinfer.analysers", "qualname": "ReturnStmtVisitor.import_class_assign_records", "type": "function", "doc": "<p>Import class assignment records for return type inference\nArgs:\n    assign_records: a list of assignment records in the class.</p>\n", "parameters": ["self", "assign_records"], "funcdef": "def"}, "scalpel.typeinfer.analysers.ReturnStmtVisitor.import_assignments": {"fullname": "scalpel.typeinfer.analysers.ReturnStmtVisitor.import_assignments", "modulename": "scalpel.typeinfer.analysers", "qualname": "ReturnStmtVisitor.import_assignments", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "assignments"], "funcdef": "def"}, "scalpel.typeinfer.analysers.ReturnStmtVisitor.visit_FunctionDef": {"fullname": "scalpel.typeinfer.analysers.ReturnStmtVisitor.visit_FunctionDef", "modulename": "scalpel.typeinfer.analysers", "qualname": "ReturnStmtVisitor.visit_FunctionDef", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "node"], "funcdef": "def"}, "scalpel.typeinfer.analysers.ReturnStmtVisitor.visit_Yield": {"fullname": "scalpel.typeinfer.analysers.ReturnStmtVisitor.visit_Yield", "modulename": "scalpel.typeinfer.analysers", "qualname": "ReturnStmtVisitor.visit_Yield", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "node"], "funcdef": "def"}, "scalpel.typeinfer.analysers.ReturnStmtVisitor.infer_actual_return_value": {"fullname": "scalpel.typeinfer.analysers.ReturnStmtVisitor.infer_actual_return_value", "modulename": "scalpel.typeinfer.analysers", "qualname": "ReturnStmtVisitor.infer_actual_return_value", "type": "function", "doc": "<p>Infer the return type with the help of assignment records and the possible return values\nArgs:\n    assign_records: a list of assignment records.</p>\n", "parameters": ["self", "actual_return_value"], "funcdef": "def"}, "scalpel.typeinfer.analysers.ReturnStmtVisitor.type_infer_CFG": {"fullname": "scalpel.typeinfer.analysers.ReturnStmtVisitor.type_infer_CFG", "modulename": "scalpel.typeinfer.analysers", "qualname": "ReturnStmtVisitor.type_infer_CFG", "type": "function", "doc": "<p>Conduct SSA analysis in CFG to get the possible return values\nArgs:\n    assign_records: a list of assignment records.</p>\n", "parameters": ["self", "node"], "funcdef": "def"}, "scalpel.typeinfer.analysers.ReturnStmtVisitor.query_assign_records": {"fullname": "scalpel.typeinfer.analysers.ReturnStmtVisitor.query_assign_records", "modulename": "scalpel.typeinfer.analysers", "qualname": "ReturnStmtVisitor.query_assign_records", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "var_id"], "funcdef": "def"}, "scalpel.typeinfer.analysers.ReturnStmtVisitor.type_infer": {"fullname": "scalpel.typeinfer.analysers.ReturnStmtVisitor.type_infer", "modulename": "scalpel.typeinfer.analysers", "qualname": "ReturnStmtVisitor.type_infer", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "node"], "funcdef": "def"}, "scalpel.typeinfer.analysers.ReturnStmtVisitor.clear": {"fullname": "scalpel.typeinfer.analysers.ReturnStmtVisitor.clear", "modulename": "scalpel.typeinfer.analysers", "qualname": "ReturnStmtVisitor.clear", "type": "function", "doc": "<p></p>\n", "parameters": ["self"], "funcdef": "def"}, "scalpel.typeinfer.analysers.ReturnStmtVisitor.clear_all": {"fullname": "scalpel.typeinfer.analysers.ReturnStmtVisitor.clear_all", "modulename": "scalpel.typeinfer.analysers", "qualname": "ReturnStmtVisitor.clear_all", "type": "function", "doc": "<p></p>\n", "parameters": ["self"], "funcdef": "def"}, "scalpel.typeinfer.analysers.Heuristics": {"fullname": "scalpel.typeinfer.analysers.Heuristics", "modulename": "scalpel.typeinfer.analysers", "qualname": "Heuristics", "type": "class", "doc": "<p>A set of heuristic function for assisting type inference</p>\n"}, "scalpel.typeinfer.analysers.Heuristics.__init__": {"fullname": "scalpel.typeinfer.analysers.Heuristics.__init__", "modulename": "scalpel.typeinfer.analysers", "qualname": "Heuristics.__init__", "type": "function", "doc": "<p></p>\n", "parameters": [], "funcdef": "def"}, "scalpel.typeinfer.analysers.Heuristics.heuristic_two": {"fullname": "scalpel.typeinfer.analysers.Heuristics.heuristic_two", "modulename": "scalpel.typeinfer.analysers", "qualname": "Heuristics.heuristic_two", "type": "function", "doc": "<p>Args:\n    ast_tree: the root node of the ast tree\n    processed_file: the files that have been processed\n    assignments: the assignment list</p>\n", "parameters": ["ast_tree", "processed_file", "assignments"], "funcdef": "def"}, "scalpel.typeinfer.analysers.Heuristics.heuristic_five": {"fullname": "scalpel.typeinfer.analysers.Heuristics.heuristic_five", "modulename": "scalpel.typeinfer.analysers", "qualname": "Heuristics.heuristic_five", "type": "function", "doc": "<p>Args:\n    import_mappings: the import mappings that have been generated\n    processed_file: the files that have been processed\n    function_node: the function node being checked</p>\n", "parameters": ["self", "import_mappings", "processed_file", "function_node"], "funcdef": "def"}, "scalpel.typeinfer.analysers.Heuristics.heuristic_five_return": {"fullname": "scalpel.typeinfer.analysers.Heuristics.heuristic_five_return", "modulename": "scalpel.typeinfer.analysers", "qualname": "Heuristics.heuristic_five_return", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "assignments", "return_node"], "funcdef": "def"}, "scalpel.typeinfer.analysers.Heuristics.heuristic_six": {"fullname": "scalpel.typeinfer.analysers.Heuristics.heuristic_six", "modulename": "scalpel.typeinfer.analysers", "qualname": "Heuristics.heuristic_six", "type": "function", "doc": "<p>Args:\n    processed_file: the files that have been processed\n    function_node: the function node being checked</p>\n", "parameters": ["processed_file", "function_node"], "funcdef": "def"}, "scalpel.typeinfer.analysers.Heuristics.heuristic_seven": {"fullname": "scalpel.typeinfer.analysers.Heuristics.heuristic_seven", "modulename": "scalpel.typeinfer.analysers", "qualname": "Heuristics.heuristic_seven", "type": "function", "doc": "<p>Args:\n    processed_file: the files that have been processed\n    function_node: the function node being checked</p>\n", "parameters": ["processed_file", "function_node"], "funcdef": "def"}, "scalpel.typeinfer.analysers.Heuristics.heuristic_eight": {"fullname": "scalpel.typeinfer.analysers.Heuristics.heuristic_eight", "modulename": "scalpel.typeinfer.analysers", "qualname": "Heuristics.heuristic_eight", "type": "function", "doc": "<p>Performs heuristic 8 for a function's inputs. Note that this heuristic\nattempts to infer/check the types a developer likely intended for function\nparameters and provide a limited number of types to the actual number that\nmay work\nArgs:\n    ast_tree: The ast tree for the module the function is in\n    function_name: The name of the function being checked\n    function_params: The function parameters from a variable assignment map</p>\n", "parameters": ["ast_tree", "function_name", "function_params"], "funcdef": "def"}, "scalpel.typeinfer.analysers.Heuristics.heuristic_nine": {"fullname": "scalpel.typeinfer.analysers.Heuristics.heuristic_nine", "modulename": "scalpel.typeinfer.analysers", "qualname": "Heuristics.heuristic_nine", "type": "function", "doc": "<p>Args:\n    import_mappings: The import mappings that have been generated\n    processed_file: The files that have been processed\n    function_node: The function node being checked</p>\n", "parameters": ["import_mappings", "processed_file", "function_node"], "funcdef": "def"}, "scalpel.typeinfer.analysers.Heuristics.heuristic_eleven": {"fullname": "scalpel.typeinfer.analysers.Heuristics.heuristic_eleven", "modulename": "scalpel.typeinfer.analysers", "qualname": "Heuristics.heuristic_eleven", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "processed_file", "function_node"], "funcdef": "def"}, "scalpel.typeinfer.analysers.Heuristics.heuristic_twelve": {"fullname": "scalpel.typeinfer.analysers.Heuristics.heuristic_twelve", "modulename": "scalpel.typeinfer.analysers", "qualname": "Heuristics.heuristic_twelve", "type": "function", "doc": "<p>Performs heuristic 8 for a function's inputs. Note that this heuristic\nattempts to infer/check the types a developer likely intended for function\nparameters and provide a limited number of types to the actual number that\nmay work\nArgs:\n    ast_tree: The ast tree for the module the function is in\n    function_name: The name of the function being checked\n    function_params: The function parameters from a variable assignment map</p>\n", "parameters": ["function_node", "function_params"], "funcdef": "def"}, "scalpel.typeinfer.analysers.Heuristics.get_bin_op_involved": {"fullname": "scalpel.typeinfer.analysers.Heuristics.get_bin_op_involved", "modulename": "scalpel.typeinfer.analysers", "qualname": "Heuristics.get_bin_op_involved", "type": "function", "doc": "<p>Get list of variables/constants/callables involved in a binary operation\nArgs:\n    binary_operation: the binary operation to get the names for\nReturns:\n    List: list of variable/constants/callables</p>\n", "parameters": ["binary_operation"], "funcdef": "def"}, "scalpel.typeinfer.analysers.Heuristics.in_bin_op": {"fullname": "scalpel.typeinfer.analysers.Heuristics.in_bin_op", "modulename": "scalpel.typeinfer.analysers", "qualname": "Heuristics.in_bin_op", "type": "function", "doc": "<p>Determines whether a variable is featured in a binary operation\nArgs:\n    variable: The variable to check for\n    binary_operation: The binary operation to check\nReturns:\n    Boolean: True if it is within the binary operation, false otherwise</p>\n", "parameters": ["variable", "binary_operation"], "funcdef": "def"}, "scalpel.typeinfer.classes": {"fullname": "scalpel.typeinfer.classes", "modulename": "scalpel.typeinfer.classes", "qualname": "", "type": "module", "doc": "<p>This module contains a set of data classes.</p>\n"}, "scalpel.typeinfer.classes.TypeWarning": {"fullname": "scalpel.typeinfer.classes.TypeWarning", "modulename": "scalpel.typeinfer.classes", "qualname": "TypeWarning", "type": "class", "doc": "<p>Holds information about a type warning</p>\n"}, "scalpel.typeinfer.classes.TypeWarning.__init__": {"fullname": "scalpel.typeinfer.classes.TypeWarning.__init__", "modulename": "scalpel.typeinfer.classes", "qualname": "TypeWarning.__init__", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "warning", "line", "file", "variable"], "funcdef": "def"}, "scalpel.typeinfer.classes.TypeWarning.print_warning": {"fullname": "scalpel.typeinfer.classes.TypeWarning.print_warning", "modulename": "scalpel.typeinfer.classes", "qualname": "TypeWarning.print_warning", "type": "function", "doc": "<p></p>\n", "parameters": ["self"], "funcdef": "def"}, "scalpel.typeinfer.classes.ScalpelVariable": {"fullname": "scalpel.typeinfer.classes.ScalpelVariable", "modulename": "scalpel.typeinfer.classes", "qualname": "ScalpelVariable", "type": "class", "doc": "<p>Holds information about a variable</p>\n"}, "scalpel.typeinfer.classes.ScalpelVariable.__init__": {"fullname": "scalpel.typeinfer.classes.ScalpelVariable.__init__", "modulename": "scalpel.typeinfer.classes", "qualname": "ScalpelVariable.__init__", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "name", "function", "line", "type", "in_conditional", "in_equality", "is_callable", "called_methods", "binary_operation", "is_arg"], "funcdef": "def"}, "scalpel.typeinfer.classes.ScalpelVariable.type": {"fullname": "scalpel.typeinfer.classes.ScalpelVariable.type", "modulename": "scalpel.typeinfer.classes", "qualname": "ScalpelVariable.type", "type": "variable", "doc": "<p></p>\n"}, "scalpel.typeinfer.classes.ScalpelVariable.in_conditional": {"fullname": "scalpel.typeinfer.classes.ScalpelVariable.in_conditional", "modulename": "scalpel.typeinfer.classes", "qualname": "ScalpelVariable.in_conditional", "type": "variable", "doc": "<p></p>\n"}, "scalpel.typeinfer.classes.ScalpelVariable.in_equality": {"fullname": "scalpel.typeinfer.classes.ScalpelVariable.in_equality", "modulename": "scalpel.typeinfer.classes", "qualname": "ScalpelVariable.in_equality", "type": "variable", "doc": "<p></p>\n"}, "scalpel.typeinfer.classes.ScalpelVariable.is_callable": {"fullname": "scalpel.typeinfer.classes.ScalpelVariable.is_callable", "modulename": "scalpel.typeinfer.classes", "qualname": "ScalpelVariable.is_callable", "type": "variable", "doc": "<p></p>\n"}, "scalpel.typeinfer.classes.ScalpelVariable.called_methods": {"fullname": "scalpel.typeinfer.classes.ScalpelVariable.called_methods", "modulename": "scalpel.typeinfer.classes", "qualname": "ScalpelVariable.called_methods", "type": "variable", "doc": "<p></p>\n"}, "scalpel.typeinfer.classes.ScalpelVariable.binary_operation": {"fullname": "scalpel.typeinfer.classes.ScalpelVariable.binary_operation", "modulename": "scalpel.typeinfer.classes", "qualname": "ScalpelVariable.binary_operation", "type": "variable", "doc": "<p></p>\n"}, "scalpel.typeinfer.classes.ScalpelVariable.is_arg": {"fullname": "scalpel.typeinfer.classes.ScalpelVariable.is_arg", "modulename": "scalpel.typeinfer.classes", "qualname": "ScalpelVariable.is_arg", "type": "variable", "doc": "<p></p>\n"}, "scalpel.typeinfer.classes.ScalpelFunction": {"fullname": "scalpel.typeinfer.classes.ScalpelFunction", "modulename": "scalpel.typeinfer.classes", "qualname": "ScalpelFunction", "type": "class", "doc": "<p>Holds information about a function</p>\n"}, "scalpel.typeinfer.classes.ScalpelFunction.__init__": {"fullname": "scalpel.typeinfer.classes.ScalpelFunction.__init__", "modulename": "scalpel.typeinfer.classes", "qualname": "ScalpelFunction.__init__", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "name", "line", "return_type"], "funcdef": "def"}, "scalpel.typeinfer.classes.ScalpelFunction.return_type": {"fullname": "scalpel.typeinfer.classes.ScalpelFunction.return_type", "modulename": "scalpel.typeinfer.classes", "qualname": "ScalpelFunction.return_type", "type": "variable", "doc": "<p></p>\n"}, "scalpel.typeinfer.classes.ScalpelClass": {"fullname": "scalpel.typeinfer.classes.ScalpelClass", "modulename": "scalpel.typeinfer.classes", "qualname": "ScalpelClass", "type": "class", "doc": "<p>Holds information about a class</p>\n"}, "scalpel.typeinfer.classes.ScalpelClass.__init__": {"fullname": "scalpel.typeinfer.classes.ScalpelClass.__init__", "modulename": "scalpel.typeinfer.classes", "qualname": "ScalpelClass.__init__", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "name", "methods", "inherits"], "funcdef": "def"}, "scalpel.typeinfer.classes.ScalpelClass.inherits": {"fullname": "scalpel.typeinfer.classes.ScalpelClass.inherits", "modulename": "scalpel.typeinfer.classes", "qualname": "ScalpelClass.inherits", "type": "variable", "doc": "<p></p>\n"}, "scalpel.typeinfer.classes.BinaryOperation": {"fullname": "scalpel.typeinfer.classes.BinaryOperation", "modulename": "scalpel.typeinfer.classes", "qualname": "BinaryOperation", "type": "class", "doc": "<p>Holds information about a binary operation between two variables</p>\n"}, "scalpel.typeinfer.classes.BinaryOperation.__init__": {"fullname": "scalpel.typeinfer.classes.BinaryOperation.__init__", "modulename": "scalpel.typeinfer.classes", "qualname": "BinaryOperation.__init__", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "left", "left_ast_type", "right", "right_ast_type", "operator", "shared_type"], "funcdef": "def"}, "scalpel.typeinfer.classes.BinaryOperation.shared_type": {"fullname": "scalpel.typeinfer.classes.BinaryOperation.shared_type", "modulename": "scalpel.typeinfer.classes", "qualname": "BinaryOperation.shared_type", "type": "variable", "doc": "<p></p>\n"}, "scalpel.typeinfer.classes.ProcessedFile": {"fullname": "scalpel.typeinfer.classes.ProcessedFile", "modulename": "scalpel.typeinfer.classes", "qualname": "ProcessedFile", "type": "class", "doc": "<p>Holds information about a processed file</p>\n"}, "scalpel.typeinfer.classes.ProcessedFile.__init__": {"fullname": "scalpel.typeinfer.classes.ProcessedFile.__init__", "modulename": "scalpel.typeinfer.classes", "qualname": "ProcessedFile.__init__", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "type_dict", "type_gt", "type_stem_links", "node_type_comment", "static_assignments", "line_numbers", "imports"], "funcdef": "def"}, "scalpel.typeinfer.typeinfer": {"fullname": "scalpel.typeinfer.typeinfer", "modulename": "scalpel.typeinfer.typeinfer", "qualname": "", "type": "module", "doc": "<p>This module is the main module of typeinfer. The module contains a single class named TypeInference which processes\nfiles and infer types.</p>\n"}, "scalpel.typeinfer.typeinfer.process_code_with_heuristics": {"fullname": "scalpel.typeinfer.typeinfer.process_code_with_heuristics", "modulename": "scalpel.typeinfer.typeinfer", "qualname": "process_code_with_heuristics", "type": "function", "doc": "<p></p>\n", "parameters": ["node"], "funcdef": "def"}, "scalpel.typeinfer.typeinfer.TypeInference": {"fullname": "scalpel.typeinfer.typeinfer.TypeInference", "modulename": "scalpel.typeinfer.typeinfer", "qualname": "TypeInference", "type": "class", "doc": "<p>Infer types for the modules accessible from the entrypoints with the help of a set of heuristic functions</p>\n"}, "scalpel.typeinfer.typeinfer.TypeInference.__init__": {"fullname": "scalpel.typeinfer.typeinfer.TypeInference.__init__", "modulename": "scalpel.typeinfer.typeinfer", "qualname": "TypeInference.__init__", "type": "function", "doc": "<p>Args:\n    name: the name of the type inference analyser\n    entry_point: the entry point, can be the root folder of a package or a python file</p>\n", "parameters": ["self", "name", "entry_point"], "funcdef": "def"}, "scalpel.typeinfer.typeinfer.TypeInference.infer_types": {"fullname": "scalpel.typeinfer.typeinfer.TypeInference.infer_types", "modulename": "scalpel.typeinfer.typeinfer", "qualname": "TypeInference.infer_types", "type": "function", "doc": "<p>Infer the types for the modules accessible from the entrypoint</p>\n", "parameters": ["self"], "funcdef": "def"}, "scalpel.typeinfer.typeinfer.TypeInference.get_types": {"fullname": "scalpel.typeinfer.typeinfer.TypeInference.get_types", "modulename": "scalpel.typeinfer.typeinfer", "qualname": "TypeInference.get_types", "type": "function", "doc": "<p>Get the inferred type information in a list of dictionaries</p>\n", "parameters": ["self"], "funcdef": "def"}, "scalpel.typeinfer.typeinfer.TypeInference.process_file": {"fullname": "scalpel.typeinfer.typeinfer.TypeInference.process_file", "modulename": "scalpel.typeinfer.typeinfer", "qualname": "TypeInference.process_file", "type": "function", "doc": "<p>Process and extract information from the source files with a set of heuristic functions for type inference</p>\n", "parameters": ["source"], "funcdef": "def"}, "scalpel.typeinfer.typeinfer.TypeInference.print_types": {"fullname": "scalpel.typeinfer.typeinfer.TypeInference.print_types", "modulename": "scalpel.typeinfer.typeinfer", "qualname": "TypeInference.print_types", "type": "function", "doc": "<p>Function for printing type inference results in a formatted way</p>\n", "parameters": ["self", "functions", "parameters", "variables"], "funcdef": "def"}, "scalpel.typeinfer.utilities": {"fullname": "scalpel.typeinfer.utilities", "modulename": "scalpel.typeinfer.utilities", "qualname": "", "type": "module", "doc": "<p>Utilities for type inference module</p>\n"}, "scalpel.typeinfer.utilities.get_func_calls_type": {"fullname": "scalpel.typeinfer.utilities.get_func_calls_type", "modulename": "scalpel.typeinfer.utilities", "qualname": "get_func_calls_type", "type": "function", "doc": "<p></p>\n", "parameters": ["tree"], "funcdef": "def"}, "scalpel.typeinfer.utilities.TypeInferCallTransformer": {"fullname": "scalpel.typeinfer.utilities.TypeInferCallTransformer", "modulename": "scalpel.typeinfer.utilities", "qualname": "TypeInferCallTransformer", "type": "class", "doc": "<p>A NodeTransformer class for getting function call information</p>\n"}, "scalpel.typeinfer.utilities.TypeInferCallTransformer.__init__": {"fullname": "scalpel.typeinfer.utilities.TypeInferCallTransformer.__init__", "modulename": "scalpel.typeinfer.utilities", "qualname": "TypeInferCallTransformer.__init__", "type": "function", "doc": "<p></p>\n", "parameters": ["self"], "funcdef": "def"}, "scalpel.typeinfer.utilities.TypeInferCallTransformer.visit_Attribute": {"fullname": "scalpel.typeinfer.utilities.TypeInferCallTransformer.visit_Attribute", "modulename": "scalpel.typeinfer.utilities", "qualname": "TypeInferCallTransformer.visit_Attribute", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "node"], "funcdef": "def"}, "scalpel.typeinfer.utilities.TypeInferCallTransformer.visit_Call": {"fullname": "scalpel.typeinfer.utilities.TypeInferCallTransformer.visit_Call", "modulename": "scalpel.typeinfer.utilities", "qualname": "TypeInferCallTransformer.visit_Call", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "node"], "funcdef": "def"}, "scalpel.typeinfer.utilities.FuncCallVisitor": {"fullname": "scalpel.typeinfer.utilities.FuncCallVisitor", "modulename": "scalpel.typeinfer.utilities", "qualname": "FuncCallVisitor", "type": "class", "doc": "<p>A NodeVisitor class for getting function call information</p>\n"}, "scalpel.typeinfer.utilities.FuncCallVisitor.__init__": {"fullname": "scalpel.typeinfer.utilities.FuncCallVisitor.__init__", "modulename": "scalpel.typeinfer.utilities", "qualname": "FuncCallVisitor.__init__", "type": "function", "doc": "<p></p>\n", "parameters": ["self"], "funcdef": "def"}, "scalpel.typeinfer.utilities.FuncCallVisitor.clear": {"fullname": "scalpel.typeinfer.utilities.FuncCallVisitor.clear", "modulename": "scalpel.typeinfer.utilities", "qualname": "FuncCallVisitor.clear", "type": "function", "doc": "<p></p>\n", "parameters": ["self"], "funcdef": "def"}, "scalpel.typeinfer.utilities.FuncCallVisitor.name": {"fullname": "scalpel.typeinfer.utilities.FuncCallVisitor.name", "modulename": "scalpel.typeinfer.utilities", "qualname": "FuncCallVisitor.name", "type": "variable", "doc": "<p></p>\n"}, "scalpel.typeinfer.utilities.FuncCallVisitor.visit_Name": {"fullname": "scalpel.typeinfer.utilities.FuncCallVisitor.visit_Name", "modulename": "scalpel.typeinfer.utilities", "qualname": "FuncCallVisitor.visit_Name", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "node"], "funcdef": "def"}, "scalpel.typeinfer.utilities.FuncCallVisitor.visit_Attribute": {"fullname": "scalpel.typeinfer.utilities.FuncCallVisitor.visit_Attribute", "modulename": "scalpel.typeinfer.utilities", "qualname": "FuncCallVisitor.visit_Attribute", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "node"], "funcdef": "def"}, "scalpel.typeinfer.utilities.FuncCallVisitor.visit_Call": {"fullname": "scalpel.typeinfer.utilities.FuncCallVisitor.visit_Call", "modulename": "scalpel.typeinfer.utilities", "qualname": "FuncCallVisitor.visit_Call", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "node"], "funcdef": "def"}, "scalpel.typeinfer.utilities.get_built_in_types": {"fullname": "scalpel.typeinfer.utilities.get_built_in_types", "modulename": "scalpel.typeinfer.utilities", "qualname": "get_built_in_types", "type": "function", "doc": "<p>Gets Python built in types</p>\n\n<p>:return: Python built in types in a dictionary</p>\n", "parameters": [], "funcdef": "def"}, "scalpel.typeinfer.utilities.get_type": {"fullname": "scalpel.typeinfer.utilities.get_type", "modulename": "scalpel.typeinfer.utilities", "qualname": "get_type", "type": "function", "doc": "<p>Get the type of a node\nArgs:\n    node: The node to get the type of\n    imports: Dictionary of known imported types\nReturns:\n    The type of the node</p>\n", "parameters": ["node", "imports"], "funcdef": "def"}, "scalpel.typeinfer.utilities.check_consistent_list_types": {"fullname": "scalpel.typeinfer.utilities.check_consistent_list_types", "modulename": "scalpel.typeinfer.utilities", "qualname": "check_consistent_list_types", "type": "function", "doc": "<p>Checks a list of values to see if they have a constant type</p>\n", "parameters": ["values"], "funcdef": "def"}, "scalpel.typeinfer.utilities.is_camel_case": {"fullname": "scalpel.typeinfer.utilities.is_camel_case", "modulename": "scalpel.typeinfer.utilities", "qualname": "is_camel_case", "type": "function", "doc": "<p>Determines whether a string is written in camel case</p>\n\n<p>Args:\n    s: The string to check\nReturns:\n    True if the string is camel case, False otherwise</p>\n", "parameters": ["s"], "funcdef": "def"}, "scalpel.typeinfer.utilities.parse_module": {"fullname": "scalpel.typeinfer.utilities.parse_module", "modulename": "scalpel.typeinfer.utilities", "qualname": "parse_module", "type": "function", "doc": "<p>Get the function, class and import nodes for a module\nArgs:\n    m_ast: The AST tree to get the nodes for\nReturns:\n    Tuple containing list of function nodes, list of class nodes and list of import nodes</p>\n", "parameters": ["m_ast"], "funcdef": "def"}, "scalpel.typeinfer.utilities.get_api_ref_id": {"fullname": "scalpel.typeinfer.utilities.get_api_ref_id", "modulename": "scalpel.typeinfer.utilities", "qualname": "get_api_ref_id", "type": "function", "doc": "<p></p>\n", "parameters": ["import_nodes"], "funcdef": "def"}, "scalpel.typeinfer.utilities.is_imported_fun": {"fullname": "scalpel.typeinfer.utilities.is_imported_fun", "modulename": "scalpel.typeinfer.utilities", "qualname": "is_imported_fun", "type": "function", "doc": "<p>Determines whether a function is imported from another library</p>\n\n<p>Args:\n    func_name: The name of the function to check\n    import_dict: Dictionary of import modules\nReturns:\n    The module that the function was import from or None if it was not imported</p>\n", "parameters": ["func_name", "import_dict"], "funcdef": "def"}, "scalpel.typeinfer.utilities.rename_from_name": {"fullname": "scalpel.typeinfer.utilities.rename_from_name", "modulename": "scalpel.typeinfer.utilities", "qualname": "rename_from_name", "type": "function", "doc": "<p></p>\n", "parameters": ["from_where", "from_name", "fun_name"], "funcdef": "def"}, "scalpel.typeinfer.utilities.is_valid_call_link": {"fullname": "scalpel.typeinfer.utilities.is_valid_call_link", "modulename": "scalpel.typeinfer.utilities", "qualname": "is_valid_call_link", "type": "function", "doc": "<p></p>\n", "parameters": ["t_vals"], "funcdef": "def"}, "scalpel.typeinfer.utilities.generate_ast": {"fullname": "scalpel.typeinfer.utilities.generate_ast", "modulename": "scalpel.typeinfer.utilities", "qualname": "generate_ast", "type": "function", "doc": "<p>Generates ast from the source string</p>\n", "parameters": ["source"], "funcdef": "def"}, "scalpel.typeinfer.utilities.get_function_comment": {"fullname": "scalpel.typeinfer.utilities.get_function_comment", "modulename": "scalpel.typeinfer.utilities", "qualname": "get_function_comment", "type": "function", "doc": "<p>Get the function comment header for function source code\nArgs:\n    source: The function source code to check\nReturns:\n    The function header comment</p>\n", "parameters": ["source"], "funcdef": "def"}, "scalpel.typeinfer.utilities.is_done": {"fullname": "scalpel.typeinfer.utilities.is_done", "modulename": "scalpel.typeinfer.utilities", "qualname": "is_done", "type": "function", "doc": "<p>Determines whether a list of type values is in a finished state\nArgs:\n    t_vals: List of type values to check\nReturns:\n    True if in a finished state, False otherwise</p>\n", "parameters": ["t_vals"], "funcdef": "def"}, "scalpel.typeinfer.utilities.find_class_by_attr": {"fullname": "scalpel.typeinfer.utilities.find_class_by_attr", "modulename": "scalpel.typeinfer.utilities", "qualname": "find_class_by_attr", "type": "function", "doc": "<p></p>\n", "parameters": ["module_records", "attrs"], "funcdef": "def"}, "scalpel.typeinfer.utilities.get_attr_name": {"fullname": "scalpel.typeinfer.utilities.get_attr_name", "modulename": "scalpel.typeinfer.utilities", "qualname": "get_attr_name", "type": "function", "doc": "<p></p>\n", "parameters": ["node"], "funcdef": "def"}, "scalpel.typeinfer.utilities.resolve_name": {"fullname": "scalpel.typeinfer.utilities.resolve_name", "modulename": "scalpel.typeinfer.utilities", "qualname": "resolve_name", "type": "function", "doc": "<p>Resolve the string name of an AST node</p>\n", "parameters": ["node"], "funcdef": "def"}, "scalpel.typeinfer.visitors": {"fullname": "scalpel.typeinfer.visitors", "modulename": "scalpel.typeinfer.visitors", "qualname": "", "type": "module", "doc": "<p>Node visitors used for Type Inference</p>\n"}, "scalpel.typeinfer.visitors.FuncCallVisitor": {"fullname": "scalpel.typeinfer.visitors.FuncCallVisitor", "modulename": "scalpel.typeinfer.visitors", "qualname": "FuncCallVisitor", "type": "class", "doc": "<p>A NodeVisitor class for getting function call information</p>\n"}, "scalpel.typeinfer.visitors.FuncCallVisitor.__init__": {"fullname": "scalpel.typeinfer.visitors.FuncCallVisitor.__init__", "modulename": "scalpel.typeinfer.visitors", "qualname": "FuncCallVisitor.__init__", "type": "function", "doc": "<p></p>\n", "parameters": ["self"], "funcdef": "def"}, "scalpel.typeinfer.visitors.FuncCallVisitor.clear": {"fullname": "scalpel.typeinfer.visitors.FuncCallVisitor.clear", "modulename": "scalpel.typeinfer.visitors", "qualname": "FuncCallVisitor.clear", "type": "function", "doc": "<p></p>\n", "parameters": ["self"], "funcdef": "def"}, "scalpel.typeinfer.visitors.FuncCallVisitor.name": {"fullname": "scalpel.typeinfer.visitors.FuncCallVisitor.name", "modulename": "scalpel.typeinfer.visitors", "qualname": "FuncCallVisitor.name", "type": "variable", "doc": "<p></p>\n"}, "scalpel.typeinfer.visitors.FuncCallVisitor.visit_Name": {"fullname": "scalpel.typeinfer.visitors.FuncCallVisitor.visit_Name", "modulename": "scalpel.typeinfer.visitors", "qualname": "FuncCallVisitor.visit_Name", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "node"], "funcdef": "def"}, "scalpel.typeinfer.visitors.FuncCallVisitor.visit_Attribute": {"fullname": "scalpel.typeinfer.visitors.FuncCallVisitor.visit_Attribute", "modulename": "scalpel.typeinfer.visitors", "qualname": "FuncCallVisitor.visit_Attribute", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "node"], "funcdef": "def"}, "scalpel.typeinfer.visitors.FuncCallVisitor.visit_Call": {"fullname": "scalpel.typeinfer.visitors.FuncCallVisitor.visit_Call", "modulename": "scalpel.typeinfer.visitors", "qualname": "FuncCallVisitor.visit_Call", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "node"], "funcdef": "def"}, "scalpel.typeinfer.visitors.TypeInferCallTransformer": {"fullname": "scalpel.typeinfer.visitors.TypeInferCallTransformer", "modulename": "scalpel.typeinfer.visitors", "qualname": "TypeInferCallTransformer", "type": "class", "doc": "<p>A NodeTransformer class for getting function call information</p>\n"}, "scalpel.typeinfer.visitors.TypeInferCallTransformer.__init__": {"fullname": "scalpel.typeinfer.visitors.TypeInferCallTransformer.__init__", "modulename": "scalpel.typeinfer.visitors", "qualname": "TypeInferCallTransformer.__init__", "type": "function", "doc": "<p></p>\n", "parameters": ["self"], "funcdef": "def"}, "scalpel.typeinfer.visitors.TypeInferCallTransformer.visit_Attribute": {"fullname": "scalpel.typeinfer.visitors.TypeInferCallTransformer.visit_Attribute", "modulename": "scalpel.typeinfer.visitors", "qualname": "TypeInferCallTransformer.visit_Attribute", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "node"], "funcdef": "def"}, "scalpel.typeinfer.visitors.TypeInferCallTransformer.visit_Call": {"fullname": "scalpel.typeinfer.visitors.TypeInferCallTransformer.visit_Call", "modulename": "scalpel.typeinfer.visitors", "qualname": "TypeInferCallTransformer.visit_Call", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "node"], "funcdef": "def"}, "scalpel.typeinfer.visitors.get_args": {"fullname": "scalpel.typeinfer.visitors.get_args", "modulename": "scalpel.typeinfer.visitors", "qualname": "get_args", "type": "function", "doc": "<p>Get the argument types of the node\nArgs:\n    node: the node being checked</p>\n", "parameters": ["node"], "funcdef": "def"}, "scalpel.typeinfer.visitors.get_func_calls_type": {"fullname": "scalpel.typeinfer.visitors.get_func_calls_type", "modulename": "scalpel.typeinfer.visitors", "qualname": "get_func_calls_type", "type": "function", "doc": "<p></p>\n", "parameters": ["tree"], "funcdef": "def"}, "scalpel.typeinfer.visitors.get_call_type": {"fullname": "scalpel.typeinfer.visitors.get_call_type", "modulename": "scalpel.typeinfer.visitors", "qualname": "get_call_type", "type": "function", "doc": "<p>Get the argument types of all function calls\nArgs:\n    tree: the ast tree being checked</p>\n", "parameters": ["tree"], "funcdef": "def"}}, "docInfo": {"scalpel": {"qualname": 0, "fullname": 1, "doc": 29}, "scalpel.rewriter": {"qualname": 1, "fullname": 2, "doc": 0}, "scalpel.SSA": {"qualname": 0, "fullname": 2, "doc": 74}, "scalpel.SSA.alg": {"qualname": 0, "fullname": 3, "doc": 30}, "scalpel.SSA.alg.immediate_dominators": {"qualname": 1, "fullname": 4, "doc": 105}, "scalpel.SSA.alg.dominance_frontiers": {"qualname": 1, "fullname": 4, "doc": 99}, "scalpel.SSA.alg.main": {"qualname": 1, "fullname": 4, "doc": 0}, "scalpel.SSA.const": {"qualname": 0, "fullname": 3, "doc": 15}, "scalpel.SSA.const.parse_val": {"qualname": 1, "fullname": 4, "doc": 0}, "scalpel.SSA.const.SSA": {"qualname": 1, "fullname": 4, "doc": 8}, "scalpel.SSA.const.SSA.__init__": {"qualname": 2, "fullname": 5, "doc": 5}, "scalpel.SSA.const.SSA.get_attribute_stmts": {"qualname": 2, "fullname": 5, "doc": 0}, "scalpel.SSA.const.SSA.get_identifiers": {"qualname": 2, "fullname": 5, "doc": 9}, "scalpel.SSA.const.SSA.compute_SSA": {"qualname": 2, "fullname": 5, "doc": 67}, "scalpel.SSA.const.SSA.get_stmt_idents_ctx": {"qualname": 2, "fullname": 5, "doc": 33}, "scalpel.SSA.const.SSA.to_json": {"qualname": 2, "fullname": 5, "doc": 0}, "scalpel.SSA.const.SSA.print_block": {"qualname": 2, "fullname": 5, "doc": 0}, "scalpel.SSA.const.SSA.compute_idom": {"qualname": 2, "fullname": 5, "doc": 12}, "scalpel.SSA.const.SSA.compute_DF": {"qualname": 2, "fullname": 5, "doc": 11}, "scalpel.SSA.ssa": {"qualname": 0, "fullname": 3, "doc": 15}, "scalpel.SSA.ssa.parse_val": {"qualname": 1, "fullname": 4, "doc": 0}, "scalpel.SSA.ssa.SSA": {"qualname": 1, "fullname": 4, "doc": 8}, "scalpel.SSA.ssa.SSA.__init__": {"qualname": 2, "fullname": 5, "doc": 5}, "scalpel.SSA.ssa.SSA.get_global_live_vars": {"qualname": 2, "fullname": 5, "doc": 0}, "scalpel.SSA.ssa.SSA.flatten_tuple": {"qualname": 2, "fullname": 5, "doc": 9}, "scalpel.SSA.ssa.SSA.get_attribute_stmts": {"qualname": 2, "fullname": 5, "doc": 0}, "scalpel.SSA.ssa.SSA.get_identifiers": {"qualname": 2, "fullname": 5, "doc": 9}, "scalpel.SSA.ssa.SSA.get_stmt_idents_ctx": {"qualname": 2, "fullname": 5, "doc": 0}, "scalpel.SSA.ssa.SSA.compute_undefined_names": {"qualname": 2, "fullname": 5, "doc": 5}, "scalpel.SSA.ssa.SSA.backward_query_new": {"qualname": 2, "fullname": 5, "doc": 0}, "scalpel.SSA.ssa.SSA.hit_scope": {"qualname": 2, "fullname": 5, "doc": 0}, "scalpel.SSA.ssa.SSA.is_undefined": {"qualname": 2, "fullname": 5, "doc": 0}, "scalpel.SSA.ssa.SSA.to_json": {"qualname": 2, "fullname": 5, "doc": 0}, "scalpel.SSA.ssa.SSA.print_block": {"qualname": 2, "fullname": 5, "doc": 0}, "scalpel.SSA.ssa.SSA.compute_idom": {"qualname": 2, "fullname": 5, "doc": 0}, "scalpel.SSA.ssa.SSA.RD": {"qualname": 2, "fullname": 5, "doc": 0}, "scalpel.SSA.ssa.SSA.compute_dom_old": {"qualname": 2, "fullname": 5, "doc": 0}, "scalpel.call_graph": {"qualname": 0, "fullname": 2, "doc": 49}, "scalpel.call_graph.pycg": {"qualname": 0, "fullname": 3, "doc": 39}, "scalpel.cfg": {"qualname": 0, "fullname": 2, "doc": 61}, "scalpel.cfg.builder": {"qualname": 0, "fullname": 3, "doc": 8}, "scalpel.cfg.builder.is_py38_or_higher": {"qualname": 1, "fullname": 4, "doc": 0}, "scalpel.cfg.builder.invert": {"qualname": 1, "fullname": 4, "doc": 20}, "scalpel.cfg.builder.merge_exitcases": {"qualname": 1, "fullname": 4, "doc": 17}, "scalpel.cfg.builder.CFGBuilder": {"qualname": 1, "fullname": 4, "doc": 18}, "scalpel.cfg.builder.CFGBuilder.__init__": {"qualname": 2, "fullname": 5, "doc": 0}, "scalpel.cfg.builder.CFGBuilder.build": {"qualname": 2, "fullname": 5, "doc": 43}, "scalpel.cfg.builder.CFGBuilder.build_from_src": {"qualname": 2, "fullname": 5, "doc": 23}, "scalpel.cfg.builder.CFGBuilder.build_from_file": {"qualname": 2, "fullname": 5, "doc": 25}, "scalpel.cfg.builder.CFGBuilder.new_block": {"qualname": 2, "fullname": 5, "doc": 11}, "scalpel.cfg.builder.CFGBuilder.add_statement": {"qualname": 2, "fullname": 5, "doc": 17}, "scalpel.cfg.builder.CFGBuilder.add_exit": {"qualname": 2, "fullname": 5, "doc": 25}, "scalpel.cfg.builder.CFGBuilder.new_loopguard": {"qualname": 2, "fullname": 5, "doc": 20}, "scalpel.cfg.builder.CFGBuilder.new_functionCFG": {"qualname": 2, "fullname": 5, "doc": 28}, "scalpel.cfg.builder.CFGBuilder.new_ClassCFG": {"qualname": 2, "fullname": 5, "doc": 28}, "scalpel.cfg.builder.CFGBuilder.clean_cfg": {"qualname": 2, "fullname": 5, "doc": 20}, "scalpel.cfg.builder.CFGBuilder.goto_new_block": {"qualname": 2, "fullname": 5, "doc": 0}, "scalpel.cfg.builder.CFGBuilder.visit_Expr": {"qualname": 2, "fullname": 5, "doc": 0}, "scalpel.cfg.builder.CFGBuilder.visit_Call": {"qualname": 2, "fullname": 5, "doc": 0}, "scalpel.cfg.builder.CFGBuilder.visit_Assign": {"qualname": 2, "fullname": 5, "doc": 0}, "scalpel.cfg.builder.CFGBuilder.visit_AnnAssign": {"qualname": 2, "fullname": 5, "doc": 0}, "scalpel.cfg.builder.CFGBuilder.visit_AugAssign": {"qualname": 2, "fullname": 5, "doc": 0}, "scalpel.cfg.builder.CFGBuilder.visit_Global": {"qualname": 2, "fullname": 5, "doc": 0}, "scalpel.cfg.builder.CFGBuilder.visit_Nonlocal": {"qualname": 2, "fullname": 5, "doc": 0}, "scalpel.cfg.builder.CFGBuilder.visit_Pass": {"qualname": 2, "fullname": 5, "doc": 0}, "scalpel.cfg.builder.CFGBuilder.visit_Delete": {"qualname": 2, "fullname": 5, "doc": 0}, "scalpel.cfg.builder.CFGBuilder.visit_Raise": {"qualname": 2, "fullname": 5, "doc": 0}, "scalpel.cfg.builder.CFGBuilder.visit_Assert": {"qualname": 2, "fullname": 5, "doc": 0}, "scalpel.cfg.builder.CFGBuilder.visit_Try": {"qualname": 2, "fullname": 5, "doc": 0}, "scalpel.cfg.builder.CFGBuilder.visit_If": {"qualname": 2, "fullname": 5, "doc": 0}, "scalpel.cfg.builder.CFGBuilder.visit_While": {"qualname": 2, "fullname": 5, "doc": 0}, "scalpel.cfg.builder.CFGBuilder.visit_For": {"qualname": 2, "fullname": 5, "doc": 0}, "scalpel.cfg.builder.CFGBuilder.visit_AsyncFor": {"qualname": 2, "fullname": 5, "doc": 0}, "scalpel.cfg.builder.CFGBuilder.visit_Break": {"qualname": 2, "fullname": 5, "doc": 0}, "scalpel.cfg.builder.CFGBuilder.visit_Continue": {"qualname": 2, "fullname": 5, "doc": 0}, "scalpel.cfg.builder.CFGBuilder.visit_Import": {"qualname": 2, "fullname": 5, "doc": 0}, "scalpel.cfg.builder.CFGBuilder.visit_ImportFrom": {"qualname": 2, "fullname": 5, "doc": 0}, "scalpel.cfg.builder.CFGBuilder.visit_FunctionDef": {"qualname": 2, "fullname": 5, "doc": 0}, "scalpel.cfg.builder.CFGBuilder.visit_AsyncFunctionDef": {"qualname": 2, "fullname": 5, "doc": 0}, "scalpel.cfg.builder.CFGBuilder.visit_ClassDef": {"qualname": 2, "fullname": 5, "doc": 0}, "scalpel.cfg.builder.CFGBuilder.visit_Await": {"qualname": 2, "fullname": 5, "doc": 0}, "scalpel.cfg.builder.CFGBuilder.visit_Return": {"qualname": 2, "fullname": 5, "doc": 0}, "scalpel.cfg.builder.CFGBuilder.visit_Yield": {"qualname": 2, "fullname": 5, "doc": 0}, "scalpel.cfg.builder.CFGBuilder.visit_With": {"qualname": 2, "fullname": 5, "doc": 0}, "scalpel.cfg.builder.CFGBuilder.visit_AsyncWith": {"qualname": 2, "fullname": 5, "doc": 0}, "scalpel.cfg.model": {"qualname": 0, "fullname": 3, "doc": 5}, "scalpel.cfg.model.Block": {"qualname": 1, "fullname": 4, "doc": 26}, "scalpel.cfg.model.Block.__init__": {"qualname": 2, "fullname": 5, "doc": 0}, "scalpel.cfg.model.Block.id": {"qualname": 2, "fullname": 5, "doc": 0}, "scalpel.cfg.model.Block.statements": {"qualname": 2, "fullname": 5, "doc": 0}, "scalpel.cfg.model.Block.func_calls": {"qualname": 2, "fullname": 5, "doc": 0}, "scalpel.cfg.model.Block.predecessors": {"qualname": 2, "fullname": 5, "doc": 0}, "scalpel.cfg.model.Block.exits": {"qualname": 2, "fullname": 5, "doc": 0}, "scalpel.cfg.model.Block.at": {"qualname": 1, "fullname": 4, "doc": 6}, "scalpel.cfg.model.Block.is_empty": {"qualname": 2, "fullname": 5, "doc": 10}, "scalpel.cfg.model.Block.strip_comment": {"qualname": 2, "fullname": 5, "doc": 0}, "scalpel.cfg.model.Block.get_source": {"qualname": 2, "fullname": 5, "doc": 14}, "scalpel.cfg.model.Block.get_calls": {"qualname": 2, "fullname": 5, "doc": 14}, "scalpel.cfg.model.Block.ssa_form": {"qualname": 2, "fullname": 5, "doc": 0}, "scalpel.cfg.model.Link": {"qualname": 1, "fullname": 4, "doc": 23}, "scalpel.cfg.model.Link.__init__": {"qualname": 2, "fullname": 5, "doc": 0}, "scalpel.cfg.model.Link.source": {"qualname": 2, "fullname": 5, "doc": 0}, "scalpel.cfg.model.Link.target": {"qualname": 2, "fullname": 5, "doc": 0}, "scalpel.cfg.model.Link.exitcase": {"qualname": 2, "fullname": 5, "doc": 0}, "scalpel.cfg.model.Link.get_exitcase": {"qualname": 2, "fullname": 5, "doc": 13}, "scalpel.cfg.model.CFG": {"qualname": 1, "fullname": 4, "doc": 28}, "scalpel.cfg.model.CFG.__init__": {"qualname": 2, "fullname": 5, "doc": 6}, "scalpel.cfg.model.CFG.remove_comments": {"qualname": 2, "fullname": 5, "doc": 0}, "scalpel.cfg.model.CFG.get_all_blocks": {"qualname": 2, "fullname": 5, "doc": 11}, "scalpel.cfg.model.CFG.build_visual": {"qualname": 2, "fullname": 5, "doc": 30}, "scalpel.core": {"qualname": 0, "fullname": 2, "doc": 0}, "scalpel.core.class_visitor": {"qualname": 0, "fullname": 3, "doc": 0}, "scalpel.core.class_visitor.get_keywords": {"qualname": 1, "fullname": 4, "doc": 0}, "scalpel.core.class_visitor.ClassVisitor": {"qualname": 1, "fullname": 4, "doc": 71}, "scalpel.core.class_visitor.ClassVisitor.__init__": {"qualname": 2, "fullname": 5, "doc": 0}, "scalpel.core.class_visitor.ClassVisitor.visit_FunctionDef": {"qualname": 2, "fullname": 5, "doc": 0}, "scalpel.core.fun_def_visitor": {"qualname": 0, "fullname": 3, "doc": 0}, "scalpel.core.fun_def_visitor.FunDefVisitor": {"qualname": 1, "fullname": 4, "doc": 71}, "scalpel.core.fun_def_visitor.FunDefVisitor.__init__": {"qualname": 2, "fullname": 5, "doc": 0}, "scalpel.core.fun_def_visitor.FunDefVisitor.visit": {"qualname": 2, "fullname": 5, "doc": 2}, "scalpel.core.fun_def_visitor.FunDefVisitor.visit_Args": {"qualname": 2, "fullname": 5, "doc": 0}, "scalpel.core.func_call_visitor": {"qualname": 0, "fullname": 3, "doc": 0}, "scalpel.core.func_call_visitor.is_py38_or_higher": {"qualname": 1, "fullname": 4, "doc": 0}, "scalpel.core.func_call_visitor.CallTransformer": {"qualname": 1, "fullname": 4, "doc": 101}, "scalpel.core.func_call_visitor.CallTransformer.__init__": {"qualname": 2, "fullname": 5, "doc": 0}, "scalpel.core.func_call_visitor.CallTransformer.visit_Attribute": {"qualname": 2, "fullname": 5, "doc": 0}, "scalpel.core.func_call_visitor.CallTransformer.param2str": {"qualname": 2, "fullname": 5, "doc": 0}, "scalpel.core.func_call_visitor.CallTransformer.visit_Call": {"qualname": 2, "fullname": 5, "doc": 0}, "scalpel.core.func_call_visitor.FuncCallVisitor": {"qualname": 1, "fullname": 4, "doc": 71}, "scalpel.core.func_call_visitor.FuncCallVisitor.__init__": {"qualname": 2, "fullname": 5, "doc": 0}, "scalpel.core.func_call_visitor.FuncCallVisitor.clear": {"qualname": 2, "fullname": 5, "doc": 0}, "scalpel.core.func_call_visitor.FuncCallVisitor.name": {"qualname": 2, "fullname": 5, "doc": 0}, "scalpel.core.func_call_visitor.FuncCallVisitor.visit_Name": {"qualname": 2, "fullname": 5, "doc": 0}, "scalpel.core.func_call_visitor.FuncCallVisitor.visit_Attribute": {"qualname": 2, "fullname": 5, "doc": 0}, "scalpel.core.func_call_visitor.FuncCallVisitor.visit_Call": {"qualname": 2, "fullname": 5, "doc": 0}, "scalpel.core.func_call_visitor.get_args": {"qualname": 1, "fullname": 4, "doc": 0}, "scalpel.core.func_call_visitor.get_call_type": {"qualname": 1, "fullname": 4, "doc": 0}, "scalpel.core.func_call_visitor.get_func_calls": {"qualname": 1, "fullname": 4, "doc": 0}, "scalpel.core.kw_visitor": {"qualname": 0, "fullname": 3, "doc": 0}, "scalpel.core.kw_visitor.KWVisitor": {"qualname": 1, "fullname": 4, "doc": 71}, "scalpel.core.kw_visitor.KWVisitor.__init__": {"qualname": 2, "fullname": 5, "doc": 0}, "scalpel.core.kw_visitor.KWVisitor.visit_keyword": {"qualname": 2, "fullname": 5, "doc": 0}, "scalpel.core.mnode": {"qualname": 0, "fullname": 3, "doc": 25}, "scalpel.core.mnode.get_attr_name": {"qualname": 1, "fullname": 4, "doc": 0}, "scalpel.core.mnode.ImportRelation": {"qualname": 1, "fullname": 4, "doc": 0}, "scalpel.core.mnode.ImportRelation.__init__": {"qualname": 2, "fullname": 5, "doc": 0}, "scalpel.core.mnode.MNode": {"qualname": 1, "fullname": 4, "doc": 14}, "scalpel.core.mnode.MNode.__init__": {"qualname": 2, "fullname": 5, "doc": 6}, "scalpel.core.mnode.MNode.rewrite": {"qualname": 2, "fullname": 5, "doc": 2}, "scalpel.core.mnode.MNode.parse_vars": {"qualname": 2, "fullname": 5, "doc": 22}, "scalpel.core.mnode.MNode.gen_import_relations": {"qualname": 2, "fullname": 5, "doc": 0}, "scalpel.core.mnode.MNode.parse_func_calls": {"qualname": 2, "fullname": 5, "doc": 22}, "scalpel.core.mnode.MNode.gen_ast": {"qualname": 2, "fullname": 5, "doc": 5}, "scalpel.core.mnode.MNode.parse_func_defs": {"qualname": 2, "fullname": 5, "doc": 9}, "scalpel.core.mnode.MNode.parse_import_stmts": {"qualname": 2, "fullname": 5, "doc": 9}, "scalpel.core.mnode.MNode.retrieve_meta": {"qualname": 2, "fullname": 5, "doc": 0}, "scalpel.core.mnode.MNode.gen_cfg": {"qualname": 2, "fullname": 5, "doc": 0}, "scalpel.core.mnode.MNode.make_unit_walker": {"qualname": 2, "fullname": 5, "doc": 5}, "scalpel.core.source_visitor": {"qualname": 0, "fullname": 3, "doc": 0}, "scalpel.core.source_visitor.get_keywords": {"qualname": 1, "fullname": 4, "doc": 0}, "scalpel.core.source_visitor.SourceVisitor": {"qualname": 1, "fullname": 4, "doc": 71}, "scalpel.core.source_visitor.SourceVisitor.__init__": {"qualname": 2, "fullname": 5, "doc": 0}, "scalpel.core.source_visitor.SourceVisitor.visit_FunctionDef": {"qualname": 2, "fullname": 5, "doc": 0}, "scalpel.core.source_visitor.SourceVisitor.visit_ClassDef": {"qualname": 2, "fullname": 5, "doc": 0}, "scalpel.core.util": {"qualname": 0, "fullname": 3, "doc": 0}, "scalpel.core.util.iter_fields": {"qualname": 1, "fullname": 4, "doc": 10}, "scalpel.core.util.iter_child_nodes": {"qualname": 1, "fullname": 4, "doc": 11}, "scalpel.core.util.iter_stmt_children": {"qualname": 1, "fullname": 4, "doc": 11}, "scalpel.core.util.find_local_modules": {"qualname": 1, "fullname": 4, "doc": 0}, "scalpel.core.util.get_path_by_extension": {"qualname": 1, "fullname": 4, "doc": 0}, "scalpel.core.util.Unit": {"qualname": 1, "fullname": 4, "doc": 0}, "scalpel.core.util.Unit.__init__": {"qualname": 2, "fullname": 5, "doc": 0}, "scalpel.core.util.Unit.search_for_pos": {"qualname": 2, "fullname": 5, "doc": 0}, "scalpel.core.util.Unit.insert_stmt_before": {"qualname": 2, "fullname": 5, "doc": 0}, "scalpel.core.util.Unit.insert_stmts_before": {"qualname": 2, "fullname": 5, "doc": 0}, "scalpel.core.util.Unit.insert_after": {"qualname": 2, "fullname": 5, "doc": 0}, "scalpel.core.util.Unit.remove": {"qualname": 2, "fullname": 5, "doc": 0}, "scalpel.core.util.Unit.replace": {"qualname": 2, "fullname": 5, "doc": 0}, "scalpel.core.util.UnitWalker": {"qualname": 1, "fullname": 4, "doc": 0}, "scalpel.core.util.StmtIterator": {"qualname": 1, "fullname": 4, "doc": 0}, "scalpel.core.util.StmtIterator.__init__": {"qualname": 2, "fullname": 5, "doc": 0}, "scalpel.core.util.StmtIterator.insert_before": {"qualname": 2, "fullname": 5, "doc": 0}, "scalpel.core.util.StmtIterator.insert_after": {"qualname": 2, "fullname": 5, "doc": 0}, "scalpel.core.util.StmtIterator.remove": {"qualname": 2, "fullname": 5, "doc": 0}, "scalpel.core.util.StmtIterator.replace": {"qualname": 2, "fullname": 5, "doc": 0}, "scalpel.core.vars_visitor": {"qualname": 0, "fullname": 3, "doc": 0}, "scalpel.core.vars_visitor.VarsVisitor": {"qualname": 1, "fullname": 4, "doc": 71}, "scalpel.core.vars_visitor.VarsVisitor.__init__": {"qualname": 2, "fullname": 5, "doc": 0}, "scalpel.core.vars_visitor.VarsVisitor.visit_Name": {"qualname": 2, "fullname": 5, "doc": 0}, "scalpel.core.vars_visitor.VarsVisitor.visit_BoolOp": {"qualname": 2, "fullname": 5, "doc": 0}, "scalpel.core.vars_visitor.VarsVisitor.visit_BinOp": {"qualname": 2, "fullname": 5, "doc": 0}, "scalpel.core.vars_visitor.VarsVisitor.visit_UnaryOp": {"qualname": 2, "fullname": 5, "doc": 0}, "scalpel.core.vars_visitor.VarsVisitor.visit_Lambda": {"qualname": 2, "fullname": 5, "doc": 0}, "scalpel.core.vars_visitor.VarsVisitor.visit_IfExp": {"qualname": 2, "fullname": 5, "doc": 0}, "scalpel.core.vars_visitor.VarsVisitor.visit_Dict": {"qualname": 2, "fullname": 5, "doc": 0}, "scalpel.core.vars_visitor.VarsVisitor.visit_Set": {"qualname": 2, "fullname": 5, "doc": 0}, "scalpel.core.vars_visitor.VarsVisitor.comprehension": {"qualname": 2, "fullname": 5, "doc": 0}, "scalpel.core.vars_visitor.VarsVisitor.visit_ListComp": {"qualname": 2, "fullname": 5, "doc": 0}, "scalpel.core.vars_visitor.VarsVisitor.visit_SetComp": {"qualname": 2, "fullname": 5, "doc": 0}, "scalpel.core.vars_visitor.VarsVisitor.visit_DictComp": {"qualname": 2, "fullname": 5, "doc": 0}, "scalpel.core.vars_visitor.VarsVisitor.visit_GeneratorComp": {"qualname": 2, "fullname": 5, "doc": 0}, "scalpel.core.vars_visitor.VarsVisitor.visit_Yield": {"qualname": 2, "fullname": 5, "doc": 0}, "scalpel.core.vars_visitor.VarsVisitor.visit_YieldFrom": {"qualname": 2, "fullname": 5, "doc": 0}, "scalpel.core.vars_visitor.VarsVisitor.visit_Compare": {"qualname": 2, "fullname": 5, "doc": 0}, "scalpel.core.vars_visitor.VarsVisitor.visit_Call": {"qualname": 2, "fullname": 5, "doc": 0}, "scalpel.core.vars_visitor.VarsVisitor.visit_keyword": {"qualname": 2, "fullname": 5, "doc": 0}, "scalpel.core.vars_visitor.VarsVisitor.visit_Attribute": {"qualname": 2, "fullname": 5, "doc": 0}, "scalpel.core.vars_visitor.VarsVisitor.get_attr_name": {"qualname": 2, "fullname": 5, "doc": 0}, "scalpel.core.vars_visitor.VarsVisitor.slicev": {"qualname": 2, "fullname": 5, "doc": 0}, "scalpel.core.vars_visitor.VarsVisitor.visit_Subscript": {"qualname": 2, "fullname": 5, "doc": 0}, "scalpel.core.vars_visitor.VarsVisitor.visit_Starred": {"qualname": 2, "fullname": 5, "doc": 0}, "scalpel.core.vars_visitor.VarsVisitor.visit_List": {"qualname": 2, "fullname": 5, "doc": 0}, "scalpel.core.vars_visitor.VarsVisitor.visit_Tuple": {"qualname": 2, "fullname": 5, "doc": 0}, "scalpel.core.vars_visitor.VarsVisitor.visit_FunctionDef": {"qualname": 2, "fullname": 5, "doc": 0}, "scalpel.core.vars_visitor.VarsVisitor.visit_Assign": {"qualname": 2, "fullname": 5, "doc": 0}, "scalpel.core.vars_visitor.get_vars": {"qualname": 1, "fullname": 4, "doc": 0}, "scalpel.import_graph": {"qualname": 0, "fullname": 2, "doc": 46}, "scalpel.import_graph.import_graph": {"qualname": 0, "fullname": 3, "doc": 3}, "scalpel.import_graph.import_graph.Tree": {"qualname": 1, "fullname": 4, "doc": 0}, "scalpel.import_graph.import_graph.Tree.__init__": {"qualname": 2, "fullname": 5, "doc": 0}, "scalpel.import_graph.import_graph.ImportGraph": {"qualname": 1, "fullname": 4, "doc": 19}, "scalpel.import_graph.import_graph.ImportGraph.__init__": {"qualname": 2, "fullname": 5, "doc": 15}, "scalpel.import_graph.import_graph.ImportGraph.build_dir_tree": {"qualname": 2, "fullname": 5, "doc": 6}, "scalpel.import_graph.import_graph.ImportGraph.get_leaf_nodes": {"qualname": 2, "fullname": 5, "doc": 11}, "scalpel.import_graph.import_graph.ImportGraph.go_to_that_node": {"qualname": 2, "fullname": 5, "doc": 46}, "scalpel.import_graph.import_graph.ImportGraph.parse_import": {"qualname": 2, "fullname": 5, "doc": 15}, "scalpel.import_graph.import_graph.ImportGraph.extract_class_from_source": {"qualname": 2, "fullname": 5, "doc": 17}, "scalpel.import_graph.import_graph.ImportGraph.leaf2root": {"qualname": 2, "fullname": 5, "doc": 19}, "scalpel.import_graph.import_graph.ImportGraph.find_child_by_name": {"qualname": 2, "fullname": 5, "doc": 6}, "scalpel.import_graph.import_graph.ImportGraph.find_node_by_name": {"qualname": 2, "fullname": 5, "doc": 5}, "scalpel.typeinfer": {"qualname": 0, "fullname": 2, "doc": 35}, "scalpel.typeinfer.analysers": {"qualname": 0, "fullname": 3, "doc": 17}, "scalpel.typeinfer.analysers.BinaryOperatorMap": {"qualname": 1, "fullname": 4, "doc": 5}, "scalpel.typeinfer.analysers.BinaryOperatorMap.__init__": {"qualname": 2, "fullname": 5, "doc": 0}, "scalpel.typeinfer.analysers.BinaryOperatorMap.append": {"qualname": 2, "fullname": 5, "doc": 0}, "scalpel.typeinfer.analysers.BinaryOperatorMap.chain_types": {"qualname": 2, "fullname": 5, "doc": 0}, "scalpel.typeinfer.analysers.ImportTypeMap": {"qualname": 1, "fullname": 4, "doc": 7}, "scalpel.typeinfer.analysers.ImportTypeMap.__init__": {"qualname": 2, "fullname": 5, "doc": 7}, "scalpel.typeinfer.analysers.ImportTypeMap.map": {"qualname": 2, "fullname": 5, "doc": 3}, "scalpel.typeinfer.analysers.ImportTypeMap.get_imported_type": {"qualname": 2, "fullname": 5, "doc": 13}, "scalpel.typeinfer.analysers.ClassDefinitionMap": {"qualname": 1, "fullname": 4, "doc": 5}, "scalpel.typeinfer.analysers.ClassDefinitionMap.__init__": {"qualname": 2, "fullname": 5, "doc": 7}, "scalpel.typeinfer.analysers.ClassDefinitionMap.map": {"qualname": 2, "fullname": 5, "doc": 2}, "scalpel.typeinfer.analysers.FunctionDefinitionMap": {"qualname": 1, "fullname": 4, "doc": 5}, "scalpel.typeinfer.analysers.FunctionDefinitionMap.__init__": {"qualname": 2, "fullname": 5, "doc": 7}, "scalpel.typeinfer.analysers.FunctionDefinitionMap.map": {"qualname": 2, "fullname": 5, "doc": 2}, "scalpel.typeinfer.analysers.VariableAssignmentMap": {"qualname": 1, "fullname": 4, "doc": 4}, "scalpel.typeinfer.analysers.VariableAssignmentMap.__init__": {"qualname": 2, "fullname": 5, "doc": 14}, "scalpel.typeinfer.analysers.VariableAssignmentMap.map": {"qualname": 2, "fullname": 5, "doc": 2}, "scalpel.typeinfer.analysers.BinaryOperationMap": {"qualname": 1, "fullname": 4, "doc": 4}, "scalpel.typeinfer.analysers.BinaryOperationMap.__init__": {"qualname": 2, "fullname": 5, "doc": 7}, "scalpel.typeinfer.analysers.BinaryOperationMap.map": {"qualname": 2, "fullname": 5, "doc": 2}, "scalpel.typeinfer.analysers.HeuristicParser": {"qualname": 1, "fullname": 4, "doc": 5}, "scalpel.typeinfer.analysers.HeuristicParser.__init__": {"qualname": 2, "fullname": 5, "doc": 0}, "scalpel.typeinfer.analysers.HeuristicParser.visit_FunctionDef": {"qualname": 2, "fullname": 5, "doc": 0}, "scalpel.typeinfer.analysers.HeuristicParser.visit_Import": {"qualname": 2, "fullname": 5, "doc": 0}, "scalpel.typeinfer.analysers.HeuristicParser.visit_ImportFrom": {"qualname": 2, "fullname": 5, "doc": 0}, "scalpel.typeinfer.analysers.HeuristicParser.visit_While": {"qualname": 2, "fullname": 5, "doc": 0}, "scalpel.typeinfer.analysers.HeuristicParser.visit_Compare": {"qualname": 2, "fullname": 5, "doc": 0}, "scalpel.typeinfer.analysers.HeuristicParser.visit_BinOp": {"qualname": 2, "fullname": 5, "doc": 0}, "scalpel.typeinfer.analysers.HeuristicParser.visit_IfExp": {"qualname": 2, "fullname": 5, "doc": 0}, "scalpel.typeinfer.analysers.HeuristicParser.visit_If": {"qualname": 2, "fullname": 5, "doc": 0}, "scalpel.typeinfer.analysers.SourceSplitVisitor": {"qualname": 1, "fullname": 4, "doc": 5}, "scalpel.typeinfer.analysers.SourceSplitVisitor.__init__": {"qualname": 2, "fullname": 5, "doc": 0}, "scalpel.typeinfer.analysers.SourceSplitVisitor.visit_Assign": {"qualname": 2, "fullname": 5, "doc": 29}, "scalpel.typeinfer.analysers.SourceSplitVisitor.visit_FunctionDef": {"qualname": 2, "fullname": 5, "doc": 0}, "scalpel.typeinfer.analysers.ClassSplitVisitor": {"qualname": 1, "fullname": 4, "doc": 11}, "scalpel.typeinfer.analysers.ClassSplitVisitor.__init__": {"qualname": 2, "fullname": 5, "doc": 0}, "scalpel.typeinfer.analysers.ClassSplitVisitor.visit_FunctionDef": {"qualname": 2, "fullname": 5, "doc": 0}, "scalpel.typeinfer.analysers.ClassSplitVisitor.visit_ClassDef": {"qualname": 2, "fullname": 5, "doc": 0}, "scalpel.typeinfer.analysers.ReturnStmtVisitor": {"qualname": 1, "fullname": 4, "doc": 5}, "scalpel.typeinfer.analysers.ReturnStmtVisitor.__init__": {"qualname": 2, "fullname": 5, "doc": 0}, "scalpel.typeinfer.analysers.ReturnStmtVisitor.import_assign_records": {"qualname": 2, "fullname": 5, "doc": 11}, "scalpel.typeinfer.analysers.ReturnStmtVisitor.import_class_assign_records": {"qualname": 2, "fullname": 5, "doc": 13}, "scalpel.typeinfer.analysers.ReturnStmtVisitor.import_assignments": {"qualname": 2, "fullname": 5, "doc": 0}, "scalpel.typeinfer.analysers.ReturnStmtVisitor.visit_FunctionDef": {"qualname": 2, "fullname": 5, "doc": 0}, "scalpel.typeinfer.analysers.ReturnStmtVisitor.visit_Yield": {"qualname": 2, "fullname": 5, "doc": 0}, "scalpel.typeinfer.analysers.ReturnStmtVisitor.infer_actual_return_value": {"qualname": 2, "fullname": 5, "doc": 14}, "scalpel.typeinfer.analysers.ReturnStmtVisitor.type_infer_CFG": {"qualname": 2, "fullname": 5, "doc": 12}, "scalpel.typeinfer.analysers.ReturnStmtVisitor.query_assign_records": {"qualname": 2, "fullname": 5, "doc": 0}, "scalpel.typeinfer.analysers.ReturnStmtVisitor.type_infer": {"qualname": 2, "fullname": 5, "doc": 0}, "scalpel.typeinfer.analysers.ReturnStmtVisitor.clear": {"qualname": 2, "fullname": 5, "doc": 0}, "scalpel.typeinfer.analysers.ReturnStmtVisitor.clear_all": {"qualname": 2, "fullname": 5, "doc": 0}, "scalpel.typeinfer.analysers.Heuristics": {"qualname": 1, "fullname": 4, "doc": 6}, "scalpel.typeinfer.analysers.Heuristics.__init__": {"qualname": 2, "fullname": 5, "doc": 0}, "scalpel.typeinfer.analysers.Heuristics.heuristic_two": {"qualname": 2, "fullname": 5, "doc": 12}, "scalpel.typeinfer.analysers.Heuristics.heuristic_five": {"qualname": 2, "fullname": 5, "doc": 13}, "scalpel.typeinfer.analysers.Heuristics.heuristic_five_return": {"qualname": 2, "fullname": 5, "doc": 0}, "scalpel.typeinfer.analysers.Heuristics.heuristic_six": {"qualname": 2, "fullname": 5, "doc": 9}, "scalpel.typeinfer.analysers.Heuristics.heuristic_seven": {"qualname": 2, "fullname": 5, "doc": 9}, "scalpel.typeinfer.analysers.Heuristics.heuristic_eight": {"qualname": 2, "fullname": 5, "doc": 38}, "scalpel.typeinfer.analysers.Heuristics.heuristic_nine": {"qualname": 2, "fullname": 5, "doc": 13}, "scalpel.typeinfer.analysers.Heuristics.heuristic_eleven": {"qualname": 2, "fullname": 5, "doc": 0}, "scalpel.typeinfer.analysers.Heuristics.heuristic_twelve": {"qualname": 2, "fullname": 5, "doc": 38}, "scalpel.typeinfer.analysers.Heuristics.get_bin_op_involved": {"qualname": 2, "fullname": 5, "doc": 14}, "scalpel.typeinfer.analysers.Heuristics.in_bin_op": {"qualname": 2, "fullname": 5, "doc": 22}, "scalpel.typeinfer.classes": {"qualname": 0, "fullname": 3, "doc": 5}, "scalpel.typeinfer.classes.TypeWarning": {"qualname": 1, "fullname": 4, "doc": 4}, "scalpel.typeinfer.classes.TypeWarning.__init__": {"qualname": 2, "fullname": 5, "doc": 0}, "scalpel.typeinfer.classes.TypeWarning.print_warning": {"qualname": 2, "fullname": 5, "doc": 0}, "scalpel.typeinfer.classes.ScalpelVariable": {"qualname": 1, "fullname": 4, "doc": 3}, "scalpel.typeinfer.classes.ScalpelVariable.__init__": {"qualname": 2, "fullname": 5, "doc": 0}, "scalpel.typeinfer.classes.ScalpelVariable.type": {"qualname": 2, "fullname": 5, "doc": 0}, "scalpel.typeinfer.classes.ScalpelVariable.in_conditional": {"qualname": 2, "fullname": 5, "doc": 0}, "scalpel.typeinfer.classes.ScalpelVariable.in_equality": {"qualname": 2, "fullname": 5, "doc": 0}, "scalpel.typeinfer.classes.ScalpelVariable.is_callable": {"qualname": 2, "fullname": 5, "doc": 0}, "scalpel.typeinfer.classes.ScalpelVariable.called_methods": {"qualname": 2, "fullname": 5, "doc": 0}, "scalpel.typeinfer.classes.ScalpelVariable.binary_operation": {"qualname": 2, "fullname": 5, "doc": 0}, "scalpel.typeinfer.classes.ScalpelVariable.is_arg": {"qualname": 2, "fullname": 5, "doc": 0}, "scalpel.typeinfer.classes.ScalpelFunction": {"qualname": 1, "fullname": 4, "doc": 3}, "scalpel.typeinfer.classes.ScalpelFunction.__init__": {"qualname": 2, "fullname": 5, "doc": 0}, "scalpel.typeinfer.classes.ScalpelFunction.return_type": {"qualname": 2, "fullname": 5, "doc": 0}, "scalpel.typeinfer.classes.ScalpelClass": {"qualname": 1, "fullname": 4, "doc": 3}, "scalpel.typeinfer.classes.ScalpelClass.__init__": {"qualname": 2, "fullname": 5, "doc": 0}, "scalpel.typeinfer.classes.ScalpelClass.inherits": {"qualname": 2, "fullname": 5, "doc": 0}, "scalpel.typeinfer.classes.BinaryOperation": {"qualname": 1, "fullname": 4, "doc": 7}, "scalpel.typeinfer.classes.BinaryOperation.__init__": {"qualname": 2, "fullname": 5, "doc": 0}, "scalpel.typeinfer.classes.BinaryOperation.shared_type": {"qualname": 2, "fullname": 5, "doc": 0}, "scalpel.typeinfer.classes.ProcessedFile": {"qualname": 1, "fullname": 4, "doc": 4}, "scalpel.typeinfer.classes.ProcessedFile.__init__": {"qualname": 2, "fullname": 5, "doc": 0}, "scalpel.typeinfer.typeinfer": {"qualname": 0, "fullname": 3, "doc": 14}, "scalpel.typeinfer.typeinfer.process_code_with_heuristics": {"qualname": 1, "fullname": 4, "doc": 0}, "scalpel.typeinfer.typeinfer.TypeInference": {"qualname": 1, "fullname": 4, "doc": 9}, "scalpel.typeinfer.typeinfer.TypeInference.__init__": {"qualname": 2, "fullname": 5, "doc": 14}, "scalpel.typeinfer.typeinfer.TypeInference.infer_types": {"qualname": 2, "fullname": 5, "doc": 5}, "scalpel.typeinfer.typeinfer.TypeInference.get_types": {"qualname": 2, "fullname": 5, "doc": 5}, "scalpel.typeinfer.typeinfer.TypeInference.process_file": {"qualname": 2, "fullname": 5, "doc": 10}, "scalpel.typeinfer.typeinfer.TypeInference.print_types": {"qualname": 2, "fullname": 5, "doc": 7}, "scalpel.typeinfer.utilities": {"qualname": 0, "fullname": 3, "doc": 4}, "scalpel.typeinfer.utilities.get_func_calls_type": {"qualname": 1, "fullname": 4, "doc": 0}, "scalpel.typeinfer.utilities.TypeInferCallTransformer": {"qualname": 1, "fullname": 4, "doc": 6}, "scalpel.typeinfer.utilities.TypeInferCallTransformer.__init__": {"qualname": 2, "fullname": 5, "doc": 0}, "scalpel.typeinfer.utilities.TypeInferCallTransformer.visit_Attribute": {"qualname": 2, "fullname": 5, "doc": 0}, "scalpel.typeinfer.utilities.TypeInferCallTransformer.visit_Call": {"qualname": 2, "fullname": 5, "doc": 0}, "scalpel.typeinfer.utilities.FuncCallVisitor": {"qualname": 1, "fullname": 4, "doc": 6}, "scalpel.typeinfer.utilities.FuncCallVisitor.__init__": {"qualname": 2, "fullname": 5, "doc": 0}, "scalpel.typeinfer.utilities.FuncCallVisitor.clear": {"qualname": 2, "fullname": 5, "doc": 0}, "scalpel.typeinfer.utilities.FuncCallVisitor.name": {"qualname": 2, "fullname": 5, "doc": 0}, "scalpel.typeinfer.utilities.FuncCallVisitor.visit_Name": {"qualname": 2, "fullname": 5, "doc": 0}, "scalpel.typeinfer.utilities.FuncCallVisitor.visit_Attribute": {"qualname": 2, "fullname": 5, "doc": 0}, "scalpel.typeinfer.utilities.FuncCallVisitor.visit_Call": {"qualname": 2, "fullname": 5, "doc": 0}, "scalpel.typeinfer.utilities.get_built_in_types": {"qualname": 1, "fullname": 4, "doc": 9}, "scalpel.typeinfer.utilities.get_type": {"qualname": 1, "fullname": 4, "doc": 14}, "scalpel.typeinfer.utilities.check_consistent_list_types": {"qualname": 1, "fullname": 4, "doc": 6}, "scalpel.typeinfer.utilities.is_camel_case": {"qualname": 1, "fullname": 4, "doc": 17}, "scalpel.typeinfer.utilities.parse_module": {"qualname": 1, "fullname": 4, "doc": 22}, "scalpel.typeinfer.utilities.get_api_ref_id": {"qualname": 1, "fullname": 4, "doc": 0}, "scalpel.typeinfer.utilities.is_imported_fun": {"qualname": 1, "fullname": 4, "doc": 21}, "scalpel.typeinfer.utilities.rename_from_name": {"qualname": 1, "fullname": 4, "doc": 0}, "scalpel.typeinfer.utilities.is_valid_call_link": {"qualname": 1, "fullname": 4, "doc": 0}, "scalpel.typeinfer.utilities.generate_ast": {"qualname": 1, "fullname": 4, "doc": 4}, "scalpel.typeinfer.utilities.get_function_comment": {"qualname": 1, "fullname": 4, "doc": 16}, "scalpel.typeinfer.utilities.is_done": {"qualname": 1, "fullname": 4, "doc": 19}, "scalpel.typeinfer.utilities.find_class_by_attr": {"qualname": 1, "fullname": 4, "doc": 0}, "scalpel.typeinfer.utilities.get_attr_name": {"qualname": 1, "fullname": 4, "doc": 0}, "scalpel.typeinfer.utilities.resolve_name": {"qualname": 1, "fullname": 4, "doc": 5}, "scalpel.typeinfer.visitors": {"qualname": 0, "fullname": 3, "doc": 5}, "scalpel.typeinfer.visitors.FuncCallVisitor": {"qualname": 1, "fullname": 4, "doc": 6}, "scalpel.typeinfer.visitors.FuncCallVisitor.__init__": {"qualname": 2, "fullname": 5, "doc": 0}, "scalpel.typeinfer.visitors.FuncCallVisitor.clear": {"qualname": 2, "fullname": 5, "doc": 0}, "scalpel.typeinfer.visitors.FuncCallVisitor.name": {"qualname": 2, "fullname": 5, "doc": 0}, "scalpel.typeinfer.visitors.FuncCallVisitor.visit_Name": {"qualname": 2, "fullname": 5, "doc": 0}, "scalpel.typeinfer.visitors.FuncCallVisitor.visit_Attribute": {"qualname": 2, "fullname": 5, "doc": 0}, "scalpel.typeinfer.visitors.FuncCallVisitor.visit_Call": {"qualname": 2, "fullname": 5, "doc": 0}, "scalpel.typeinfer.visitors.TypeInferCallTransformer": {"qualname": 1, "fullname": 4, "doc": 6}, "scalpel.typeinfer.visitors.TypeInferCallTransformer.__init__": {"qualname": 2, "fullname": 5, "doc": 0}, "scalpel.typeinfer.visitors.TypeInferCallTransformer.visit_Attribute": {"qualname": 2, "fullname": 5, "doc": 0}, "scalpel.typeinfer.visitors.TypeInferCallTransformer.visit_Call": {"qualname": 2, "fullname": 5, "doc": 0}, "scalpel.typeinfer.visitors.get_args": {"qualname": 1, "fullname": 4, "doc": 8}, "scalpel.typeinfer.visitors.get_func_calls_type": {"qualname": 1, "fullname": 4, "doc": 0}, "scalpel.typeinfer.visitors.get_call_type": {"qualname": 1, "fullname": 4, "doc": 10}}, "length": 371, "save": true}, "index": {"qualname": {"root": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"scalpel.rewriter": {"tf": 1}, "scalpel.core.mnode.MNode.rewrite": {"tf": 1}}, "df": 2}}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "v": {"docs": {"scalpel.core.util.Unit.remove": {"tf": 1}, "scalpel.core.util.StmtIterator.remove": {"tf": 1}}, "df": 2, "e": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"scalpel.cfg.model.CFG.remove_comments": {"tf": 1}}, "df": 1}}}}}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"scalpel.core.mnode.MNode.retrieve_meta": {"tf": 1}}, "df": 1}}}}}}}}}}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"scalpel.typeinfer.analysers.ReturnStmtVisitor": {"tf": 1}, "scalpel.typeinfer.analysers.ReturnStmtVisitor.__init__": {"tf": 1}, "scalpel.typeinfer.analysers.ReturnStmtVisitor.import_assign_records": {"tf": 1}, "scalpel.typeinfer.analysers.ReturnStmtVisitor.import_class_assign_records": {"tf": 1}, "scalpel.typeinfer.analysers.ReturnStmtVisitor.import_assignments": {"tf": 1}, "scalpel.typeinfer.analysers.ReturnStmtVisitor.visit_FunctionDef": {"tf": 1}, "scalpel.typeinfer.analysers.ReturnStmtVisitor.visit_Yield": {"tf": 1}, "scalpel.typeinfer.analysers.ReturnStmtVisitor.infer_actual_return_value": {"tf": 1}, "scalpel.typeinfer.analysers.ReturnStmtVisitor.type_infer_CFG": {"tf": 1}, "scalpel.typeinfer.analysers.ReturnStmtVisitor.query_assign_records": {"tf": 1}, "scalpel.typeinfer.analysers.ReturnStmtVisitor.type_infer": {"tf": 1}, "scalpel.typeinfer.analysers.ReturnStmtVisitor.clear": {"tf": 1}, "scalpel.typeinfer.analysers.ReturnStmtVisitor.clear_all": {"tf": 1}}, "df": 13}}}}}}}}}}}, "_": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {"scalpel.typeinfer.classes.ScalpelFunction.return_type": {"tf": 1}}, "df": 1}}}}}}}}, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {"scalpel.core.util.Unit.replace": {"tf": 1}, "scalpel.core.util.StmtIterator.replace": {"tf": 1}}, "df": 2}}}}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {"scalpel.typeinfer.utilities.rename_from_name": {"tf": 1}}, "df": 1}}}}}}}}}}}}}, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {"scalpel.typeinfer.utilities.resolve_name": {"tf": 1}}, "df": 1}}}}}}}}}}, "d": {"docs": {"scalpel.SSA.ssa.SSA.RD": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"scalpel.SSA.alg.immediate_dominators": {"tf": 1}}, "df": 1}}}}}}}}}}}}}, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"scalpel.core.mnode.ImportRelation": {"tf": 1}, "scalpel.core.mnode.ImportRelation.__init__": {"tf": 1}}, "df": 2}}}, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "h": {"docs": {"scalpel.import_graph.import_graph.ImportGraph": {"tf": 1}, "scalpel.import_graph.import_graph.ImportGraph.__init__": {"tf": 1}, "scalpel.import_graph.import_graph.ImportGraph.build_dir_tree": {"tf": 1}, "scalpel.import_graph.import_graph.ImportGraph.get_leaf_nodes": {"tf": 1}, "scalpel.import_graph.import_graph.ImportGraph.go_to_that_node": {"tf": 1}, "scalpel.import_graph.import_graph.ImportGraph.parse_import": {"tf": 1}, "scalpel.import_graph.import_graph.ImportGraph.extract_class_from_source": {"tf": 1}, "scalpel.import_graph.import_graph.ImportGraph.leaf2root": {"tf": 1}, "scalpel.import_graph.import_graph.ImportGraph.find_child_by_name": {"tf": 1}, "scalpel.import_graph.import_graph.ImportGraph.find_node_by_name": {"tf": 1}}, "df": 10}}}}}, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {"scalpel.typeinfer.analysers.ImportTypeMap": {"tf": 1}, "scalpel.typeinfer.analysers.ImportTypeMap.__init__": {"tf": 1}, "scalpel.typeinfer.analysers.ImportTypeMap.map": {"tf": 1}, "scalpel.typeinfer.analysers.ImportTypeMap.get_imported_type": {"tf": 1}}, "df": 4}}}}}}}, "_": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "n": {"docs": {"scalpel.typeinfer.analysers.ReturnStmtVisitor.import_assignments": {"tf": 1}}, "df": 1, "_": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"scalpel.typeinfer.analysers.ReturnStmtVisitor.import_assign_records": {"tf": 1}}, "df": 1}}}}}}}}}}}}}, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"scalpel.typeinfer.analysers.ReturnStmtVisitor.import_class_assign_records": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}}}}}}}}, "s": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"scalpel.SSA.ssa.SSA.is_undefined": {"tf": 1}}, "df": 1}}}}}}}, "p": {"docs": {}, "df": 0, "y": {"3": {"8": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {"scalpel.cfg.builder.is_py38_or_higher": {"tf": 1}, "scalpel.core.func_call_visitor.is_py38_or_higher": {"tf": 1}}, "df": 2}}}}}}}}}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {"scalpel.cfg.model.Block.is_empty": {"tf": 1}}, "df": 1}}}}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"scalpel.typeinfer.classes.ScalpelVariable.is_callable": {"tf": 1}}, "df": 1}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {"scalpel.typeinfer.utilities.is_camel_case": {"tf": 1}}, "df": 1}}}}}}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {"scalpel.typeinfer.classes.ScalpelVariable.is_arg": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {"scalpel.typeinfer.utilities.is_imported_fun": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "k": {"docs": {"scalpel.typeinfer.utilities.is_valid_call_link": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}, "d": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"scalpel.typeinfer.utilities.is_done": {"tf": 1}}, "df": 1}}}}}, "n": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"scalpel.cfg.builder.invert": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"scalpel.core.util.Unit.insert_stmt_before": {"tf": 1}}, "df": 1}}}}}}, "s": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"scalpel.core.util.Unit.insert_stmts_before": {"tf": 1}}, "df": 1}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "t": {"docs": {"scalpel.core.util.Unit.insert_after": {"tf": 1}, "scalpel.core.util.StmtIterator.insert_after": {"tf": 1}}, "df": 2}}}, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"scalpel.core.util.StmtIterator.insert_before": {"tf": 1}}, "df": 1}}}}}}}}}}, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {"scalpel.typeinfer.analysers.ReturnStmtVisitor.infer_actual_return_value": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {"scalpel.typeinfer.typeinfer.TypeInference.infer_types": {"tf": 1}}, "df": 1}}}}}}}, "_": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {"scalpel.typeinfer.analysers.Heuristics.in_bin_op": {"tf": 1}}, "df": 1}}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"scalpel.typeinfer.classes.ScalpelVariable.in_conditional": {"tf": 1}}, "df": 1}}}}}}, "e": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "u": {"docs": {"scalpel.typeinfer.classes.ScalpelVariable.in_equality": {"tf": 1}}, "df": 1}}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"scalpel.typeinfer.classes.ScalpelClass.inherits": {"tf": 1}}, "df": 1}}}}}}, "d": {"docs": {"scalpel.cfg.model.Block.id": {"tf": 1}}, "df": 1}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"scalpel.core.util.iter_fields": {"tf": 1}}, "df": 1}}}}}, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {"scalpel.core.util.iter_child_nodes": {"tf": 1}}, "df": 1}}}}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"scalpel.core.util.iter_stmt_children": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}, "d": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {"scalpel.SSA.alg.dominance_frontiers": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"scalpel.SSA.alg.main": {"tf": 1}}, "df": 1}}, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "k": {"docs": {"scalpel.core.mnode.MNode.make_unit_walker": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "p": {"docs": {"scalpel.typeinfer.analysers.ImportTypeMap.map": {"tf": 1}, "scalpel.typeinfer.analysers.ClassDefinitionMap.map": {"tf": 1}, "scalpel.typeinfer.analysers.FunctionDefinitionMap.map": {"tf": 1}, "scalpel.typeinfer.analysers.VariableAssignmentMap.map": {"tf": 1}, "scalpel.typeinfer.analysers.BinaryOperationMap.map": {"tf": 1}}, "df": 5}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {"scalpel.cfg.builder.merge_exitcases": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"scalpel.core.mnode.MNode": {"tf": 1}, "scalpel.core.mnode.MNode.__init__": {"tf": 1}, "scalpel.core.mnode.MNode.rewrite": {"tf": 1}, "scalpel.core.mnode.MNode.parse_vars": {"tf": 1}, "scalpel.core.mnode.MNode.gen_import_relations": {"tf": 1}, "scalpel.core.mnode.MNode.parse_func_calls": {"tf": 1}, "scalpel.core.mnode.MNode.gen_ast": {"tf": 1}, "scalpel.core.mnode.MNode.parse_func_defs": {"tf": 1}, "scalpel.core.mnode.MNode.parse_import_stmts": {"tf": 1}, "scalpel.core.mnode.MNode.retrieve_meta": {"tf": 1}, "scalpel.core.mnode.MNode.gen_cfg": {"tf": 1}, "scalpel.core.mnode.MNode.make_unit_walker": {"tf": 1}}, "df": 12}}}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "v": {"docs": {"scalpel.SSA.const.parse_val": {"tf": 1}, "scalpel.SSA.ssa.parse_val": {"tf": 1}}, "df": 2, "a": {"docs": {}, "df": 0, "r": {"docs": {"scalpel.core.mnode.MNode.parse_vars": {"tf": 1}}, "df": 1}}}, "f": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"scalpel.core.mnode.MNode.parse_func_calls": {"tf": 1}}, "df": 1}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "f": {"docs": {"scalpel.core.mnode.MNode.parse_func_defs": {"tf": 1}}, "df": 1}}}}}}}}, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"scalpel.import_graph.import_graph.ImportGraph.parse_import": {"tf": 1}}, "df": 1, "_": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "t": {"docs": {"scalpel.core.mnode.MNode.parse_import_stmts": {"tf": 1}}, "df": 1}}}}}}}}}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {"scalpel.typeinfer.utilities.parse_module": {"tf": 1}}, "df": 1}}}}}}}}, "a": {"docs": {}, "df": 0, "m": {"2": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {"scalpel.core.func_call_visitor.CallTransformer.param2str": {"tf": 1}}, "df": 1}}}}, "docs": {}, "df": 0}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"scalpel.SSA.const.SSA.print_block": {"tf": 1}, "scalpel.SSA.ssa.SSA.print_block": {"tf": 1}}, "df": 2}}}}}, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {"scalpel.typeinfer.classes.TypeWarning.print_warning": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {"scalpel.typeinfer.typeinfer.TypeInference.print_types": {"tf": 1}}, "df": 1}}}}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"scalpel.cfg.model.Block.predecessors": {"tf": 1}}, "df": 1}}}}}}}}}, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {"scalpel.typeinfer.classes.ProcessedFile": {"tf": 1}, "scalpel.typeinfer.classes.ProcessedFile.__init__": {"tf": 1}}, "df": 2}}}}}, "_": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"scalpel.typeinfer.typeinfer.process_code_with_heuristics": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {"scalpel.typeinfer.typeinfer.TypeInference.process_file": {"tf": 1}}, "df": 1}}}}}}}}}}}, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "a": {"docs": {"scalpel.SSA.const.SSA": {"tf": 1}, "scalpel.SSA.const.SSA.__init__": {"tf": 1}, "scalpel.SSA.const.SSA.get_attribute_stmts": {"tf": 1}, "scalpel.SSA.const.SSA.get_identifiers": {"tf": 1}, "scalpel.SSA.const.SSA.compute_SSA": {"tf": 1}, "scalpel.SSA.const.SSA.get_stmt_idents_ctx": {"tf": 1}, "scalpel.SSA.const.SSA.to_json": {"tf": 1}, "scalpel.SSA.const.SSA.print_block": {"tf": 1}, "scalpel.SSA.const.SSA.compute_idom": {"tf": 1}, "scalpel.SSA.const.SSA.compute_DF": {"tf": 1}, "scalpel.SSA.ssa.SSA": {"tf": 1}, "scalpel.SSA.ssa.SSA.__init__": {"tf": 1}, "scalpel.SSA.ssa.SSA.get_global_live_vars": {"tf": 1}, "scalpel.SSA.ssa.SSA.flatten_tuple": {"tf": 1}, "scalpel.SSA.ssa.SSA.get_attribute_stmts": {"tf": 1}, "scalpel.SSA.ssa.SSA.get_identifiers": {"tf": 1}, "scalpel.SSA.ssa.SSA.get_stmt_idents_ctx": {"tf": 1}, "scalpel.SSA.ssa.SSA.compute_undefined_names": {"tf": 1}, "scalpel.SSA.ssa.SSA.backward_query_new": {"tf": 1}, "scalpel.SSA.ssa.SSA.hit_scope": {"tf": 1}, "scalpel.SSA.ssa.SSA.is_undefined": {"tf": 1}, "scalpel.SSA.ssa.SSA.to_json": {"tf": 1}, "scalpel.SSA.ssa.SSA.print_block": {"tf": 1}, "scalpel.SSA.ssa.SSA.compute_idom": {"tf": 1}, "scalpel.SSA.ssa.SSA.RD": {"tf": 1}, "scalpel.SSA.ssa.SSA.compute_dom_old": {"tf": 1}}, "df": 26, "_": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {"scalpel.cfg.model.Block.ssa_form": {"tf": 1}}, "df": 1}}}}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"scalpel.cfg.model.Block.statements": {"tf": 1}}, "df": 1}}}}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"scalpel.cfg.model.Block.strip_comment": {"tf": 1}}, "df": 1}}}}}}}, "m": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"scalpel.core.util.StmtIterator": {"tf": 1}, "scalpel.core.util.StmtIterator.__init__": {"tf": 1}, "scalpel.core.util.StmtIterator.insert_before": {"tf": 1}, "scalpel.core.util.StmtIterator.insert_after": {"tf": 1}, "scalpel.core.util.StmtIterator.remove": {"tf": 1}, "scalpel.core.util.StmtIterator.replace": {"tf": 1}}, "df": 6}}}}}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {"scalpel.cfg.model.Link.source": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"scalpel.core.source_visitor.SourceVisitor": {"tf": 1}, "scalpel.core.source_visitor.SourceVisitor.__init__": {"tf": 1}, "scalpel.core.source_visitor.SourceVisitor.visit_FunctionDef": {"tf": 1}, "scalpel.core.source_visitor.SourceVisitor.visit_ClassDef": {"tf": 1}}, "df": 4}}}}}}}, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"scalpel.typeinfer.analysers.SourceSplitVisitor": {"tf": 1}, "scalpel.typeinfer.analysers.SourceSplitVisitor.__init__": {"tf": 1}, "scalpel.typeinfer.analysers.SourceSplitVisitor.visit_Assign": {"tf": 1}, "scalpel.typeinfer.analysers.SourceSplitVisitor.visit_FunctionDef": {"tf": 1}}, "df": 4}}}}}}}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {"scalpel.core.util.Unit.search_for_pos": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "v": {"docs": {"scalpel.core.vars_visitor.VarsVisitor.slicev": {"tf": 1}}, "df": 1}}}}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {"scalpel.typeinfer.classes.ScalpelVariable": {"tf": 1}, "scalpel.typeinfer.classes.ScalpelVariable.__init__": {"tf": 1}, "scalpel.typeinfer.classes.ScalpelVariable.type": {"tf": 1}, "scalpel.typeinfer.classes.ScalpelVariable.in_conditional": {"tf": 1}, "scalpel.typeinfer.classes.ScalpelVariable.in_equality": {"tf": 1}, "scalpel.typeinfer.classes.ScalpelVariable.is_callable": {"tf": 1}, "scalpel.typeinfer.classes.ScalpelVariable.called_methods": {"tf": 1}, "scalpel.typeinfer.classes.ScalpelVariable.binary_operation": {"tf": 1}, "scalpel.typeinfer.classes.ScalpelVariable.is_arg": {"tf": 1}}, "df": 9}}}}, "f": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"scalpel.typeinfer.classes.ScalpelFunction": {"tf": 1}, "scalpel.typeinfer.classes.ScalpelFunction.__init__": {"tf": 1}, "scalpel.typeinfer.classes.ScalpelFunction.return_type": {"tf": 1}}, "df": 3}}}}}, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"scalpel.typeinfer.classes.ScalpelClass": {"tf": 1}, "scalpel.typeinfer.classes.ScalpelClass.__init__": {"tf": 1}, "scalpel.typeinfer.classes.ScalpelClass.inherits": {"tf": 1}}, "df": 3}}}}}}}}}}}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {"scalpel.typeinfer.classes.BinaryOperation.shared_type": {"tf": 1}}, "df": 1}}}}}}}}}}, "_": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "_": {"docs": {"scalpel.SSA.const.SSA.__init__": {"tf": 1}, "scalpel.SSA.ssa.SSA.__init__": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.__init__": {"tf": 1}, "scalpel.cfg.model.Block.__init__": {"tf": 1}, "scalpel.cfg.model.Link.__init__": {"tf": 1}, "scalpel.cfg.model.CFG.__init__": {"tf": 1}, "scalpel.core.class_visitor.ClassVisitor.__init__": {"tf": 1}, "scalpel.core.fun_def_visitor.FunDefVisitor.__init__": {"tf": 1}, "scalpel.core.func_call_visitor.CallTransformer.__init__": {"tf": 1}, "scalpel.core.func_call_visitor.FuncCallVisitor.__init__": {"tf": 1}, "scalpel.core.kw_visitor.KWVisitor.__init__": {"tf": 1}, "scalpel.core.mnode.ImportRelation.__init__": {"tf": 1}, "scalpel.core.mnode.MNode.__init__": {"tf": 1}, "scalpel.core.source_visitor.SourceVisitor.__init__": {"tf": 1}, "scalpel.core.util.Unit.__init__": {"tf": 1}, "scalpel.core.util.StmtIterator.__init__": {"tf": 1}, "scalpel.core.vars_visitor.VarsVisitor.__init__": {"tf": 1}, "scalpel.import_graph.import_graph.Tree.__init__": {"tf": 1}, "scalpel.import_graph.import_graph.ImportGraph.__init__": {"tf": 1}, "scalpel.typeinfer.analysers.BinaryOperatorMap.__init__": {"tf": 1}, "scalpel.typeinfer.analysers.ImportTypeMap.__init__": {"tf": 1}, "scalpel.typeinfer.analysers.ClassDefinitionMap.__init__": {"tf": 1}, "scalpel.typeinfer.analysers.FunctionDefinitionMap.__init__": {"tf": 1}, "scalpel.typeinfer.analysers.VariableAssignmentMap.__init__": {"tf": 1}, "scalpel.typeinfer.analysers.BinaryOperationMap.__init__": {"tf": 1}, "scalpel.typeinfer.analysers.HeuristicParser.__init__": {"tf": 1}, "scalpel.typeinfer.analysers.SourceSplitVisitor.__init__": {"tf": 1}, "scalpel.typeinfer.analysers.ClassSplitVisitor.__init__": {"tf": 1}, "scalpel.typeinfer.analysers.ReturnStmtVisitor.__init__": {"tf": 1}, "scalpel.typeinfer.analysers.Heuristics.__init__": {"tf": 1}, "scalpel.typeinfer.classes.TypeWarning.__init__": {"tf": 1}, "scalpel.typeinfer.classes.ScalpelVariable.__init__": {"tf": 1}, "scalpel.typeinfer.classes.ScalpelFunction.__init__": {"tf": 1}, "scalpel.typeinfer.classes.ScalpelClass.__init__": {"tf": 1}, "scalpel.typeinfer.classes.BinaryOperation.__init__": {"tf": 1}, "scalpel.typeinfer.classes.ProcessedFile.__init__": {"tf": 1}, "scalpel.typeinfer.typeinfer.TypeInference.__init__": {"tf": 1}, "scalpel.typeinfer.utilities.TypeInferCallTransformer.__init__": {"tf": 1}, "scalpel.typeinfer.utilities.FuncCallVisitor.__init__": {"tf": 1}, "scalpel.typeinfer.visitors.FuncCallVisitor.__init__": {"tf": 1}, "scalpel.typeinfer.visitors.TypeInferCallTransformer.__init__": {"tf": 1}}, "df": 41}}}}}}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "t": {"docs": {"scalpel.SSA.const.SSA.get_attribute_stmts": {"tf": 1}, "scalpel.SSA.ssa.SSA.get_attribute_stmts": {"tf": 1}}, "df": 2}}}}}}}}}}, "_": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {"scalpel.core.mnode.get_attr_name": {"tf": 1}, "scalpel.core.vars_visitor.VarsVisitor.get_attr_name": {"tf": 1}, "scalpel.typeinfer.utilities.get_attr_name": {"tf": 1}}, "df": 3}}}}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"scalpel.cfg.model.CFG.get_all_blocks": {"tf": 1}}, "df": 1}}}}}}}}, "r": {"docs": {}, "df": 0, "g": {"docs": {"scalpel.core.func_call_visitor.get_args": {"tf": 1}, "scalpel.typeinfer.visitors.get_args": {"tf": 1}}, "df": 2}}, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {"scalpel.typeinfer.utilities.get_api_ref_id": {"tf": 1}}, "df": 1}}}}}}}}}}, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {"scalpel.SSA.const.SSA.get_identifiers": {"tf": 1}, "scalpel.SSA.ssa.SSA.get_identifiers": {"tf": 1}}, "df": 2}}}}}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {"scalpel.typeinfer.analysers.ImportTypeMap.get_imported_type": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "x": {"docs": {"scalpel.SSA.const.SSA.get_stmt_idents_ctx": {"tf": 1}, "scalpel.SSA.ssa.SSA.get_stmt_idents_ctx": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {"scalpel.cfg.model.Block.get_source": {"tf": 1}}, "df": 1}}}}}, "g": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"scalpel.SSA.ssa.SSA.get_global_live_vars": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"scalpel.cfg.model.Block.get_calls": {"tf": 1}}, "df": 1, "l": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {"scalpel.core.func_call_visitor.get_call_type": {"tf": 1}, "scalpel.typeinfer.visitors.get_call_type": {"tf": 1}}, "df": 2}}}}}}}}, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {"scalpel.cfg.model.Link.get_exitcase": {"tf": 1}}, "df": 1}}}}}}}, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"scalpel.core.class_visitor.get_keywords": {"tf": 1}, "scalpel.core.source_visitor.get_keywords": {"tf": 1}}, "df": 2}}}}}}}, "f": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"scalpel.core.func_call_visitor.get_func_calls": {"tf": 1}}, "df": 1, "l": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {"scalpel.typeinfer.utilities.get_func_calls_type": {"tf": 1}, "scalpel.typeinfer.visitors.get_func_calls_type": {"tf": 1}}, "df": 2}}}}}}}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"scalpel.typeinfer.utilities.get_function_comment": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"scalpel.core.util.get_path_by_extension": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"scalpel.core.vars_visitor.get_vars": {"tf": 1}}, "df": 1}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {"scalpel.import_graph.import_graph.ImportGraph.get_leaf_nodes": {"tf": 1}}, "df": 1}}}}}}}}, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "v": {"docs": {"scalpel.typeinfer.analysers.Heuristics.get_bin_op_involved": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {"scalpel.typeinfer.utilities.get_built_in_types": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {"scalpel.typeinfer.typeinfer.TypeInference.get_types": {"tf": 1}, "scalpel.typeinfer.utilities.get_type": {"tf": 1}}, "df": 2}}}}}, "n": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"scalpel.core.mnode.MNode.gen_import_relations": {"tf": 1}}, "df": 1}}}}}}}}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"scalpel.core.mnode.MNode.gen_ast": {"tf": 1}}, "df": 1}}}, "c": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "g": {"docs": {"scalpel.core.mnode.MNode.gen_cfg": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"scalpel.typeinfer.utilities.generate_ast": {"tf": 1}}, "df": 1}}}}}}}}}}}, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"scalpel.cfg.builder.CFGBuilder.goto_new_block": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "_": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {"scalpel.import_graph.import_graph.ImportGraph.go_to_that_node": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "a": {"docs": {"scalpel.SSA.const.SSA.compute_SSA": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"scalpel.SSA.const.SSA.compute_idom": {"tf": 1}, "scalpel.SSA.ssa.SSA.compute_idom": {"tf": 1}}, "df": 2}}}}, "d": {"docs": {}, "df": 0, "f": {"docs": {"scalpel.SSA.const.SSA.compute_DF": {"tf": 1}}, "df": 1}, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"scalpel.SSA.ssa.SSA.compute_dom_old": {"tf": 1}}, "df": 1}}}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {"scalpel.SSA.ssa.SSA.compute_undefined_names": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"scalpel.core.vars_visitor.VarsVisitor.comprehension": {"tf": 1}}, "df": 1}}}}}}}}}, "f": {"docs": {}, "df": 0, "g": {"docs": {"scalpel.cfg.model.CFG": {"tf": 1}, "scalpel.cfg.model.CFG.__init__": {"tf": 1}, "scalpel.cfg.model.CFG.remove_comments": {"tf": 1}, "scalpel.cfg.model.CFG.get_all_blocks": {"tf": 1}, "scalpel.cfg.model.CFG.build_visual": {"tf": 1}}, "df": 5, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"scalpel.cfg.builder.CFGBuilder": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.__init__": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.build": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.build_from_src": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.build_from_file": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.new_block": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.add_statement": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.add_exit": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.new_loopguard": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.new_functionCFG": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.new_ClassCFG": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.clean_cfg": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.goto_new_block": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.visit_Expr": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.visit_Call": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.visit_Assign": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.visit_AnnAssign": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.visit_AugAssign": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.visit_Global": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.visit_Nonlocal": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.visit_Pass": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.visit_Delete": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.visit_Raise": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.visit_Assert": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.visit_Try": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.visit_If": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.visit_While": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.visit_For": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.visit_AsyncFor": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.visit_Break": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.visit_Continue": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.visit_Import": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.visit_ImportFrom": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.visit_FunctionDef": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.visit_AsyncFunctionDef": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.visit_ClassDef": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.visit_Await": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.visit_Return": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.visit_Yield": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.visit_With": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.visit_AsyncWith": {"tf": 1}}, "df": 41}}}}}}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "g": {"docs": {"scalpel.cfg.builder.CFGBuilder.clean_cfg": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {"scalpel.core.func_call_visitor.FuncCallVisitor.clear": {"tf": 1}, "scalpel.typeinfer.analysers.ReturnStmtVisitor.clear": {"tf": 1}, "scalpel.typeinfer.utilities.FuncCallVisitor.clear": {"tf": 1}, "scalpel.typeinfer.visitors.FuncCallVisitor.clear": {"tf": 1}}, "df": 4, "_": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"scalpel.typeinfer.analysers.ReturnStmtVisitor.clear_all": {"tf": 1}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"scalpel.core.class_visitor.ClassVisitor": {"tf": 1}, "scalpel.core.class_visitor.ClassVisitor.__init__": {"tf": 1}, "scalpel.core.class_visitor.ClassVisitor.visit_FunctionDef": {"tf": 1}}, "df": 3}}}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {"scalpel.typeinfer.analysers.ClassDefinitionMap": {"tf": 1}, "scalpel.typeinfer.analysers.ClassDefinitionMap.__init__": {"tf": 1}, "scalpel.typeinfer.analysers.ClassDefinitionMap.map": {"tf": 1}}, "df": 3}}}}}}}}}}}}}, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"scalpel.typeinfer.analysers.ClassSplitVisitor": {"tf": 1}, "scalpel.typeinfer.analysers.ClassSplitVisitor.__init__": {"tf": 1}, "scalpel.typeinfer.analysers.ClassSplitVisitor.visit_FunctionDef": {"tf": 1}, "scalpel.typeinfer.analysers.ClassSplitVisitor.visit_ClassDef": {"tf": 1}}, "df": 4}}}}}}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {"scalpel.core.func_call_visitor.CallTransformer": {"tf": 1}, "scalpel.core.func_call_visitor.CallTransformer.__init__": {"tf": 1}, "scalpel.core.func_call_visitor.CallTransformer.visit_Attribute": {"tf": 1}, "scalpel.core.func_call_visitor.CallTransformer.param2str": {"tf": 1}, "scalpel.core.func_call_visitor.CallTransformer.visit_Call": {"tf": 1}}, "df": 5}}}}}}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {"scalpel.typeinfer.classes.ScalpelVariable.called_methods": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {"scalpel.typeinfer.analysers.BinaryOperatorMap.chain_types": {"tf": 1}}, "df": 1}}}}}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {"scalpel.typeinfer.utilities.check_consistent_list_types": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}}}}}}}}, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "j": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"scalpel.SSA.const.SSA.to_json": {"tf": 1}, "scalpel.SSA.ssa.SSA.to_json": {"tf": 1}}, "df": 2}}}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"scalpel.cfg.model.Link.target": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {"scalpel.import_graph.import_graph.Tree": {"tf": 1}, "scalpel.import_graph.import_graph.Tree.__init__": {"tf": 1}}, "df": 2}}}, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"scalpel.typeinfer.classes.ScalpelVariable.type": {"tf": 1}}, "df": 1, "_": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {"scalpel.typeinfer.analysers.ReturnStmtVisitor.type_infer": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "g": {"docs": {"scalpel.typeinfer.analysers.ReturnStmtVisitor.type_infer_CFG": {"tf": 1}}, "df": 1}}}}}}}}}}, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {"scalpel.typeinfer.classes.TypeWarning": {"tf": 1}, "scalpel.typeinfer.classes.TypeWarning.__init__": {"tf": 1}, "scalpel.typeinfer.classes.TypeWarning.print_warning": {"tf": 1}}, "df": 3}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"scalpel.typeinfer.typeinfer.TypeInference": {"tf": 1}, "scalpel.typeinfer.typeinfer.TypeInference.__init__": {"tf": 1}, "scalpel.typeinfer.typeinfer.TypeInference.infer_types": {"tf": 1}, "scalpel.typeinfer.typeinfer.TypeInference.get_types": {"tf": 1}, "scalpel.typeinfer.typeinfer.TypeInference.process_file": {"tf": 1}, "scalpel.typeinfer.typeinfer.TypeInference.print_types": {"tf": 1}}, "df": 6, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {"scalpel.typeinfer.utilities.TypeInferCallTransformer": {"tf": 1}, "scalpel.typeinfer.utilities.TypeInferCallTransformer.__init__": {"tf": 1}, "scalpel.typeinfer.utilities.TypeInferCallTransformer.visit_Attribute": {"tf": 1}, "scalpel.typeinfer.utilities.TypeInferCallTransformer.visit_Call": {"tf": 1}, "scalpel.typeinfer.visitors.TypeInferCallTransformer": {"tf": 1}, "scalpel.typeinfer.visitors.TypeInferCallTransformer.__init__": {"tf": 1}, "scalpel.typeinfer.visitors.TypeInferCallTransformer.visit_Attribute": {"tf": 1}, "scalpel.typeinfer.visitors.TypeInferCallTransformer.visit_Call": {"tf": 1}}, "df": 8}}}}}}}}}}}}}}}}}}}}}}, "f": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {"scalpel.SSA.ssa.SSA.flatten_tuple": {"tf": 1}}, "df": 1}}}}}}}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"scalpel.cfg.model.Block.func_calls": {"tf": 1}}, "df": 1}}}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"scalpel.core.func_call_visitor.FuncCallVisitor": {"tf": 1}, "scalpel.core.func_call_visitor.FuncCallVisitor.__init__": {"tf": 1}, "scalpel.core.func_call_visitor.FuncCallVisitor.clear": {"tf": 1}, "scalpel.core.func_call_visitor.FuncCallVisitor.name": {"tf": 1}, "scalpel.core.func_call_visitor.FuncCallVisitor.visit_Name": {"tf": 1}, "scalpel.core.func_call_visitor.FuncCallVisitor.visit_Attribute": {"tf": 1}, "scalpel.core.func_call_visitor.FuncCallVisitor.visit_Call": {"tf": 1}, "scalpel.typeinfer.utilities.FuncCallVisitor": {"tf": 1}, "scalpel.typeinfer.utilities.FuncCallVisitor.__init__": {"tf": 1}, "scalpel.typeinfer.utilities.FuncCallVisitor.clear": {"tf": 1}, "scalpel.typeinfer.utilities.FuncCallVisitor.name": {"tf": 1}, "scalpel.typeinfer.utilities.FuncCallVisitor.visit_Name": {"tf": 1}, "scalpel.typeinfer.utilities.FuncCallVisitor.visit_Attribute": {"tf": 1}, "scalpel.typeinfer.utilities.FuncCallVisitor.visit_Call": {"tf": 1}, "scalpel.typeinfer.visitors.FuncCallVisitor": {"tf": 1}, "scalpel.typeinfer.visitors.FuncCallVisitor.__init__": {"tf": 1}, "scalpel.typeinfer.visitors.FuncCallVisitor.clear": {"tf": 1}, "scalpel.typeinfer.visitors.FuncCallVisitor.name": {"tf": 1}, "scalpel.typeinfer.visitors.FuncCallVisitor.visit_Name": {"tf": 1}, "scalpel.typeinfer.visitors.FuncCallVisitor.visit_Attribute": {"tf": 1}, "scalpel.typeinfer.visitors.FuncCallVisitor.visit_Call": {"tf": 1}}, "df": 21}}}}}}}}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {"scalpel.typeinfer.analysers.FunctionDefinitionMap": {"tf": 1}, "scalpel.typeinfer.analysers.FunctionDefinitionMap.__init__": {"tf": 1}, "scalpel.typeinfer.analysers.FunctionDefinitionMap.map": {"tf": 1}}, "df": 3}}}}}}}}}}}}}}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"scalpel.core.fun_def_visitor.FunDefVisitor": {"tf": 1}, "scalpel.core.fun_def_visitor.FunDefVisitor.__init__": {"tf": 1}, "scalpel.core.fun_def_visitor.FunDefVisitor.visit": {"tf": 1}, "scalpel.core.fun_def_visitor.FunDefVisitor.visit_Args": {"tf": 1}}, "df": 4}}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {"scalpel.core.util.find_local_modules": {"tf": 1}}, "df": 1}}}}}}}}}}}, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {"scalpel.import_graph.import_graph.ImportGraph.find_child_by_name": {"tf": 1}}, "df": 1}}}}}}}}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {"scalpel.typeinfer.utilities.find_class_by_attr": {"tf": 1}}, "df": 1}}}}}}}}}}}}}, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {"scalpel.import_graph.import_graph.ImportGraph.find_node_by_name": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "w": {"docs": {"scalpel.SSA.ssa.SSA.backward_query_new": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"scalpel.cfg.builder.CFGBuilder.build": {"tf": 1}}, "df": 1, "_": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {"scalpel.cfg.builder.CFGBuilder.build_from_src": {"tf": 1}}, "df": 1}}}, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {"scalpel.cfg.builder.CFGBuilder.build_from_file": {"tf": 1}}, "df": 1}}}}}}}}, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "u": {"docs": {"scalpel.cfg.model.CFG.build_visual": {"tf": 1}}, "df": 1}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"scalpel.import_graph.import_graph.ImportGraph.build_dir_tree": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"scalpel.cfg.model.Block": {"tf": 1}, "scalpel.cfg.model.Block.__init__": {"tf": 1}, "scalpel.cfg.model.Block.id": {"tf": 1}, "scalpel.cfg.model.Block.statements": {"tf": 1}, "scalpel.cfg.model.Block.func_calls": {"tf": 1}, "scalpel.cfg.model.Block.predecessors": {"tf": 1}, "scalpel.cfg.model.Block.exits": {"tf": 1}, "scalpel.cfg.model.Block.at": {"tf": 1}, "scalpel.cfg.model.Block.is_empty": {"tf": 1}, "scalpel.cfg.model.Block.strip_comment": {"tf": 1}, "scalpel.cfg.model.Block.get_source": {"tf": 1}, "scalpel.cfg.model.Block.get_calls": {"tf": 1}, "scalpel.cfg.model.Block.ssa_form": {"tf": 1}}, "df": 13}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"scalpel.typeinfer.classes.BinaryOperation": {"tf": 1}, "scalpel.typeinfer.classes.BinaryOperation.__init__": {"tf": 1}, "scalpel.typeinfer.classes.BinaryOperation.shared_type": {"tf": 1}}, "df": 3, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {"scalpel.typeinfer.analysers.BinaryOperatorMap": {"tf": 1}, "scalpel.typeinfer.analysers.BinaryOperatorMap.__init__": {"tf": 1}, "scalpel.typeinfer.analysers.BinaryOperatorMap.append": {"tf": 1}, "scalpel.typeinfer.analysers.BinaryOperatorMap.chain_types": {"tf": 1}}, "df": 4}}}}}, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {"scalpel.typeinfer.analysers.BinaryOperationMap": {"tf": 1}, "scalpel.typeinfer.analysers.BinaryOperationMap.__init__": {"tf": 1}, "scalpel.typeinfer.analysers.BinaryOperationMap.map": {"tf": 1}}, "df": 3}}}}}}}}}}}}, "_": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"scalpel.typeinfer.classes.ScalpelVariable.binary_operation": {"tf": 1}}, "df": 1}}}}}}}}}}}, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {"scalpel.SSA.ssa.SSA.hit_scope": {"tf": 1}}, "df": 1}}}}}}}, "e": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"scalpel.typeinfer.analysers.Heuristics": {"tf": 1}, "scalpel.typeinfer.analysers.Heuristics.__init__": {"tf": 1}, "scalpel.typeinfer.analysers.Heuristics.heuristic_two": {"tf": 1}, "scalpel.typeinfer.analysers.Heuristics.heuristic_five": {"tf": 1}, "scalpel.typeinfer.analysers.Heuristics.heuristic_five_return": {"tf": 1}, "scalpel.typeinfer.analysers.Heuristics.heuristic_six": {"tf": 1}, "scalpel.typeinfer.analysers.Heuristics.heuristic_seven": {"tf": 1}, "scalpel.typeinfer.analysers.Heuristics.heuristic_eight": {"tf": 1}, "scalpel.typeinfer.analysers.Heuristics.heuristic_nine": {"tf": 1}, "scalpel.typeinfer.analysers.Heuristics.heuristic_eleven": {"tf": 1}, "scalpel.typeinfer.analysers.Heuristics.heuristic_twelve": {"tf": 1}, "scalpel.typeinfer.analysers.Heuristics.get_bin_op_involved": {"tf": 1}, "scalpel.typeinfer.analysers.Heuristics.in_bin_op": {"tf": 1}}, "df": 13, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"scalpel.typeinfer.analysers.HeuristicParser": {"tf": 1}, "scalpel.typeinfer.analysers.HeuristicParser.__init__": {"tf": 1}, "scalpel.typeinfer.analysers.HeuristicParser.visit_FunctionDef": {"tf": 1}, "scalpel.typeinfer.analysers.HeuristicParser.visit_Import": {"tf": 1}, "scalpel.typeinfer.analysers.HeuristicParser.visit_ImportFrom": {"tf": 1}, "scalpel.typeinfer.analysers.HeuristicParser.visit_While": {"tf": 1}, "scalpel.typeinfer.analysers.HeuristicParser.visit_Compare": {"tf": 1}, "scalpel.typeinfer.analysers.HeuristicParser.visit_BinOp": {"tf": 1}, "scalpel.typeinfer.analysers.HeuristicParser.visit_IfExp": {"tf": 1}, "scalpel.typeinfer.analysers.HeuristicParser.visit_If": {"tf": 1}}, "df": 10}}}}, "_": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "o": {"docs": {"scalpel.typeinfer.analysers.Heuristics.heuristic_two": {"tf": 1}}, "df": 1}, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "v": {"docs": {"scalpel.typeinfer.analysers.Heuristics.heuristic_twelve": {"tf": 1}}, "df": 1}}}}}, "f": {"docs": {"scalpel.typeinfer.analysers.Heuristics.heuristic_five": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {"scalpel.typeinfer.analysers.Heuristics.heuristic_five_return": {"tf": 1}}, "df": 1}}}}}}}}}}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {"scalpel.typeinfer.analysers.Heuristics.heuristic_six": {"tf": 1}}, "df": 1}}, "e": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"scalpel.typeinfer.analysers.Heuristics.heuristic_seven": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {"scalpel.typeinfer.analysers.Heuristics.heuristic_eight": {"tf": 1}}, "df": 1}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"scalpel.typeinfer.analysers.Heuristics.heuristic_eleven": {"tf": 1}}, "df": 1}}}}}}, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"scalpel.typeinfer.analysers.Heuristics.heuristic_nine": {"tf": 1}}, "df": 1}}}}}}}}}}}}}, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"scalpel.cfg.builder.CFGBuilder.new_block": {"tf": 1}}, "df": 1}}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"scalpel.cfg.builder.CFGBuilder.new_loopguard": {"tf": 1}}, "df": 1}}}}}}}}}, "f": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "g": {"docs": {"scalpel.cfg.builder.CFGBuilder.new_functionCFG": {"tf": 1}}, "df": 1}}}}}}}}}}}, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "g": {"docs": {"scalpel.cfg.builder.CFGBuilder.new_ClassCFG": {"tf": 1}}, "df": 1}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"scalpel.core.func_call_visitor.FuncCallVisitor.name": {"tf": 1}, "scalpel.typeinfer.utilities.FuncCallVisitor.name": {"tf": 1}, "scalpel.typeinfer.visitors.FuncCallVisitor.name": {"tf": 1}}, "df": 3}}}}, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"scalpel.cfg.builder.CFGBuilder.add_statement": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"scalpel.cfg.builder.CFGBuilder.add_exit": {"tf": 1}}, "df": 1}}}}}}}, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"scalpel.typeinfer.analysers.BinaryOperatorMap.append": {"tf": 1}}, "df": 1}}}}}}, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"scalpel.core.fun_def_visitor.FunDefVisitor.visit": {"tf": 1}}, "df": 1, "_": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "r": {"docs": {"scalpel.cfg.builder.CFGBuilder.visit_Expr": {"tf": 1}}, "df": 1}}}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"scalpel.cfg.builder.CFGBuilder.visit_Call": {"tf": 1}, "scalpel.core.func_call_visitor.CallTransformer.visit_Call": {"tf": 1}, "scalpel.core.func_call_visitor.FuncCallVisitor.visit_Call": {"tf": 1}, "scalpel.core.vars_visitor.VarsVisitor.visit_Call": {"tf": 1}, "scalpel.typeinfer.utilities.TypeInferCallTransformer.visit_Call": {"tf": 1}, "scalpel.typeinfer.utilities.FuncCallVisitor.visit_Call": {"tf": 1}, "scalpel.typeinfer.visitors.FuncCallVisitor.visit_Call": {"tf": 1}, "scalpel.typeinfer.visitors.TypeInferCallTransformer.visit_Call": {"tf": 1}}, "df": 8}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "u": {"docs": {"scalpel.cfg.builder.CFGBuilder.visit_Continue": {"tf": 1}}, "df": 1}}}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"scalpel.core.vars_visitor.VarsVisitor.visit_Compare": {"tf": 1}, "scalpel.typeinfer.analysers.HeuristicParser.visit_Compare": {"tf": 1}}, "df": 2}}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "f": {"docs": {"scalpel.cfg.builder.CFGBuilder.visit_ClassDef": {"tf": 1}, "scalpel.core.source_visitor.SourceVisitor.visit_ClassDef": {"tf": 1}, "scalpel.typeinfer.analysers.ClassSplitVisitor.visit_ClassDef": {"tf": 1}}, "df": 3}}}}}}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "n": {"docs": {"scalpel.cfg.builder.CFGBuilder.visit_Assign": {"tf": 1}, "scalpel.core.vars_visitor.VarsVisitor.visit_Assign": {"tf": 1}, "scalpel.typeinfer.analysers.SourceSplitVisitor.visit_Assign": {"tf": 1}}, "df": 3}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"scalpel.cfg.builder.CFGBuilder.visit_Assert": {"tf": 1}}, "df": 1}}}}, "y": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"scalpel.cfg.builder.CFGBuilder.visit_AsyncFor": {"tf": 1}}, "df": 1}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "f": {"docs": {"scalpel.cfg.builder.CFGBuilder.visit_AsyncFunctionDef": {"tf": 1}}, "df": 1}}}}}}}}}}}, "w": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"scalpel.cfg.builder.CFGBuilder.visit_AsyncWith": {"tf": 1}}, "df": 1}}}}}}}}, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "n": {"docs": {"scalpel.cfg.builder.CFGBuilder.visit_AnnAssign": {"tf": 1}}, "df": 1}}}}}}}}, "u": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "n": {"docs": {"scalpel.cfg.builder.CFGBuilder.visit_AugAssign": {"tf": 1}}, "df": 1}}}}}}}}, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"scalpel.cfg.builder.CFGBuilder.visit_Await": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "g": {"docs": {"scalpel.core.fun_def_visitor.FunDefVisitor.visit_Args": {"tf": 1}}, "df": 1}}, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"scalpel.core.func_call_visitor.CallTransformer.visit_Attribute": {"tf": 1}, "scalpel.core.func_call_visitor.FuncCallVisitor.visit_Attribute": {"tf": 1}, "scalpel.core.vars_visitor.VarsVisitor.visit_Attribute": {"tf": 1}, "scalpel.typeinfer.utilities.TypeInferCallTransformer.visit_Attribute": {"tf": 1}, "scalpel.typeinfer.utilities.FuncCallVisitor.visit_Attribute": {"tf": 1}, "scalpel.typeinfer.visitors.FuncCallVisitor.visit_Attribute": {"tf": 1}, "scalpel.typeinfer.visitors.TypeInferCallTransformer.visit_Attribute": {"tf": 1}}, "df": 7}}}}}}}}, "g": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "b": {"docs": {"scalpel.cfg.builder.CFGBuilder.visit_Global": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {"scalpel.core.vars_visitor.VarsVisitor.visit_GeneratorComp": {"tf": 1}}, "df": 1}}}}}}}}}}}}}, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {"scalpel.cfg.builder.CFGBuilder.visit_Nonlocal": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {"scalpel.core.func_call_visitor.FuncCallVisitor.visit_Name": {"tf": 1}, "scalpel.core.vars_visitor.VarsVisitor.visit_Name": {"tf": 1}, "scalpel.typeinfer.utilities.FuncCallVisitor.visit_Name": {"tf": 1}, "scalpel.typeinfer.visitors.FuncCallVisitor.visit_Name": {"tf": 1}}, "df": 4}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"scalpel.cfg.builder.CFGBuilder.visit_Pass": {"tf": 1}}, "df": 1}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"scalpel.cfg.builder.CFGBuilder.visit_Delete": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"scalpel.core.vars_visitor.VarsVisitor.visit_Dict": {"tf": 1}}, "df": 1, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {"scalpel.core.vars_visitor.VarsVisitor.visit_DictComp": {"tf": 1}}, "df": 1}}}}}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {"scalpel.cfg.builder.CFGBuilder.visit_Raise": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {"scalpel.cfg.builder.CFGBuilder.visit_Return": {"tf": 1}}, "df": 1}}}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {"scalpel.cfg.builder.CFGBuilder.visit_Try": {"tf": 1}}, "df": 1}}, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {"scalpel.core.vars_visitor.VarsVisitor.visit_Tuple": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "f": {"docs": {"scalpel.cfg.builder.CFGBuilder.visit_If": {"tf": 1}, "scalpel.typeinfer.analysers.HeuristicParser.visit_If": {"tf": 1}}, "df": 2, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "p": {"docs": {"scalpel.core.vars_visitor.VarsVisitor.visit_IfExp": {"tf": 1}, "scalpel.typeinfer.analysers.HeuristicParser.visit_IfExp": {"tf": 1}}, "df": 2}}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"scalpel.cfg.builder.CFGBuilder.visit_Import": {"tf": 1}, "scalpel.typeinfer.analysers.HeuristicParser.visit_Import": {"tf": 1}}, "df": 2, "f": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"scalpel.cfg.builder.CFGBuilder.visit_ImportFrom": {"tf": 1}, "scalpel.typeinfer.analysers.HeuristicParser.visit_ImportFrom": {"tf": 1}}, "df": 2}}}}}}}}}}, "w": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {"scalpel.cfg.builder.CFGBuilder.visit_While": {"tf": 1}, "scalpel.typeinfer.analysers.HeuristicParser.visit_While": {"tf": 1}}, "df": 2}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"scalpel.cfg.builder.CFGBuilder.visit_With": {"tf": 1}}, "df": 1}}}}, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"scalpel.cfg.builder.CFGBuilder.visit_For": {"tf": 1}}, "df": 1}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "f": {"docs": {"scalpel.cfg.builder.CFGBuilder.visit_FunctionDef": {"tf": 1}, "scalpel.core.class_visitor.ClassVisitor.visit_FunctionDef": {"tf": 1}, "scalpel.core.source_visitor.SourceVisitor.visit_FunctionDef": {"tf": 1}, "scalpel.core.vars_visitor.VarsVisitor.visit_FunctionDef": {"tf": 1}, "scalpel.typeinfer.analysers.HeuristicParser.visit_FunctionDef": {"tf": 1}, "scalpel.typeinfer.analysers.SourceSplitVisitor.visit_FunctionDef": {"tf": 1}, "scalpel.typeinfer.analysers.ClassSplitVisitor.visit_FunctionDef": {"tf": 1}, "scalpel.typeinfer.analysers.ReturnStmtVisitor.visit_FunctionDef": {"tf": 1}}, "df": 8}}}}}}}}}}}, "b": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "k": {"docs": {"scalpel.cfg.builder.CFGBuilder.visit_Break": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {"scalpel.core.vars_visitor.VarsVisitor.visit_BoolOp": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {"scalpel.core.vars_visitor.VarsVisitor.visit_BinOp": {"tf": 1}, "scalpel.typeinfer.analysers.HeuristicParser.visit_BinOp": {"tf": 1}}, "df": 2}}}}}, "y": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"scalpel.cfg.builder.CFGBuilder.visit_Yield": {"tf": 1}, "scalpel.core.vars_visitor.VarsVisitor.visit_Yield": {"tf": 1}, "scalpel.typeinfer.analysers.ReturnStmtVisitor.visit_Yield": {"tf": 1}}, "df": 3, "f": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"scalpel.core.vars_visitor.VarsVisitor.visit_YieldFrom": {"tf": 1}}, "df": 1}}}}}}}}}, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"scalpel.core.kw_visitor.KWVisitor.visit_keyword": {"tf": 1}, "scalpel.core.vars_visitor.VarsVisitor.visit_keyword": {"tf": 1}}, "df": 2}}}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {"scalpel.core.vars_visitor.VarsVisitor.visit_UnaryOp": {"tf": 1}}, "df": 1}}}}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {"scalpel.core.vars_visitor.VarsVisitor.visit_Lambda": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"scalpel.core.vars_visitor.VarsVisitor.visit_List": {"tf": 1}}, "df": 1, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {"scalpel.core.vars_visitor.VarsVisitor.visit_ListComp": {"tf": 1}}, "df": 1}}}}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"scalpel.core.vars_visitor.VarsVisitor.visit_Set": {"tf": 1}}, "df": 1, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {"scalpel.core.vars_visitor.VarsVisitor.visit_SetComp": {"tf": 1}}, "df": 1}}}}}}, "u": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {"scalpel.core.vars_visitor.VarsVisitor.visit_Subscript": {"tf": 1}}, "df": 1}}}}}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"scalpel.core.vars_visitor.VarsVisitor.visit_Starred": {"tf": 1}}, "df": 1}}}}}}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"scalpel.core.vars_visitor.VarsVisitor": {"tf": 1}, "scalpel.core.vars_visitor.VarsVisitor.__init__": {"tf": 1}, "scalpel.core.vars_visitor.VarsVisitor.visit_Name": {"tf": 1}, "scalpel.core.vars_visitor.VarsVisitor.visit_BoolOp": {"tf": 1}, "scalpel.core.vars_visitor.VarsVisitor.visit_BinOp": {"tf": 1}, "scalpel.core.vars_visitor.VarsVisitor.visit_UnaryOp": {"tf": 1}, "scalpel.core.vars_visitor.VarsVisitor.visit_Lambda": {"tf": 1}, "scalpel.core.vars_visitor.VarsVisitor.visit_IfExp": {"tf": 1}, "scalpel.core.vars_visitor.VarsVisitor.visit_Dict": {"tf": 1}, "scalpel.core.vars_visitor.VarsVisitor.visit_Set": {"tf": 1}, "scalpel.core.vars_visitor.VarsVisitor.comprehension": {"tf": 1}, "scalpel.core.vars_visitor.VarsVisitor.visit_ListComp": {"tf": 1}, "scalpel.core.vars_visitor.VarsVisitor.visit_SetComp": {"tf": 1}, "scalpel.core.vars_visitor.VarsVisitor.visit_DictComp": {"tf": 1}, "scalpel.core.vars_visitor.VarsVisitor.visit_GeneratorComp": {"tf": 1}, "scalpel.core.vars_visitor.VarsVisitor.visit_Yield": {"tf": 1}, "scalpel.core.vars_visitor.VarsVisitor.visit_YieldFrom": {"tf": 1}, "scalpel.core.vars_visitor.VarsVisitor.visit_Compare": {"tf": 1}, "scalpel.core.vars_visitor.VarsVisitor.visit_Call": {"tf": 1}, "scalpel.core.vars_visitor.VarsVisitor.visit_keyword": {"tf": 1}, "scalpel.core.vars_visitor.VarsVisitor.visit_Attribute": {"tf": 1}, "scalpel.core.vars_visitor.VarsVisitor.get_attr_name": {"tf": 1}, "scalpel.core.vars_visitor.VarsVisitor.slicev": {"tf": 1}, "scalpel.core.vars_visitor.VarsVisitor.visit_Subscript": {"tf": 1}, "scalpel.core.vars_visitor.VarsVisitor.visit_Starred": {"tf": 1}, "scalpel.core.vars_visitor.VarsVisitor.visit_List": {"tf": 1}, "scalpel.core.vars_visitor.VarsVisitor.visit_Tuple": {"tf": 1}, "scalpel.core.vars_visitor.VarsVisitor.visit_FunctionDef": {"tf": 1}, "scalpel.core.vars_visitor.VarsVisitor.visit_Assign": {"tf": 1}}, "df": 29}}}}}}}}, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {"scalpel.typeinfer.analysers.VariableAssignmentMap": {"tf": 1}, "scalpel.typeinfer.analysers.VariableAssignmentMap.__init__": {"tf": 1}, "scalpel.typeinfer.analysers.VariableAssignmentMap.map": {"tf": 1}}, "df": 3}}}}}}}}}}}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"scalpel.cfg.model.Block.exits": {"tf": 1}}, "df": 1, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {"scalpel.cfg.model.Link.exitcase": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {"scalpel.import_graph.import_graph.ImportGraph.extract_class_from_source": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}}}}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "k": {"docs": {"scalpel.cfg.model.Link": {"tf": 1}, "scalpel.cfg.model.Link.__init__": {"tf": 1}, "scalpel.cfg.model.Link.source": {"tf": 1}, "scalpel.cfg.model.Link.target": {"tf": 1}, "scalpel.cfg.model.Link.exitcase": {"tf": 1}, "scalpel.cfg.model.Link.get_exitcase": {"tf": 1}}, "df": 6}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "f": {"2": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {"scalpel.import_graph.import_graph.ImportGraph.leaf2root": {"tf": 1}}, "df": 1}}}}}, "docs": {}, "df": 0}}}}, "k": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"scalpel.core.kw_visitor.KWVisitor": {"tf": 1}, "scalpel.core.kw_visitor.KWVisitor.__init__": {"tf": 1}, "scalpel.core.kw_visitor.KWVisitor.visit_keyword": {"tf": 1}}, "df": 3}}}}}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"scalpel.core.util.Unit": {"tf": 1}, "scalpel.core.util.Unit.__init__": {"tf": 1}, "scalpel.core.util.Unit.search_for_pos": {"tf": 1}, "scalpel.core.util.Unit.insert_stmt_before": {"tf": 1}, "scalpel.core.util.Unit.insert_stmts_before": {"tf": 1}, "scalpel.core.util.Unit.insert_after": {"tf": 1}, "scalpel.core.util.Unit.remove": {"tf": 1}, "scalpel.core.util.Unit.replace": {"tf": 1}}, "df": 8, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "k": {"docs": {"scalpel.core.util.UnitWalker": {"tf": 1}}, "df": 1}}}}}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"scalpel.typeinfer.analysers.ReturnStmtVisitor.query_assign_records": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}}}}, "fullname": {"root": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"scalpel": {"tf": 1}, "scalpel.rewriter": {"tf": 1}, "scalpel.SSA": {"tf": 1}, "scalpel.SSA.alg": {"tf": 1}, "scalpel.SSA.alg.immediate_dominators": {"tf": 1}, "scalpel.SSA.alg.dominance_frontiers": {"tf": 1}, "scalpel.SSA.alg.main": {"tf": 1}, "scalpel.SSA.const": {"tf": 1}, "scalpel.SSA.const.parse_val": {"tf": 1}, "scalpel.SSA.const.SSA": {"tf": 1}, "scalpel.SSA.const.SSA.__init__": {"tf": 1}, "scalpel.SSA.const.SSA.get_attribute_stmts": {"tf": 1}, "scalpel.SSA.const.SSA.get_identifiers": {"tf": 1}, "scalpel.SSA.const.SSA.compute_SSA": {"tf": 1}, "scalpel.SSA.const.SSA.get_stmt_idents_ctx": {"tf": 1}, "scalpel.SSA.const.SSA.to_json": {"tf": 1}, "scalpel.SSA.const.SSA.print_block": {"tf": 1}, "scalpel.SSA.const.SSA.compute_idom": {"tf": 1}, "scalpel.SSA.const.SSA.compute_DF": {"tf": 1}, "scalpel.SSA.ssa": {"tf": 1}, "scalpel.SSA.ssa.parse_val": {"tf": 1}, "scalpel.SSA.ssa.SSA": {"tf": 1}, "scalpel.SSA.ssa.SSA.__init__": {"tf": 1}, "scalpel.SSA.ssa.SSA.get_global_live_vars": {"tf": 1}, "scalpel.SSA.ssa.SSA.flatten_tuple": {"tf": 1}, "scalpel.SSA.ssa.SSA.get_attribute_stmts": {"tf": 1}, "scalpel.SSA.ssa.SSA.get_identifiers": {"tf": 1}, "scalpel.SSA.ssa.SSA.get_stmt_idents_ctx": {"tf": 1}, "scalpel.SSA.ssa.SSA.compute_undefined_names": {"tf": 1}, "scalpel.SSA.ssa.SSA.backward_query_new": {"tf": 1}, "scalpel.SSA.ssa.SSA.hit_scope": {"tf": 1}, "scalpel.SSA.ssa.SSA.is_undefined": {"tf": 1}, "scalpel.SSA.ssa.SSA.to_json": {"tf": 1}, "scalpel.SSA.ssa.SSA.print_block": {"tf": 1}, "scalpel.SSA.ssa.SSA.compute_idom": {"tf": 1}, "scalpel.SSA.ssa.SSA.RD": {"tf": 1}, "scalpel.SSA.ssa.SSA.compute_dom_old": {"tf": 1}, "scalpel.call_graph": {"tf": 1}, "scalpel.call_graph.pycg": {"tf": 1}, "scalpel.cfg": {"tf": 1}, "scalpel.cfg.builder": {"tf": 1}, "scalpel.cfg.builder.is_py38_or_higher": {"tf": 1}, "scalpel.cfg.builder.invert": {"tf": 1}, "scalpel.cfg.builder.merge_exitcases": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.__init__": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.build": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.build_from_src": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.build_from_file": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.new_block": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.add_statement": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.add_exit": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.new_loopguard": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.new_functionCFG": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.new_ClassCFG": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.clean_cfg": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.goto_new_block": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.visit_Expr": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.visit_Call": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.visit_Assign": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.visit_AnnAssign": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.visit_AugAssign": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.visit_Global": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.visit_Nonlocal": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.visit_Pass": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.visit_Delete": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.visit_Raise": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.visit_Assert": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.visit_Try": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.visit_If": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.visit_While": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.visit_For": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.visit_AsyncFor": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.visit_Break": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.visit_Continue": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.visit_Import": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.visit_ImportFrom": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.visit_FunctionDef": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.visit_AsyncFunctionDef": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.visit_ClassDef": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.visit_Await": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.visit_Return": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.visit_Yield": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.visit_With": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.visit_AsyncWith": {"tf": 1}, "scalpel.cfg.model": {"tf": 1}, "scalpel.cfg.model.Block": {"tf": 1}, "scalpel.cfg.model.Block.__init__": {"tf": 1}, "scalpel.cfg.model.Block.id": {"tf": 1}, "scalpel.cfg.model.Block.statements": {"tf": 1}, "scalpel.cfg.model.Block.func_calls": {"tf": 1}, "scalpel.cfg.model.Block.predecessors": {"tf": 1}, "scalpel.cfg.model.Block.exits": {"tf": 1}, "scalpel.cfg.model.Block.at": {"tf": 1}, "scalpel.cfg.model.Block.is_empty": {"tf": 1}, "scalpel.cfg.model.Block.strip_comment": {"tf": 1}, "scalpel.cfg.model.Block.get_source": {"tf": 1}, "scalpel.cfg.model.Block.get_calls": {"tf": 1}, "scalpel.cfg.model.Block.ssa_form": {"tf": 1}, "scalpel.cfg.model.Link": {"tf": 1}, "scalpel.cfg.model.Link.__init__": {"tf": 1}, "scalpel.cfg.model.Link.source": {"tf": 1}, "scalpel.cfg.model.Link.target": {"tf": 1}, "scalpel.cfg.model.Link.exitcase": {"tf": 1}, "scalpel.cfg.model.Link.get_exitcase": {"tf": 1}, "scalpel.cfg.model.CFG": {"tf": 1}, "scalpel.cfg.model.CFG.__init__": {"tf": 1}, "scalpel.cfg.model.CFG.remove_comments": {"tf": 1}, "scalpel.cfg.model.CFG.get_all_blocks": {"tf": 1}, "scalpel.cfg.model.CFG.build_visual": {"tf": 1}, "scalpel.core": {"tf": 1}, "scalpel.core.class_visitor": {"tf": 1}, "scalpel.core.class_visitor.get_keywords": {"tf": 1}, "scalpel.core.class_visitor.ClassVisitor": {"tf": 1}, "scalpel.core.class_visitor.ClassVisitor.__init__": {"tf": 1}, "scalpel.core.class_visitor.ClassVisitor.visit_FunctionDef": {"tf": 1}, "scalpel.core.fun_def_visitor": {"tf": 1}, "scalpel.core.fun_def_visitor.FunDefVisitor": {"tf": 1}, "scalpel.core.fun_def_visitor.FunDefVisitor.__init__": {"tf": 1}, "scalpel.core.fun_def_visitor.FunDefVisitor.visit": {"tf": 1}, "scalpel.core.fun_def_visitor.FunDefVisitor.visit_Args": {"tf": 1}, "scalpel.core.func_call_visitor": {"tf": 1}, "scalpel.core.func_call_visitor.is_py38_or_higher": {"tf": 1}, "scalpel.core.func_call_visitor.CallTransformer": {"tf": 1}, "scalpel.core.func_call_visitor.CallTransformer.__init__": {"tf": 1}, "scalpel.core.func_call_visitor.CallTransformer.visit_Attribute": {"tf": 1}, "scalpel.core.func_call_visitor.CallTransformer.param2str": {"tf": 1}, "scalpel.core.func_call_visitor.CallTransformer.visit_Call": {"tf": 1}, "scalpel.core.func_call_visitor.FuncCallVisitor": {"tf": 1}, "scalpel.core.func_call_visitor.FuncCallVisitor.__init__": {"tf": 1}, "scalpel.core.func_call_visitor.FuncCallVisitor.clear": {"tf": 1}, "scalpel.core.func_call_visitor.FuncCallVisitor.name": {"tf": 1}, "scalpel.core.func_call_visitor.FuncCallVisitor.visit_Name": {"tf": 1}, "scalpel.core.func_call_visitor.FuncCallVisitor.visit_Attribute": {"tf": 1}, "scalpel.core.func_call_visitor.FuncCallVisitor.visit_Call": {"tf": 1}, "scalpel.core.func_call_visitor.get_args": {"tf": 1}, "scalpel.core.func_call_visitor.get_call_type": {"tf": 1}, "scalpel.core.func_call_visitor.get_func_calls": {"tf": 1}, "scalpel.core.kw_visitor": {"tf": 1}, "scalpel.core.kw_visitor.KWVisitor": {"tf": 1}, "scalpel.core.kw_visitor.KWVisitor.__init__": {"tf": 1}, "scalpel.core.kw_visitor.KWVisitor.visit_keyword": {"tf": 1}, "scalpel.core.mnode": {"tf": 1}, "scalpel.core.mnode.get_attr_name": {"tf": 1}, "scalpel.core.mnode.ImportRelation": {"tf": 1}, "scalpel.core.mnode.ImportRelation.__init__": {"tf": 1}, "scalpel.core.mnode.MNode": {"tf": 1}, "scalpel.core.mnode.MNode.__init__": {"tf": 1}, "scalpel.core.mnode.MNode.rewrite": {"tf": 1}, "scalpel.core.mnode.MNode.parse_vars": {"tf": 1}, "scalpel.core.mnode.MNode.gen_import_relations": {"tf": 1}, "scalpel.core.mnode.MNode.parse_func_calls": {"tf": 1}, "scalpel.core.mnode.MNode.gen_ast": {"tf": 1}, "scalpel.core.mnode.MNode.parse_func_defs": {"tf": 1}, "scalpel.core.mnode.MNode.parse_import_stmts": {"tf": 1}, "scalpel.core.mnode.MNode.retrieve_meta": {"tf": 1}, "scalpel.core.mnode.MNode.gen_cfg": {"tf": 1}, "scalpel.core.mnode.MNode.make_unit_walker": {"tf": 1}, "scalpel.core.source_visitor": {"tf": 1}, "scalpel.core.source_visitor.get_keywords": {"tf": 1}, "scalpel.core.source_visitor.SourceVisitor": {"tf": 1}, "scalpel.core.source_visitor.SourceVisitor.__init__": {"tf": 1}, "scalpel.core.source_visitor.SourceVisitor.visit_FunctionDef": {"tf": 1}, "scalpel.core.source_visitor.SourceVisitor.visit_ClassDef": {"tf": 1}, "scalpel.core.util": {"tf": 1}, "scalpel.core.util.iter_fields": {"tf": 1}, "scalpel.core.util.iter_child_nodes": {"tf": 1}, "scalpel.core.util.iter_stmt_children": {"tf": 1}, "scalpel.core.util.find_local_modules": {"tf": 1}, "scalpel.core.util.get_path_by_extension": {"tf": 1}, "scalpel.core.util.Unit": {"tf": 1}, "scalpel.core.util.Unit.__init__": {"tf": 1}, "scalpel.core.util.Unit.search_for_pos": {"tf": 1}, "scalpel.core.util.Unit.insert_stmt_before": {"tf": 1}, "scalpel.core.util.Unit.insert_stmts_before": {"tf": 1}, "scalpel.core.util.Unit.insert_after": {"tf": 1}, "scalpel.core.util.Unit.remove": {"tf": 1}, "scalpel.core.util.Unit.replace": {"tf": 1}, "scalpel.core.util.UnitWalker": {"tf": 1}, "scalpel.core.util.StmtIterator": {"tf": 1}, "scalpel.core.util.StmtIterator.__init__": {"tf": 1}, "scalpel.core.util.StmtIterator.insert_before": {"tf": 1}, "scalpel.core.util.StmtIterator.insert_after": {"tf": 1}, "scalpel.core.util.StmtIterator.remove": {"tf": 1}, "scalpel.core.util.StmtIterator.replace": {"tf": 1}, "scalpel.core.vars_visitor": {"tf": 1}, "scalpel.core.vars_visitor.VarsVisitor": {"tf": 1}, "scalpel.core.vars_visitor.VarsVisitor.__init__": {"tf": 1}, "scalpel.core.vars_visitor.VarsVisitor.visit_Name": {"tf": 1}, "scalpel.core.vars_visitor.VarsVisitor.visit_BoolOp": {"tf": 1}, "scalpel.core.vars_visitor.VarsVisitor.visit_BinOp": {"tf": 1}, "scalpel.core.vars_visitor.VarsVisitor.visit_UnaryOp": {"tf": 1}, "scalpel.core.vars_visitor.VarsVisitor.visit_Lambda": {"tf": 1}, "scalpel.core.vars_visitor.VarsVisitor.visit_IfExp": {"tf": 1}, "scalpel.core.vars_visitor.VarsVisitor.visit_Dict": {"tf": 1}, "scalpel.core.vars_visitor.VarsVisitor.visit_Set": {"tf": 1}, "scalpel.core.vars_visitor.VarsVisitor.comprehension": {"tf": 1}, "scalpel.core.vars_visitor.VarsVisitor.visit_ListComp": {"tf": 1}, "scalpel.core.vars_visitor.VarsVisitor.visit_SetComp": {"tf": 1}, "scalpel.core.vars_visitor.VarsVisitor.visit_DictComp": {"tf": 1}, "scalpel.core.vars_visitor.VarsVisitor.visit_GeneratorComp": {"tf": 1}, "scalpel.core.vars_visitor.VarsVisitor.visit_Yield": {"tf": 1}, "scalpel.core.vars_visitor.VarsVisitor.visit_YieldFrom": {"tf": 1}, "scalpel.core.vars_visitor.VarsVisitor.visit_Compare": {"tf": 1}, "scalpel.core.vars_visitor.VarsVisitor.visit_Call": {"tf": 1}, "scalpel.core.vars_visitor.VarsVisitor.visit_keyword": {"tf": 1}, "scalpel.core.vars_visitor.VarsVisitor.visit_Attribute": {"tf": 1}, "scalpel.core.vars_visitor.VarsVisitor.get_attr_name": {"tf": 1}, "scalpel.core.vars_visitor.VarsVisitor.slicev": {"tf": 1}, "scalpel.core.vars_visitor.VarsVisitor.visit_Subscript": {"tf": 1}, "scalpel.core.vars_visitor.VarsVisitor.visit_Starred": {"tf": 1}, "scalpel.core.vars_visitor.VarsVisitor.visit_List": {"tf": 1}, "scalpel.core.vars_visitor.VarsVisitor.visit_Tuple": {"tf": 1}, "scalpel.core.vars_visitor.VarsVisitor.visit_FunctionDef": {"tf": 1}, "scalpel.core.vars_visitor.VarsVisitor.visit_Assign": {"tf": 1}, "scalpel.core.vars_visitor.get_vars": {"tf": 1}, "scalpel.import_graph": {"tf": 1}, "scalpel.import_graph.import_graph": {"tf": 1}, "scalpel.import_graph.import_graph.Tree": {"tf": 1}, "scalpel.import_graph.import_graph.Tree.__init__": {"tf": 1}, "scalpel.import_graph.import_graph.ImportGraph": {"tf": 1}, "scalpel.import_graph.import_graph.ImportGraph.__init__": {"tf": 1}, "scalpel.import_graph.import_graph.ImportGraph.build_dir_tree": {"tf": 1}, "scalpel.import_graph.import_graph.ImportGraph.get_leaf_nodes": {"tf": 1}, "scalpel.import_graph.import_graph.ImportGraph.go_to_that_node": {"tf": 1}, "scalpel.import_graph.import_graph.ImportGraph.parse_import": {"tf": 1}, "scalpel.import_graph.import_graph.ImportGraph.extract_class_from_source": {"tf": 1}, "scalpel.import_graph.import_graph.ImportGraph.leaf2root": {"tf": 1}, "scalpel.import_graph.import_graph.ImportGraph.find_child_by_name": {"tf": 1}, "scalpel.import_graph.import_graph.ImportGraph.find_node_by_name": {"tf": 1}, "scalpel.typeinfer": {"tf": 1}, "scalpel.typeinfer.analysers": {"tf": 1}, "scalpel.typeinfer.analysers.BinaryOperatorMap": {"tf": 1}, "scalpel.typeinfer.analysers.BinaryOperatorMap.__init__": {"tf": 1}, "scalpel.typeinfer.analysers.BinaryOperatorMap.append": {"tf": 1}, "scalpel.typeinfer.analysers.BinaryOperatorMap.chain_types": {"tf": 1}, "scalpel.typeinfer.analysers.ImportTypeMap": {"tf": 1}, "scalpel.typeinfer.analysers.ImportTypeMap.__init__": {"tf": 1}, "scalpel.typeinfer.analysers.ImportTypeMap.map": {"tf": 1}, "scalpel.typeinfer.analysers.ImportTypeMap.get_imported_type": {"tf": 1}, "scalpel.typeinfer.analysers.ClassDefinitionMap": {"tf": 1}, "scalpel.typeinfer.analysers.ClassDefinitionMap.__init__": {"tf": 1}, "scalpel.typeinfer.analysers.ClassDefinitionMap.map": {"tf": 1}, "scalpel.typeinfer.analysers.FunctionDefinitionMap": {"tf": 1}, "scalpel.typeinfer.analysers.FunctionDefinitionMap.__init__": {"tf": 1}, "scalpel.typeinfer.analysers.FunctionDefinitionMap.map": {"tf": 1}, "scalpel.typeinfer.analysers.VariableAssignmentMap": {"tf": 1}, "scalpel.typeinfer.analysers.VariableAssignmentMap.__init__": {"tf": 1}, "scalpel.typeinfer.analysers.VariableAssignmentMap.map": {"tf": 1}, "scalpel.typeinfer.analysers.BinaryOperationMap": {"tf": 1}, "scalpel.typeinfer.analysers.BinaryOperationMap.__init__": {"tf": 1}, "scalpel.typeinfer.analysers.BinaryOperationMap.map": {"tf": 1}, "scalpel.typeinfer.analysers.HeuristicParser": {"tf": 1}, "scalpel.typeinfer.analysers.HeuristicParser.__init__": {"tf": 1}, "scalpel.typeinfer.analysers.HeuristicParser.visit_FunctionDef": {"tf": 1}, "scalpel.typeinfer.analysers.HeuristicParser.visit_Import": {"tf": 1}, "scalpel.typeinfer.analysers.HeuristicParser.visit_ImportFrom": {"tf": 1}, "scalpel.typeinfer.analysers.HeuristicParser.visit_While": {"tf": 1}, "scalpel.typeinfer.analysers.HeuristicParser.visit_Compare": {"tf": 1}, "scalpel.typeinfer.analysers.HeuristicParser.visit_BinOp": {"tf": 1}, "scalpel.typeinfer.analysers.HeuristicParser.visit_IfExp": {"tf": 1}, "scalpel.typeinfer.analysers.HeuristicParser.visit_If": {"tf": 1}, "scalpel.typeinfer.analysers.SourceSplitVisitor": {"tf": 1}, "scalpel.typeinfer.analysers.SourceSplitVisitor.__init__": {"tf": 1}, "scalpel.typeinfer.analysers.SourceSplitVisitor.visit_Assign": {"tf": 1}, "scalpel.typeinfer.analysers.SourceSplitVisitor.visit_FunctionDef": {"tf": 1}, "scalpel.typeinfer.analysers.ClassSplitVisitor": {"tf": 1}, "scalpel.typeinfer.analysers.ClassSplitVisitor.__init__": {"tf": 1}, "scalpel.typeinfer.analysers.ClassSplitVisitor.visit_FunctionDef": {"tf": 1}, "scalpel.typeinfer.analysers.ClassSplitVisitor.visit_ClassDef": {"tf": 1}, "scalpel.typeinfer.analysers.ReturnStmtVisitor": {"tf": 1}, "scalpel.typeinfer.analysers.ReturnStmtVisitor.__init__": {"tf": 1}, "scalpel.typeinfer.analysers.ReturnStmtVisitor.import_assign_records": {"tf": 1}, "scalpel.typeinfer.analysers.ReturnStmtVisitor.import_class_assign_records": {"tf": 1}, "scalpel.typeinfer.analysers.ReturnStmtVisitor.import_assignments": {"tf": 1}, "scalpel.typeinfer.analysers.ReturnStmtVisitor.visit_FunctionDef": {"tf": 1}, "scalpel.typeinfer.analysers.ReturnStmtVisitor.visit_Yield": {"tf": 1}, "scalpel.typeinfer.analysers.ReturnStmtVisitor.infer_actual_return_value": {"tf": 1}, "scalpel.typeinfer.analysers.ReturnStmtVisitor.type_infer_CFG": {"tf": 1}, "scalpel.typeinfer.analysers.ReturnStmtVisitor.query_assign_records": {"tf": 1}, "scalpel.typeinfer.analysers.ReturnStmtVisitor.type_infer": {"tf": 1}, "scalpel.typeinfer.analysers.ReturnStmtVisitor.clear": {"tf": 1}, "scalpel.typeinfer.analysers.ReturnStmtVisitor.clear_all": {"tf": 1}, "scalpel.typeinfer.analysers.Heuristics": {"tf": 1}, "scalpel.typeinfer.analysers.Heuristics.__init__": {"tf": 1}, "scalpel.typeinfer.analysers.Heuristics.heuristic_two": {"tf": 1}, "scalpel.typeinfer.analysers.Heuristics.heuristic_five": {"tf": 1}, "scalpel.typeinfer.analysers.Heuristics.heuristic_five_return": {"tf": 1}, "scalpel.typeinfer.analysers.Heuristics.heuristic_six": {"tf": 1}, "scalpel.typeinfer.analysers.Heuristics.heuristic_seven": {"tf": 1}, "scalpel.typeinfer.analysers.Heuristics.heuristic_eight": {"tf": 1}, "scalpel.typeinfer.analysers.Heuristics.heuristic_nine": {"tf": 1}, "scalpel.typeinfer.analysers.Heuristics.heuristic_eleven": {"tf": 1}, "scalpel.typeinfer.analysers.Heuristics.heuristic_twelve": {"tf": 1}, "scalpel.typeinfer.analysers.Heuristics.get_bin_op_involved": {"tf": 1}, "scalpel.typeinfer.analysers.Heuristics.in_bin_op": {"tf": 1}, "scalpel.typeinfer.classes": {"tf": 1}, "scalpel.typeinfer.classes.TypeWarning": {"tf": 1}, "scalpel.typeinfer.classes.TypeWarning.__init__": {"tf": 1}, "scalpel.typeinfer.classes.TypeWarning.print_warning": {"tf": 1}, "scalpel.typeinfer.classes.ScalpelVariable": {"tf": 1}, "scalpel.typeinfer.classes.ScalpelVariable.__init__": {"tf": 1}, "scalpel.typeinfer.classes.ScalpelVariable.type": {"tf": 1}, "scalpel.typeinfer.classes.ScalpelVariable.in_conditional": {"tf": 1}, "scalpel.typeinfer.classes.ScalpelVariable.in_equality": {"tf": 1}, "scalpel.typeinfer.classes.ScalpelVariable.is_callable": {"tf": 1}, "scalpel.typeinfer.classes.ScalpelVariable.called_methods": {"tf": 1}, "scalpel.typeinfer.classes.ScalpelVariable.binary_operation": {"tf": 1}, "scalpel.typeinfer.classes.ScalpelVariable.is_arg": {"tf": 1}, "scalpel.typeinfer.classes.ScalpelFunction": {"tf": 1}, "scalpel.typeinfer.classes.ScalpelFunction.__init__": {"tf": 1}, "scalpel.typeinfer.classes.ScalpelFunction.return_type": {"tf": 1}, "scalpel.typeinfer.classes.ScalpelClass": {"tf": 1}, "scalpel.typeinfer.classes.ScalpelClass.__init__": {"tf": 1}, "scalpel.typeinfer.classes.ScalpelClass.inherits": {"tf": 1}, "scalpel.typeinfer.classes.BinaryOperation": {"tf": 1}, "scalpel.typeinfer.classes.BinaryOperation.__init__": {"tf": 1}, "scalpel.typeinfer.classes.BinaryOperation.shared_type": {"tf": 1}, "scalpel.typeinfer.classes.ProcessedFile": {"tf": 1}, "scalpel.typeinfer.classes.ProcessedFile.__init__": {"tf": 1}, "scalpel.typeinfer.typeinfer": {"tf": 1}, "scalpel.typeinfer.typeinfer.process_code_with_heuristics": {"tf": 1}, "scalpel.typeinfer.typeinfer.TypeInference": {"tf": 1}, "scalpel.typeinfer.typeinfer.TypeInference.__init__": {"tf": 1}, "scalpel.typeinfer.typeinfer.TypeInference.infer_types": {"tf": 1}, "scalpel.typeinfer.typeinfer.TypeInference.get_types": {"tf": 1}, "scalpel.typeinfer.typeinfer.TypeInference.process_file": {"tf": 1}, "scalpel.typeinfer.typeinfer.TypeInference.print_types": {"tf": 1}, "scalpel.typeinfer.utilities": {"tf": 1}, "scalpel.typeinfer.utilities.get_func_calls_type": {"tf": 1}, "scalpel.typeinfer.utilities.TypeInferCallTransformer": {"tf": 1}, "scalpel.typeinfer.utilities.TypeInferCallTransformer.__init__": {"tf": 1}, "scalpel.typeinfer.utilities.TypeInferCallTransformer.visit_Attribute": {"tf": 1}, "scalpel.typeinfer.utilities.TypeInferCallTransformer.visit_Call": {"tf": 1}, "scalpel.typeinfer.utilities.FuncCallVisitor": {"tf": 1}, "scalpel.typeinfer.utilities.FuncCallVisitor.__init__": {"tf": 1}, "scalpel.typeinfer.utilities.FuncCallVisitor.clear": {"tf": 1}, "scalpel.typeinfer.utilities.FuncCallVisitor.name": {"tf": 1}, "scalpel.typeinfer.utilities.FuncCallVisitor.visit_Name": {"tf": 1}, "scalpel.typeinfer.utilities.FuncCallVisitor.visit_Attribute": {"tf": 1}, "scalpel.typeinfer.utilities.FuncCallVisitor.visit_Call": {"tf": 1}, "scalpel.typeinfer.utilities.get_built_in_types": {"tf": 1}, "scalpel.typeinfer.utilities.get_type": {"tf": 1}, "scalpel.typeinfer.utilities.check_consistent_list_types": {"tf": 1}, "scalpel.typeinfer.utilities.is_camel_case": {"tf": 1}, "scalpel.typeinfer.utilities.parse_module": {"tf": 1}, "scalpel.typeinfer.utilities.get_api_ref_id": {"tf": 1}, "scalpel.typeinfer.utilities.is_imported_fun": {"tf": 1}, "scalpel.typeinfer.utilities.rename_from_name": {"tf": 1}, "scalpel.typeinfer.utilities.is_valid_call_link": {"tf": 1}, "scalpel.typeinfer.utilities.generate_ast": {"tf": 1}, "scalpel.typeinfer.utilities.get_function_comment": {"tf": 1}, "scalpel.typeinfer.utilities.is_done": {"tf": 1}, "scalpel.typeinfer.utilities.find_class_by_attr": {"tf": 1}, "scalpel.typeinfer.utilities.get_attr_name": {"tf": 1}, "scalpel.typeinfer.utilities.resolve_name": {"tf": 1}, "scalpel.typeinfer.visitors": {"tf": 1}, "scalpel.typeinfer.visitors.FuncCallVisitor": {"tf": 1}, "scalpel.typeinfer.visitors.FuncCallVisitor.__init__": {"tf": 1}, "scalpel.typeinfer.visitors.FuncCallVisitor.clear": {"tf": 1}, "scalpel.typeinfer.visitors.FuncCallVisitor.name": {"tf": 1}, "scalpel.typeinfer.visitors.FuncCallVisitor.visit_Name": {"tf": 1}, "scalpel.typeinfer.visitors.FuncCallVisitor.visit_Attribute": {"tf": 1}, "scalpel.typeinfer.visitors.FuncCallVisitor.visit_Call": {"tf": 1}, "scalpel.typeinfer.visitors.TypeInferCallTransformer": {"tf": 1}, "scalpel.typeinfer.visitors.TypeInferCallTransformer.__init__": {"tf": 1}, "scalpel.typeinfer.visitors.TypeInferCallTransformer.visit_Attribute": {"tf": 1}, "scalpel.typeinfer.visitors.TypeInferCallTransformer.visit_Call": {"tf": 1}, "scalpel.typeinfer.visitors.get_args": {"tf": 1}, "scalpel.typeinfer.visitors.get_func_calls_type": {"tf": 1}, "scalpel.typeinfer.visitors.get_call_type": {"tf": 1}}, "df": 371, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {"scalpel.typeinfer.classes.ScalpelVariable": {"tf": 1}, "scalpel.typeinfer.classes.ScalpelVariable.__init__": {"tf": 1}, "scalpel.typeinfer.classes.ScalpelVariable.type": {"tf": 1}, "scalpel.typeinfer.classes.ScalpelVariable.in_conditional": {"tf": 1}, "scalpel.typeinfer.classes.ScalpelVariable.in_equality": {"tf": 1}, "scalpel.typeinfer.classes.ScalpelVariable.is_callable": {"tf": 1}, "scalpel.typeinfer.classes.ScalpelVariable.called_methods": {"tf": 1}, "scalpel.typeinfer.classes.ScalpelVariable.binary_operation": {"tf": 1}, "scalpel.typeinfer.classes.ScalpelVariable.is_arg": {"tf": 1}}, "df": 9}}}}, "f": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"scalpel.typeinfer.classes.ScalpelFunction": {"tf": 1}, "scalpel.typeinfer.classes.ScalpelFunction.__init__": {"tf": 1}, "scalpel.typeinfer.classes.ScalpelFunction.return_type": {"tf": 1}}, "df": 3}}}}}, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"scalpel.typeinfer.classes.ScalpelClass": {"tf": 1}, "scalpel.typeinfer.classes.ScalpelClass.__init__": {"tf": 1}, "scalpel.typeinfer.classes.ScalpelClass.inherits": {"tf": 1}}, "df": 3}}}}}}}}}}}, "s": {"docs": {}, "df": 0, "a": {"docs": {"scalpel.SSA": {"tf": 1}, "scalpel.SSA.alg": {"tf": 1}, "scalpel.SSA.alg.immediate_dominators": {"tf": 1}, "scalpel.SSA.alg.dominance_frontiers": {"tf": 1}, "scalpel.SSA.alg.main": {"tf": 1}, "scalpel.SSA.const": {"tf": 1}, "scalpel.SSA.const.parse_val": {"tf": 1}, "scalpel.SSA.const.SSA": {"tf": 1.4142135623730951}, "scalpel.SSA.const.SSA.__init__": {"tf": 1.4142135623730951}, "scalpel.SSA.const.SSA.get_attribute_stmts": {"tf": 1.4142135623730951}, "scalpel.SSA.const.SSA.get_identifiers": {"tf": 1.4142135623730951}, "scalpel.SSA.const.SSA.compute_SSA": {"tf": 1.4142135623730951}, "scalpel.SSA.const.SSA.get_stmt_idents_ctx": {"tf": 1.4142135623730951}, "scalpel.SSA.const.SSA.to_json": {"tf": 1.4142135623730951}, "scalpel.SSA.const.SSA.print_block": {"tf": 1.4142135623730951}, "scalpel.SSA.const.SSA.compute_idom": {"tf": 1.4142135623730951}, "scalpel.SSA.const.SSA.compute_DF": {"tf": 1.4142135623730951}, "scalpel.SSA.ssa": {"tf": 1.4142135623730951}, "scalpel.SSA.ssa.parse_val": {"tf": 1.4142135623730951}, "scalpel.SSA.ssa.SSA": {"tf": 1.7320508075688772}, "scalpel.SSA.ssa.SSA.__init__": {"tf": 1.7320508075688772}, "scalpel.SSA.ssa.SSA.get_global_live_vars": {"tf": 1.7320508075688772}, "scalpel.SSA.ssa.SSA.flatten_tuple": {"tf": 1.7320508075688772}, "scalpel.SSA.ssa.SSA.get_attribute_stmts": {"tf": 1.7320508075688772}, "scalpel.SSA.ssa.SSA.get_identifiers": {"tf": 1.7320508075688772}, "scalpel.SSA.ssa.SSA.get_stmt_idents_ctx": {"tf": 1.7320508075688772}, "scalpel.SSA.ssa.SSA.compute_undefined_names": {"tf": 1.7320508075688772}, "scalpel.SSA.ssa.SSA.backward_query_new": {"tf": 1.7320508075688772}, "scalpel.SSA.ssa.SSA.hit_scope": {"tf": 1.7320508075688772}, "scalpel.SSA.ssa.SSA.is_undefined": {"tf": 1.7320508075688772}, "scalpel.SSA.ssa.SSA.to_json": {"tf": 1.7320508075688772}, "scalpel.SSA.ssa.SSA.print_block": {"tf": 1.7320508075688772}, "scalpel.SSA.ssa.SSA.compute_idom": {"tf": 1.7320508075688772}, "scalpel.SSA.ssa.SSA.RD": {"tf": 1.7320508075688772}, "scalpel.SSA.ssa.SSA.compute_dom_old": {"tf": 1.7320508075688772}}, "df": 35, "_": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {"scalpel.cfg.model.Block.ssa_form": {"tf": 1}}, "df": 1}}}}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"scalpel.cfg.model.Block.statements": {"tf": 1}}, "df": 1}}}}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"scalpel.cfg.model.Block.strip_comment": {"tf": 1}}, "df": 1}}}}}}}, "m": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"scalpel.core.util.StmtIterator": {"tf": 1}, "scalpel.core.util.StmtIterator.__init__": {"tf": 1}, "scalpel.core.util.StmtIterator.insert_before": {"tf": 1}, "scalpel.core.util.StmtIterator.insert_after": {"tf": 1}, "scalpel.core.util.StmtIterator.remove": {"tf": 1}, "scalpel.core.util.StmtIterator.replace": {"tf": 1}}, "df": 6}}}}}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {"scalpel.cfg.model.Link.source": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"scalpel.core.source_visitor": {"tf": 1}, "scalpel.core.source_visitor.get_keywords": {"tf": 1}, "scalpel.core.source_visitor.SourceVisitor": {"tf": 1}, "scalpel.core.source_visitor.SourceVisitor.__init__": {"tf": 1}, "scalpel.core.source_visitor.SourceVisitor.visit_FunctionDef": {"tf": 1}, "scalpel.core.source_visitor.SourceVisitor.visit_ClassDef": {"tf": 1}}, "df": 6}}}}}}}}, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"scalpel.core.source_visitor.SourceVisitor": {"tf": 1}, "scalpel.core.source_visitor.SourceVisitor.__init__": {"tf": 1}, "scalpel.core.source_visitor.SourceVisitor.visit_FunctionDef": {"tf": 1}, "scalpel.core.source_visitor.SourceVisitor.visit_ClassDef": {"tf": 1}}, "df": 4}}}}}}}, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"scalpel.typeinfer.analysers.SourceSplitVisitor": {"tf": 1}, "scalpel.typeinfer.analysers.SourceSplitVisitor.__init__": {"tf": 1}, "scalpel.typeinfer.analysers.SourceSplitVisitor.visit_Assign": {"tf": 1}, "scalpel.typeinfer.analysers.SourceSplitVisitor.visit_FunctionDef": {"tf": 1}}, "df": 4}}}}}}}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {"scalpel.core.util.Unit.search_for_pos": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "v": {"docs": {"scalpel.core.vars_visitor.VarsVisitor.slicev": {"tf": 1}}, "df": 1}}}}}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {"scalpel.typeinfer.classes.BinaryOperation.shared_type": {"tf": 1}}, "df": 1}}}}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"scalpel.rewriter": {"tf": 1}, "scalpel.core.mnode.MNode.rewrite": {"tf": 1}}, "df": 2}}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "v": {"docs": {"scalpel.core.util.Unit.remove": {"tf": 1}, "scalpel.core.util.StmtIterator.remove": {"tf": 1}}, "df": 2, "e": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"scalpel.cfg.model.CFG.remove_comments": {"tf": 1}}, "df": 1}}}}}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"scalpel.core.mnode.MNode.retrieve_meta": {"tf": 1}}, "df": 1}}}}}}}}}}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"scalpel.typeinfer.analysers.ReturnStmtVisitor": {"tf": 1}, "scalpel.typeinfer.analysers.ReturnStmtVisitor.__init__": {"tf": 1}, "scalpel.typeinfer.analysers.ReturnStmtVisitor.import_assign_records": {"tf": 1}, "scalpel.typeinfer.analysers.ReturnStmtVisitor.import_class_assign_records": {"tf": 1}, "scalpel.typeinfer.analysers.ReturnStmtVisitor.import_assignments": {"tf": 1}, "scalpel.typeinfer.analysers.ReturnStmtVisitor.visit_FunctionDef": {"tf": 1}, "scalpel.typeinfer.analysers.ReturnStmtVisitor.visit_Yield": {"tf": 1}, "scalpel.typeinfer.analysers.ReturnStmtVisitor.infer_actual_return_value": {"tf": 1}, "scalpel.typeinfer.analysers.ReturnStmtVisitor.type_infer_CFG": {"tf": 1}, "scalpel.typeinfer.analysers.ReturnStmtVisitor.query_assign_records": {"tf": 1}, "scalpel.typeinfer.analysers.ReturnStmtVisitor.type_infer": {"tf": 1}, "scalpel.typeinfer.analysers.ReturnStmtVisitor.clear": {"tf": 1}, "scalpel.typeinfer.analysers.ReturnStmtVisitor.clear_all": {"tf": 1}}, "df": 13}}}}}}}}}}}, "_": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {"scalpel.typeinfer.classes.ScalpelFunction.return_type": {"tf": 1}}, "df": 1}}}}}}}}, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {"scalpel.core.util.Unit.replace": {"tf": 1}, "scalpel.core.util.StmtIterator.replace": {"tf": 1}}, "df": 2}}}}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {"scalpel.typeinfer.utilities.rename_from_name": {"tf": 1}}, "df": 1}}}}}}}}}}}}}, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {"scalpel.typeinfer.utilities.resolve_name": {"tf": 1}}, "df": 1}}}}}}}}}}, "d": {"docs": {"scalpel.SSA.ssa.SSA.RD": {"tf": 1}}, "df": 1}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "g": {"docs": {"scalpel.SSA.alg": {"tf": 1}, "scalpel.SSA.alg.immediate_dominators": {"tf": 1}, "scalpel.SSA.alg.dominance_frontiers": {"tf": 1}, "scalpel.SSA.alg.main": {"tf": 1}}, "df": 4}}, "d": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"scalpel.cfg.builder.CFGBuilder.add_statement": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"scalpel.cfg.builder.CFGBuilder.add_exit": {"tf": 1}}, "df": 1}}}}}}}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "s": {"docs": {"scalpel.typeinfer.analysers": {"tf": 1}, "scalpel.typeinfer.analysers.BinaryOperatorMap": {"tf": 1}, "scalpel.typeinfer.analysers.BinaryOperatorMap.__init__": {"tf": 1}, "scalpel.typeinfer.analysers.BinaryOperatorMap.append": {"tf": 1}, "scalpel.typeinfer.analysers.BinaryOperatorMap.chain_types": {"tf": 1}, "scalpel.typeinfer.analysers.ImportTypeMap": {"tf": 1}, "scalpel.typeinfer.analysers.ImportTypeMap.__init__": {"tf": 1}, "scalpel.typeinfer.analysers.ImportTypeMap.map": {"tf": 1}, "scalpel.typeinfer.analysers.ImportTypeMap.get_imported_type": {"tf": 1}, "scalpel.typeinfer.analysers.ClassDefinitionMap": {"tf": 1}, "scalpel.typeinfer.analysers.ClassDefinitionMap.__init__": {"tf": 1}, "scalpel.typeinfer.analysers.ClassDefinitionMap.map": {"tf": 1}, "scalpel.typeinfer.analysers.FunctionDefinitionMap": {"tf": 1}, "scalpel.typeinfer.analysers.FunctionDefinitionMap.__init__": {"tf": 1}, "scalpel.typeinfer.analysers.FunctionDefinitionMap.map": {"tf": 1}, "scalpel.typeinfer.analysers.VariableAssignmentMap": {"tf": 1}, "scalpel.typeinfer.analysers.VariableAssignmentMap.__init__": {"tf": 1}, "scalpel.typeinfer.analysers.VariableAssignmentMap.map": {"tf": 1}, "scalpel.typeinfer.analysers.BinaryOperationMap": {"tf": 1}, "scalpel.typeinfer.analysers.BinaryOperationMap.__init__": {"tf": 1}, "scalpel.typeinfer.analysers.BinaryOperationMap.map": {"tf": 1}, "scalpel.typeinfer.analysers.HeuristicParser": {"tf": 1}, "scalpel.typeinfer.analysers.HeuristicParser.__init__": {"tf": 1}, "scalpel.typeinfer.analysers.HeuristicParser.visit_FunctionDef": {"tf": 1}, "scalpel.typeinfer.analysers.HeuristicParser.visit_Import": {"tf": 1}, "scalpel.typeinfer.analysers.HeuristicParser.visit_ImportFrom": {"tf": 1}, "scalpel.typeinfer.analysers.HeuristicParser.visit_While": {"tf": 1}, "scalpel.typeinfer.analysers.HeuristicParser.visit_Compare": {"tf": 1}, "scalpel.typeinfer.analysers.HeuristicParser.visit_BinOp": {"tf": 1}, "scalpel.typeinfer.analysers.HeuristicParser.visit_IfExp": {"tf": 1}, "scalpel.typeinfer.analysers.HeuristicParser.visit_If": {"tf": 1}, "scalpel.typeinfer.analysers.SourceSplitVisitor": {"tf": 1}, "scalpel.typeinfer.analysers.SourceSplitVisitor.__init__": {"tf": 1}, "scalpel.typeinfer.analysers.SourceSplitVisitor.visit_Assign": {"tf": 1}, "scalpel.typeinfer.analysers.SourceSplitVisitor.visit_FunctionDef": {"tf": 1}, "scalpel.typeinfer.analysers.ClassSplitVisitor": {"tf": 1}, "scalpel.typeinfer.analysers.ClassSplitVisitor.__init__": {"tf": 1}, "scalpel.typeinfer.analysers.ClassSplitVisitor.visit_FunctionDef": {"tf": 1}, "scalpel.typeinfer.analysers.ClassSplitVisitor.visit_ClassDef": {"tf": 1}, "scalpel.typeinfer.analysers.ReturnStmtVisitor": {"tf": 1}, "scalpel.typeinfer.analysers.ReturnStmtVisitor.__init__": {"tf": 1}, "scalpel.typeinfer.analysers.ReturnStmtVisitor.import_assign_records": {"tf": 1}, "scalpel.typeinfer.analysers.ReturnStmtVisitor.import_class_assign_records": {"tf": 1}, "scalpel.typeinfer.analysers.ReturnStmtVisitor.import_assignments": {"tf": 1}, "scalpel.typeinfer.analysers.ReturnStmtVisitor.visit_FunctionDef": {"tf": 1}, "scalpel.typeinfer.analysers.ReturnStmtVisitor.visit_Yield": {"tf": 1}, "scalpel.typeinfer.analysers.ReturnStmtVisitor.infer_actual_return_value": {"tf": 1}, "scalpel.typeinfer.analysers.ReturnStmtVisitor.type_infer_CFG": {"tf": 1}, "scalpel.typeinfer.analysers.ReturnStmtVisitor.query_assign_records": {"tf": 1}, "scalpel.typeinfer.analysers.ReturnStmtVisitor.type_infer": {"tf": 1}, "scalpel.typeinfer.analysers.ReturnStmtVisitor.clear": {"tf": 1}, "scalpel.typeinfer.analysers.ReturnStmtVisitor.clear_all": {"tf": 1}, "scalpel.typeinfer.analysers.Heuristics": {"tf": 1}, "scalpel.typeinfer.analysers.Heuristics.__init__": {"tf": 1}, "scalpel.typeinfer.analysers.Heuristics.heuristic_two": {"tf": 1}, "scalpel.typeinfer.analysers.Heuristics.heuristic_five": {"tf": 1}, "scalpel.typeinfer.analysers.Heuristics.heuristic_five_return": {"tf": 1}, "scalpel.typeinfer.analysers.Heuristics.heuristic_six": {"tf": 1}, "scalpel.typeinfer.analysers.Heuristics.heuristic_seven": {"tf": 1}, "scalpel.typeinfer.analysers.Heuristics.heuristic_eight": {"tf": 1}, "scalpel.typeinfer.analysers.Heuristics.heuristic_nine": {"tf": 1}, "scalpel.typeinfer.analysers.Heuristics.heuristic_eleven": {"tf": 1}, "scalpel.typeinfer.analysers.Heuristics.heuristic_twelve": {"tf": 1}, "scalpel.typeinfer.analysers.Heuristics.get_bin_op_involved": {"tf": 1}, "scalpel.typeinfer.analysers.Heuristics.in_bin_op": {"tf": 1}}, "df": 65}}}}}, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"scalpel.typeinfer.analysers.BinaryOperatorMap.append": {"tf": 1}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"scalpel.SSA.alg.immediate_dominators": {"tf": 1}}, "df": 1}}}}}}}}}}}}}, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"scalpel.core.mnode.ImportRelation": {"tf": 1}, "scalpel.core.mnode.ImportRelation.__init__": {"tf": 1}}, "df": 2}}}, "_": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "h": {"docs": {"scalpel.import_graph": {"tf": 1}, "scalpel.import_graph.import_graph": {"tf": 1.4142135623730951}, "scalpel.import_graph.import_graph.Tree": {"tf": 1.4142135623730951}, "scalpel.import_graph.import_graph.Tree.__init__": {"tf": 1.4142135623730951}, "scalpel.import_graph.import_graph.ImportGraph": {"tf": 1.4142135623730951}, "scalpel.import_graph.import_graph.ImportGraph.__init__": {"tf": 1.4142135623730951}, "scalpel.import_graph.import_graph.ImportGraph.build_dir_tree": {"tf": 1.4142135623730951}, "scalpel.import_graph.import_graph.ImportGraph.get_leaf_nodes": {"tf": 1.4142135623730951}, "scalpel.import_graph.import_graph.ImportGraph.go_to_that_node": {"tf": 1.4142135623730951}, "scalpel.import_graph.import_graph.ImportGraph.parse_import": {"tf": 1.4142135623730951}, "scalpel.import_graph.import_graph.ImportGraph.extract_class_from_source": {"tf": 1.4142135623730951}, "scalpel.import_graph.import_graph.ImportGraph.leaf2root": {"tf": 1.4142135623730951}, "scalpel.import_graph.import_graph.ImportGraph.find_child_by_name": {"tf": 1.4142135623730951}, "scalpel.import_graph.import_graph.ImportGraph.find_node_by_name": {"tf": 1.4142135623730951}}, "df": 14}}}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "n": {"docs": {"scalpel.typeinfer.analysers.ReturnStmtVisitor.import_assignments": {"tf": 1}}, "df": 1, "_": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"scalpel.typeinfer.analysers.ReturnStmtVisitor.import_assign_records": {"tf": 1}}, "df": 1}}}}}}}}}}}}}, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"scalpel.typeinfer.analysers.ReturnStmtVisitor.import_class_assign_records": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}}}, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "h": {"docs": {"scalpel.import_graph.import_graph.ImportGraph": {"tf": 1}, "scalpel.import_graph.import_graph.ImportGraph.__init__": {"tf": 1}, "scalpel.import_graph.import_graph.ImportGraph.build_dir_tree": {"tf": 1}, "scalpel.import_graph.import_graph.ImportGraph.get_leaf_nodes": {"tf": 1}, "scalpel.import_graph.import_graph.ImportGraph.go_to_that_node": {"tf": 1}, "scalpel.import_graph.import_graph.ImportGraph.parse_import": {"tf": 1}, "scalpel.import_graph.import_graph.ImportGraph.extract_class_from_source": {"tf": 1}, "scalpel.import_graph.import_graph.ImportGraph.leaf2root": {"tf": 1}, "scalpel.import_graph.import_graph.ImportGraph.find_child_by_name": {"tf": 1}, "scalpel.import_graph.import_graph.ImportGraph.find_node_by_name": {"tf": 1}}, "df": 10}}}}}, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {"scalpel.typeinfer.analysers.ImportTypeMap": {"tf": 1}, "scalpel.typeinfer.analysers.ImportTypeMap.__init__": {"tf": 1}, "scalpel.typeinfer.analysers.ImportTypeMap.map": {"tf": 1}, "scalpel.typeinfer.analysers.ImportTypeMap.get_imported_type": {"tf": 1}}, "df": 4}}}}}}}}}}}}, "s": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"scalpel.SSA.ssa.SSA.is_undefined": {"tf": 1}}, "df": 1}}}}}}}, "p": {"docs": {}, "df": 0, "y": {"3": {"8": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {"scalpel.cfg.builder.is_py38_or_higher": {"tf": 1}, "scalpel.core.func_call_visitor.is_py38_or_higher": {"tf": 1}}, "df": 2}}}}}}}}}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {"scalpel.cfg.model.Block.is_empty": {"tf": 1}}, "df": 1}}}}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"scalpel.typeinfer.classes.ScalpelVariable.is_callable": {"tf": 1}}, "df": 1}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {"scalpel.typeinfer.utilities.is_camel_case": {"tf": 1}}, "df": 1}}}}}}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {"scalpel.typeinfer.classes.ScalpelVariable.is_arg": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {"scalpel.typeinfer.utilities.is_imported_fun": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "k": {"docs": {"scalpel.typeinfer.utilities.is_valid_call_link": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}, "d": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"scalpel.typeinfer.utilities.is_done": {"tf": 1}}, "df": 1}}}}}, "n": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"scalpel.cfg.builder.invert": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"scalpel.core.util.Unit.insert_stmt_before": {"tf": 1}}, "df": 1}}}}}}, "s": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"scalpel.core.util.Unit.insert_stmts_before": {"tf": 1}}, "df": 1}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "t": {"docs": {"scalpel.core.util.Unit.insert_after": {"tf": 1}, "scalpel.core.util.StmtIterator.insert_after": {"tf": 1}}, "df": 2}}}, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"scalpel.core.util.StmtIterator.insert_before": {"tf": 1}}, "df": 1}}}}}}}}}}, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {"scalpel.typeinfer.analysers.ReturnStmtVisitor.infer_actual_return_value": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {"scalpel.typeinfer.typeinfer.TypeInference.infer_types": {"tf": 1}}, "df": 1}}}}}}}, "_": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {"scalpel.typeinfer.analysers.Heuristics.in_bin_op": {"tf": 1}}, "df": 1}}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"scalpel.typeinfer.classes.ScalpelVariable.in_conditional": {"tf": 1}}, "df": 1}}}}}}, "e": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "u": {"docs": {"scalpel.typeinfer.classes.ScalpelVariable.in_equality": {"tf": 1}}, "df": 1}}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"scalpel.typeinfer.classes.ScalpelClass.inherits": {"tf": 1}}, "df": 1}}}}}}, "d": {"docs": {"scalpel.cfg.model.Block.id": {"tf": 1}}, "df": 1}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"scalpel.core.util.iter_fields": {"tf": 1}}, "df": 1}}}}}, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {"scalpel.core.util.iter_child_nodes": {"tf": 1}}, "df": 1}}}}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"scalpel.core.util.iter_stmt_children": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}, "d": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {"scalpel.SSA.alg.dominance_frontiers": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"scalpel.SSA.alg.main": {"tf": 1}}, "df": 1}}, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "k": {"docs": {"scalpel.core.mnode.MNode.make_unit_walker": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "p": {"docs": {"scalpel.typeinfer.analysers.ImportTypeMap.map": {"tf": 1}, "scalpel.typeinfer.analysers.ClassDefinitionMap.map": {"tf": 1}, "scalpel.typeinfer.analysers.FunctionDefinitionMap.map": {"tf": 1}, "scalpel.typeinfer.analysers.VariableAssignmentMap.map": {"tf": 1}, "scalpel.typeinfer.analysers.BinaryOperationMap.map": {"tf": 1}}, "df": 5}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {"scalpel.cfg.builder.merge_exitcases": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"scalpel.cfg.model": {"tf": 1}, "scalpel.cfg.model.Block": {"tf": 1}, "scalpel.cfg.model.Block.__init__": {"tf": 1}, "scalpel.cfg.model.Block.id": {"tf": 1}, "scalpel.cfg.model.Block.statements": {"tf": 1}, "scalpel.cfg.model.Block.func_calls": {"tf": 1}, "scalpel.cfg.model.Block.predecessors": {"tf": 1}, "scalpel.cfg.model.Block.exits": {"tf": 1}, "scalpel.cfg.model.Block.at": {"tf": 1}, "scalpel.cfg.model.Block.is_empty": {"tf": 1}, "scalpel.cfg.model.Block.strip_comment": {"tf": 1}, "scalpel.cfg.model.Block.get_source": {"tf": 1}, "scalpel.cfg.model.Block.get_calls": {"tf": 1}, "scalpel.cfg.model.Block.ssa_form": {"tf": 1}, "scalpel.cfg.model.Link": {"tf": 1}, "scalpel.cfg.model.Link.__init__": {"tf": 1}, "scalpel.cfg.model.Link.source": {"tf": 1}, "scalpel.cfg.model.Link.target": {"tf": 1}, "scalpel.cfg.model.Link.exitcase": {"tf": 1}, "scalpel.cfg.model.Link.get_exitcase": {"tf": 1}, "scalpel.cfg.model.CFG": {"tf": 1}, "scalpel.cfg.model.CFG.__init__": {"tf": 1}, "scalpel.cfg.model.CFG.remove_comments": {"tf": 1}, "scalpel.cfg.model.CFG.get_all_blocks": {"tf": 1}, "scalpel.cfg.model.CFG.build_visual": {"tf": 1}}, "df": 25}}}}, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"scalpel.core.mnode": {"tf": 1}, "scalpel.core.mnode.get_attr_name": {"tf": 1}, "scalpel.core.mnode.ImportRelation": {"tf": 1}, "scalpel.core.mnode.ImportRelation.__init__": {"tf": 1}, "scalpel.core.mnode.MNode": {"tf": 1.4142135623730951}, "scalpel.core.mnode.MNode.__init__": {"tf": 1.4142135623730951}, "scalpel.core.mnode.MNode.rewrite": {"tf": 1.4142135623730951}, "scalpel.core.mnode.MNode.parse_vars": {"tf": 1.4142135623730951}, "scalpel.core.mnode.MNode.gen_import_relations": {"tf": 1.4142135623730951}, "scalpel.core.mnode.MNode.parse_func_calls": {"tf": 1.4142135623730951}, "scalpel.core.mnode.MNode.gen_ast": {"tf": 1.4142135623730951}, "scalpel.core.mnode.MNode.parse_func_defs": {"tf": 1.4142135623730951}, "scalpel.core.mnode.MNode.parse_import_stmts": {"tf": 1.4142135623730951}, "scalpel.core.mnode.MNode.retrieve_meta": {"tf": 1.4142135623730951}, "scalpel.core.mnode.MNode.gen_cfg": {"tf": 1.4142135623730951}, "scalpel.core.mnode.MNode.make_unit_walker": {"tf": 1.4142135623730951}}, "df": 16}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"scalpel.SSA.const": {"tf": 1}, "scalpel.SSA.const.parse_val": {"tf": 1}, "scalpel.SSA.const.SSA": {"tf": 1}, "scalpel.SSA.const.SSA.__init__": {"tf": 1}, "scalpel.SSA.const.SSA.get_attribute_stmts": {"tf": 1}, "scalpel.SSA.const.SSA.get_identifiers": {"tf": 1}, "scalpel.SSA.const.SSA.compute_SSA": {"tf": 1}, "scalpel.SSA.const.SSA.get_stmt_idents_ctx": {"tf": 1}, "scalpel.SSA.const.SSA.to_json": {"tf": 1}, "scalpel.SSA.const.SSA.print_block": {"tf": 1}, "scalpel.SSA.const.SSA.compute_idom": {"tf": 1}, "scalpel.SSA.const.SSA.compute_DF": {"tf": 1}}, "df": 12}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "a": {"docs": {"scalpel.SSA.const.SSA.compute_SSA": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"scalpel.SSA.const.SSA.compute_idom": {"tf": 1}, "scalpel.SSA.ssa.SSA.compute_idom": {"tf": 1}}, "df": 2}}}}, "d": {"docs": {}, "df": 0, "f": {"docs": {"scalpel.SSA.const.SSA.compute_DF": {"tf": 1}}, "df": 1}, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"scalpel.SSA.ssa.SSA.compute_dom_old": {"tf": 1}}, "df": 1}}}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {"scalpel.SSA.ssa.SSA.compute_undefined_names": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"scalpel.core.vars_visitor.VarsVisitor.comprehension": {"tf": 1}}, "df": 1}}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {"scalpel.core": {"tf": 1}, "scalpel.core.class_visitor": {"tf": 1}, "scalpel.core.class_visitor.get_keywords": {"tf": 1}, "scalpel.core.class_visitor.ClassVisitor": {"tf": 1}, "scalpel.core.class_visitor.ClassVisitor.__init__": {"tf": 1}, "scalpel.core.class_visitor.ClassVisitor.visit_FunctionDef": {"tf": 1}, "scalpel.core.fun_def_visitor": {"tf": 1}, "scalpel.core.fun_def_visitor.FunDefVisitor": {"tf": 1}, "scalpel.core.fun_def_visitor.FunDefVisitor.__init__": {"tf": 1}, "scalpel.core.fun_def_visitor.FunDefVisitor.visit": {"tf": 1}, "scalpel.core.fun_def_visitor.FunDefVisitor.visit_Args": {"tf": 1}, "scalpel.core.func_call_visitor": {"tf": 1}, "scalpel.core.func_call_visitor.is_py38_or_higher": {"tf": 1}, "scalpel.core.func_call_visitor.CallTransformer": {"tf": 1}, "scalpel.core.func_call_visitor.CallTransformer.__init__": {"tf": 1}, "scalpel.core.func_call_visitor.CallTransformer.visit_Attribute": {"tf": 1}, "scalpel.core.func_call_visitor.CallTransformer.param2str": {"tf": 1}, "scalpel.core.func_call_visitor.CallTransformer.visit_Call": {"tf": 1}, "scalpel.core.func_call_visitor.FuncCallVisitor": {"tf": 1}, "scalpel.core.func_call_visitor.FuncCallVisitor.__init__": {"tf": 1}, "scalpel.core.func_call_visitor.FuncCallVisitor.clear": {"tf": 1}, "scalpel.core.func_call_visitor.FuncCallVisitor.name": {"tf": 1}, "scalpel.core.func_call_visitor.FuncCallVisitor.visit_Name": {"tf": 1}, "scalpel.core.func_call_visitor.FuncCallVisitor.visit_Attribute": {"tf": 1}, "scalpel.core.func_call_visitor.FuncCallVisitor.visit_Call": {"tf": 1}, "scalpel.core.func_call_visitor.get_args": {"tf": 1}, "scalpel.core.func_call_visitor.get_call_type": {"tf": 1}, "scalpel.core.func_call_visitor.get_func_calls": {"tf": 1}, "scalpel.core.kw_visitor": {"tf": 1}, "scalpel.core.kw_visitor.KWVisitor": {"tf": 1}, "scalpel.core.kw_visitor.KWVisitor.__init__": {"tf": 1}, "scalpel.core.kw_visitor.KWVisitor.visit_keyword": {"tf": 1}, "scalpel.core.mnode": {"tf": 1}, "scalpel.core.mnode.get_attr_name": {"tf": 1}, "scalpel.core.mnode.ImportRelation": {"tf": 1}, "scalpel.core.mnode.ImportRelation.__init__": {"tf": 1}, "scalpel.core.mnode.MNode": {"tf": 1}, "scalpel.core.mnode.MNode.__init__": {"tf": 1}, "scalpel.core.mnode.MNode.rewrite": {"tf": 1}, "scalpel.core.mnode.MNode.parse_vars": {"tf": 1}, "scalpel.core.mnode.MNode.gen_import_relations": {"tf": 1}, "scalpel.core.mnode.MNode.parse_func_calls": {"tf": 1}, "scalpel.core.mnode.MNode.gen_ast": {"tf": 1}, "scalpel.core.mnode.MNode.parse_func_defs": {"tf": 1}, "scalpel.core.mnode.MNode.parse_import_stmts": {"tf": 1}, "scalpel.core.mnode.MNode.retrieve_meta": {"tf": 1}, "scalpel.core.mnode.MNode.gen_cfg": {"tf": 1}, "scalpel.core.mnode.MNode.make_unit_walker": {"tf": 1}, "scalpel.core.source_visitor": {"tf": 1}, "scalpel.core.source_visitor.get_keywords": {"tf": 1}, "scalpel.core.source_visitor.SourceVisitor": {"tf": 1}, "scalpel.core.source_visitor.SourceVisitor.__init__": {"tf": 1}, "scalpel.core.source_visitor.SourceVisitor.visit_FunctionDef": {"tf": 1}, "scalpel.core.source_visitor.SourceVisitor.visit_ClassDef": {"tf": 1}, "scalpel.core.util": {"tf": 1}, "scalpel.core.util.iter_fields": {"tf": 1}, "scalpel.core.util.iter_child_nodes": {"tf": 1}, "scalpel.core.util.iter_stmt_children": {"tf": 1}, "scalpel.core.util.find_local_modules": {"tf": 1}, "scalpel.core.util.get_path_by_extension": {"tf": 1}, "scalpel.core.util.Unit": {"tf": 1}, "scalpel.core.util.Unit.__init__": {"tf": 1}, "scalpel.core.util.Unit.search_for_pos": {"tf": 1}, "scalpel.core.util.Unit.insert_stmt_before": {"tf": 1}, "scalpel.core.util.Unit.insert_stmts_before": {"tf": 1}, "scalpel.core.util.Unit.insert_after": {"tf": 1}, "scalpel.core.util.Unit.remove": {"tf": 1}, "scalpel.core.util.Unit.replace": {"tf": 1}, "scalpel.core.util.UnitWalker": {"tf": 1}, "scalpel.core.util.StmtIterator": {"tf": 1}, "scalpel.core.util.StmtIterator.__init__": {"tf": 1}, "scalpel.core.util.StmtIterator.insert_before": {"tf": 1}, "scalpel.core.util.StmtIterator.insert_after": {"tf": 1}, "scalpel.core.util.StmtIterator.remove": {"tf": 1}, "scalpel.core.util.StmtIterator.replace": {"tf": 1}, "scalpel.core.vars_visitor": {"tf": 1}, "scalpel.core.vars_visitor.VarsVisitor": {"tf": 1}, "scalpel.core.vars_visitor.VarsVisitor.__init__": {"tf": 1}, "scalpel.core.vars_visitor.VarsVisitor.visit_Name": {"tf": 1}, "scalpel.core.vars_visitor.VarsVisitor.visit_BoolOp": {"tf": 1}, "scalpel.core.vars_visitor.VarsVisitor.visit_BinOp": {"tf": 1}, "scalpel.core.vars_visitor.VarsVisitor.visit_UnaryOp": {"tf": 1}, "scalpel.core.vars_visitor.VarsVisitor.visit_Lambda": {"tf": 1}, "scalpel.core.vars_visitor.VarsVisitor.visit_IfExp": {"tf": 1}, "scalpel.core.vars_visitor.VarsVisitor.visit_Dict": {"tf": 1}, "scalpel.core.vars_visitor.VarsVisitor.visit_Set": {"tf": 1}, "scalpel.core.vars_visitor.VarsVisitor.comprehension": {"tf": 1}, "scalpel.core.vars_visitor.VarsVisitor.visit_ListComp": {"tf": 1}, "scalpel.core.vars_visitor.VarsVisitor.visit_SetComp": {"tf": 1}, "scalpel.core.vars_visitor.VarsVisitor.visit_DictComp": {"tf": 1}, "scalpel.core.vars_visitor.VarsVisitor.visit_GeneratorComp": {"tf": 1}, "scalpel.core.vars_visitor.VarsVisitor.visit_Yield": {"tf": 1}, "scalpel.core.vars_visitor.VarsVisitor.visit_YieldFrom": {"tf": 1}, "scalpel.core.vars_visitor.VarsVisitor.visit_Compare": {"tf": 1}, "scalpel.core.vars_visitor.VarsVisitor.visit_Call": {"tf": 1}, "scalpel.core.vars_visitor.VarsVisitor.visit_keyword": {"tf": 1}, "scalpel.core.vars_visitor.VarsVisitor.visit_Attribute": {"tf": 1}, "scalpel.core.vars_visitor.VarsVisitor.get_attr_name": {"tf": 1}, "scalpel.core.vars_visitor.VarsVisitor.slicev": {"tf": 1}, "scalpel.core.vars_visitor.VarsVisitor.visit_Subscript": {"tf": 1}, "scalpel.core.vars_visitor.VarsVisitor.visit_Starred": {"tf": 1}, "scalpel.core.vars_visitor.VarsVisitor.visit_List": {"tf": 1}, "scalpel.core.vars_visitor.VarsVisitor.visit_Tuple": {"tf": 1}, "scalpel.core.vars_visitor.VarsVisitor.visit_FunctionDef": {"tf": 1}, "scalpel.core.vars_visitor.VarsVisitor.visit_Assign": {"tf": 1}, "scalpel.core.vars_visitor.get_vars": {"tf": 1}}, "df": 106}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "h": {"docs": {"scalpel.call_graph": {"tf": 1}, "scalpel.call_graph.pycg": {"tf": 1}}, "df": 2}}}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {"scalpel.core.func_call_visitor.CallTransformer": {"tf": 1}, "scalpel.core.func_call_visitor.CallTransformer.__init__": {"tf": 1}, "scalpel.core.func_call_visitor.CallTransformer.visit_Attribute": {"tf": 1}, "scalpel.core.func_call_visitor.CallTransformer.param2str": {"tf": 1}, "scalpel.core.func_call_visitor.CallTransformer.visit_Call": {"tf": 1}}, "df": 5}}}}}}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {"scalpel.typeinfer.classes.ScalpelVariable.called_methods": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "f": {"docs": {}, "df": 0, "g": {"docs": {"scalpel.cfg": {"tf": 1}, "scalpel.cfg.builder": {"tf": 1}, "scalpel.cfg.builder.is_py38_or_higher": {"tf": 1}, "scalpel.cfg.builder.invert": {"tf": 1}, "scalpel.cfg.builder.merge_exitcases": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.__init__": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.build": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.build_from_src": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.build_from_file": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.new_block": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.add_statement": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.add_exit": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.new_loopguard": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.new_functionCFG": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.new_ClassCFG": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.clean_cfg": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.goto_new_block": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.visit_Expr": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.visit_Call": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.visit_Assign": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.visit_AnnAssign": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.visit_AugAssign": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.visit_Global": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.visit_Nonlocal": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.visit_Pass": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.visit_Delete": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.visit_Raise": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.visit_Assert": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.visit_Try": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.visit_If": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.visit_While": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.visit_For": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.visit_AsyncFor": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.visit_Break": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.visit_Continue": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.visit_Import": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.visit_ImportFrom": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.visit_FunctionDef": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.visit_AsyncFunctionDef": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.visit_ClassDef": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.visit_Await": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.visit_Return": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.visit_Yield": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.visit_With": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.visit_AsyncWith": {"tf": 1}, "scalpel.cfg.model": {"tf": 1}, "scalpel.cfg.model.Block": {"tf": 1}, "scalpel.cfg.model.Block.__init__": {"tf": 1}, "scalpel.cfg.model.Block.id": {"tf": 1}, "scalpel.cfg.model.Block.statements": {"tf": 1}, "scalpel.cfg.model.Block.func_calls": {"tf": 1}, "scalpel.cfg.model.Block.predecessors": {"tf": 1}, "scalpel.cfg.model.Block.exits": {"tf": 1}, "scalpel.cfg.model.Block.at": {"tf": 1}, "scalpel.cfg.model.Block.is_empty": {"tf": 1}, "scalpel.cfg.model.Block.strip_comment": {"tf": 1}, "scalpel.cfg.model.Block.get_source": {"tf": 1}, "scalpel.cfg.model.Block.get_calls": {"tf": 1}, "scalpel.cfg.model.Block.ssa_form": {"tf": 1}, "scalpel.cfg.model.Link": {"tf": 1}, "scalpel.cfg.model.Link.__init__": {"tf": 1}, "scalpel.cfg.model.Link.source": {"tf": 1}, "scalpel.cfg.model.Link.target": {"tf": 1}, "scalpel.cfg.model.Link.exitcase": {"tf": 1}, "scalpel.cfg.model.Link.get_exitcase": {"tf": 1}, "scalpel.cfg.model.CFG": {"tf": 1.4142135623730951}, "scalpel.cfg.model.CFG.__init__": {"tf": 1.4142135623730951}, "scalpel.cfg.model.CFG.remove_comments": {"tf": 1.4142135623730951}, "scalpel.cfg.model.CFG.get_all_blocks": {"tf": 1.4142135623730951}, "scalpel.cfg.model.CFG.build_visual": {"tf": 1.4142135623730951}}, "df": 71, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"scalpel.cfg.builder.CFGBuilder": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.__init__": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.build": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.build_from_src": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.build_from_file": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.new_block": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.add_statement": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.add_exit": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.new_loopguard": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.new_functionCFG": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.new_ClassCFG": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.clean_cfg": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.goto_new_block": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.visit_Expr": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.visit_Call": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.visit_Assign": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.visit_AnnAssign": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.visit_AugAssign": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.visit_Global": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.visit_Nonlocal": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.visit_Pass": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.visit_Delete": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.visit_Raise": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.visit_Assert": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.visit_Try": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.visit_If": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.visit_While": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.visit_For": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.visit_AsyncFor": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.visit_Break": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.visit_Continue": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.visit_Import": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.visit_ImportFrom": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.visit_FunctionDef": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.visit_AsyncFunctionDef": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.visit_ClassDef": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.visit_Await": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.visit_Return": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.visit_Yield": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.visit_With": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.visit_AsyncWith": {"tf": 1}}, "df": 41}}}}}}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "g": {"docs": {"scalpel.cfg.builder.CFGBuilder.clean_cfg": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {"scalpel.core.func_call_visitor.FuncCallVisitor.clear": {"tf": 1}, "scalpel.typeinfer.analysers.ReturnStmtVisitor.clear": {"tf": 1}, "scalpel.typeinfer.utilities.FuncCallVisitor.clear": {"tf": 1}, "scalpel.typeinfer.visitors.FuncCallVisitor.clear": {"tf": 1}}, "df": 4, "_": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"scalpel.typeinfer.analysers.ReturnStmtVisitor.clear_all": {"tf": 1}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"scalpel.typeinfer.classes": {"tf": 1}, "scalpel.typeinfer.classes.TypeWarning": {"tf": 1}, "scalpel.typeinfer.classes.TypeWarning.__init__": {"tf": 1}, "scalpel.typeinfer.classes.TypeWarning.print_warning": {"tf": 1}, "scalpel.typeinfer.classes.ScalpelVariable": {"tf": 1}, "scalpel.typeinfer.classes.ScalpelVariable.__init__": {"tf": 1}, "scalpel.typeinfer.classes.ScalpelVariable.type": {"tf": 1}, "scalpel.typeinfer.classes.ScalpelVariable.in_conditional": {"tf": 1}, "scalpel.typeinfer.classes.ScalpelVariable.in_equality": {"tf": 1}, "scalpel.typeinfer.classes.ScalpelVariable.is_callable": {"tf": 1}, "scalpel.typeinfer.classes.ScalpelVariable.called_methods": {"tf": 1}, "scalpel.typeinfer.classes.ScalpelVariable.binary_operation": {"tf": 1}, "scalpel.typeinfer.classes.ScalpelVariable.is_arg": {"tf": 1}, "scalpel.typeinfer.classes.ScalpelFunction": {"tf": 1}, "scalpel.typeinfer.classes.ScalpelFunction.__init__": {"tf": 1}, "scalpel.typeinfer.classes.ScalpelFunction.return_type": {"tf": 1}, "scalpel.typeinfer.classes.ScalpelClass": {"tf": 1}, "scalpel.typeinfer.classes.ScalpelClass.__init__": {"tf": 1}, "scalpel.typeinfer.classes.ScalpelClass.inherits": {"tf": 1}, "scalpel.typeinfer.classes.BinaryOperation": {"tf": 1}, "scalpel.typeinfer.classes.BinaryOperation.__init__": {"tf": 1}, "scalpel.typeinfer.classes.BinaryOperation.shared_type": {"tf": 1}, "scalpel.typeinfer.classes.ProcessedFile": {"tf": 1}, "scalpel.typeinfer.classes.ProcessedFile.__init__": {"tf": 1}}, "df": 24, "_": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"scalpel.core.class_visitor": {"tf": 1}, "scalpel.core.class_visitor.get_keywords": {"tf": 1}, "scalpel.core.class_visitor.ClassVisitor": {"tf": 1}, "scalpel.core.class_visitor.ClassVisitor.__init__": {"tf": 1}, "scalpel.core.class_visitor.ClassVisitor.visit_FunctionDef": {"tf": 1}}, "df": 5}}}}}}}}, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"scalpel.core.class_visitor.ClassVisitor": {"tf": 1}, "scalpel.core.class_visitor.ClassVisitor.__init__": {"tf": 1}, "scalpel.core.class_visitor.ClassVisitor.visit_FunctionDef": {"tf": 1}}, "df": 3}}}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {"scalpel.typeinfer.analysers.ClassDefinitionMap": {"tf": 1}, "scalpel.typeinfer.analysers.ClassDefinitionMap.__init__": {"tf": 1}, "scalpel.typeinfer.analysers.ClassDefinitionMap.map": {"tf": 1}}, "df": 3}}}}}}}}}}}}}, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"scalpel.typeinfer.analysers.ClassSplitVisitor": {"tf": 1}, "scalpel.typeinfer.analysers.ClassSplitVisitor.__init__": {"tf": 1}, "scalpel.typeinfer.analysers.ClassSplitVisitor.visit_FunctionDef": {"tf": 1}, "scalpel.typeinfer.analysers.ClassSplitVisitor.visit_ClassDef": {"tf": 1}}, "df": 4}}}}}}}}}}}}}}}}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {"scalpel.typeinfer.analysers.BinaryOperatorMap.chain_types": {"tf": 1}}, "df": 1}}}}}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {"scalpel.typeinfer.utilities.check_consistent_list_types": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}}}}}}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "v": {"docs": {"scalpel.SSA.const.parse_val": {"tf": 1}, "scalpel.SSA.ssa.parse_val": {"tf": 1}}, "df": 2, "a": {"docs": {}, "df": 0, "r": {"docs": {"scalpel.core.mnode.MNode.parse_vars": {"tf": 1}}, "df": 1}}}, "f": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"scalpel.core.mnode.MNode.parse_func_calls": {"tf": 1}}, "df": 1}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "f": {"docs": {"scalpel.core.mnode.MNode.parse_func_defs": {"tf": 1}}, "df": 1}}}}}}}}, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"scalpel.import_graph.import_graph.ImportGraph.parse_import": {"tf": 1}}, "df": 1, "_": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "t": {"docs": {"scalpel.core.mnode.MNode.parse_import_stmts": {"tf": 1}}, "df": 1}}}}}}}}}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {"scalpel.typeinfer.utilities.parse_module": {"tf": 1}}, "df": 1}}}}}}}}, "a": {"docs": {}, "df": 0, "m": {"2": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {"scalpel.core.func_call_visitor.CallTransformer.param2str": {"tf": 1}}, "df": 1}}}}, "docs": {}, "df": 0}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"scalpel.SSA.const.SSA.print_block": {"tf": 1}, "scalpel.SSA.ssa.SSA.print_block": {"tf": 1}}, "df": 2}}}}}, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {"scalpel.typeinfer.classes.TypeWarning.print_warning": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {"scalpel.typeinfer.typeinfer.TypeInference.print_types": {"tf": 1}}, "df": 1}}}}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"scalpel.cfg.model.Block.predecessors": {"tf": 1}}, "df": 1}}}}}}}}}, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {"scalpel.typeinfer.classes.ProcessedFile": {"tf": 1}, "scalpel.typeinfer.classes.ProcessedFile.__init__": {"tf": 1}}, "df": 2}}}}}, "_": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"scalpel.typeinfer.typeinfer.process_code_with_heuristics": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {"scalpel.typeinfer.typeinfer.TypeInference.process_file": {"tf": 1}}, "df": 1}}}}}}}}}}, "y": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "g": {"docs": {"scalpel.call_graph.pycg": {"tf": 1}}, "df": 1}}}}, "_": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "_": {"docs": {"scalpel.SSA.const.SSA.__init__": {"tf": 1}, "scalpel.SSA.ssa.SSA.__init__": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.__init__": {"tf": 1}, "scalpel.cfg.model.Block.__init__": {"tf": 1}, "scalpel.cfg.model.Link.__init__": {"tf": 1}, "scalpel.cfg.model.CFG.__init__": {"tf": 1}, "scalpel.core.class_visitor.ClassVisitor.__init__": {"tf": 1}, "scalpel.core.fun_def_visitor.FunDefVisitor.__init__": {"tf": 1}, "scalpel.core.func_call_visitor.CallTransformer.__init__": {"tf": 1}, "scalpel.core.func_call_visitor.FuncCallVisitor.__init__": {"tf": 1}, "scalpel.core.kw_visitor.KWVisitor.__init__": {"tf": 1}, "scalpel.core.mnode.ImportRelation.__init__": {"tf": 1}, "scalpel.core.mnode.MNode.__init__": {"tf": 1}, "scalpel.core.source_visitor.SourceVisitor.__init__": {"tf": 1}, "scalpel.core.util.Unit.__init__": {"tf": 1}, "scalpel.core.util.StmtIterator.__init__": {"tf": 1}, "scalpel.core.vars_visitor.VarsVisitor.__init__": {"tf": 1}, "scalpel.import_graph.import_graph.Tree.__init__": {"tf": 1}, "scalpel.import_graph.import_graph.ImportGraph.__init__": {"tf": 1}, "scalpel.typeinfer.analysers.BinaryOperatorMap.__init__": {"tf": 1}, "scalpel.typeinfer.analysers.ImportTypeMap.__init__": {"tf": 1}, "scalpel.typeinfer.analysers.ClassDefinitionMap.__init__": {"tf": 1}, "scalpel.typeinfer.analysers.FunctionDefinitionMap.__init__": {"tf": 1}, "scalpel.typeinfer.analysers.VariableAssignmentMap.__init__": {"tf": 1}, "scalpel.typeinfer.analysers.BinaryOperationMap.__init__": {"tf": 1}, "scalpel.typeinfer.analysers.HeuristicParser.__init__": {"tf": 1}, "scalpel.typeinfer.analysers.SourceSplitVisitor.__init__": {"tf": 1}, "scalpel.typeinfer.analysers.ClassSplitVisitor.__init__": {"tf": 1}, "scalpel.typeinfer.analysers.ReturnStmtVisitor.__init__": {"tf": 1}, "scalpel.typeinfer.analysers.Heuristics.__init__": {"tf": 1}, "scalpel.typeinfer.classes.TypeWarning.__init__": {"tf": 1}, "scalpel.typeinfer.classes.ScalpelVariable.__init__": {"tf": 1}, "scalpel.typeinfer.classes.ScalpelFunction.__init__": {"tf": 1}, "scalpel.typeinfer.classes.ScalpelClass.__init__": {"tf": 1}, "scalpel.typeinfer.classes.BinaryOperation.__init__": {"tf": 1}, "scalpel.typeinfer.classes.ProcessedFile.__init__": {"tf": 1}, "scalpel.typeinfer.typeinfer.TypeInference.__init__": {"tf": 1}, "scalpel.typeinfer.utilities.TypeInferCallTransformer.__init__": {"tf": 1}, "scalpel.typeinfer.utilities.FuncCallVisitor.__init__": {"tf": 1}, "scalpel.typeinfer.visitors.FuncCallVisitor.__init__": {"tf": 1}, "scalpel.typeinfer.visitors.TypeInferCallTransformer.__init__": {"tf": 1}}, "df": 41}}}}}}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "t": {"docs": {"scalpel.SSA.const.SSA.get_attribute_stmts": {"tf": 1}, "scalpel.SSA.ssa.SSA.get_attribute_stmts": {"tf": 1}}, "df": 2}}}}}}}}}}, "_": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {"scalpel.core.mnode.get_attr_name": {"tf": 1}, "scalpel.core.vars_visitor.VarsVisitor.get_attr_name": {"tf": 1}, "scalpel.typeinfer.utilities.get_attr_name": {"tf": 1}}, "df": 3}}}}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"scalpel.cfg.model.CFG.get_all_blocks": {"tf": 1}}, "df": 1}}}}}}}}, "r": {"docs": {}, "df": 0, "g": {"docs": {"scalpel.core.func_call_visitor.get_args": {"tf": 1}, "scalpel.typeinfer.visitors.get_args": {"tf": 1}}, "df": 2}}, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {"scalpel.typeinfer.utilities.get_api_ref_id": {"tf": 1}}, "df": 1}}}}}}}}}}, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {"scalpel.SSA.const.SSA.get_identifiers": {"tf": 1}, "scalpel.SSA.ssa.SSA.get_identifiers": {"tf": 1}}, "df": 2}}}}}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {"scalpel.typeinfer.analysers.ImportTypeMap.get_imported_type": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "x": {"docs": {"scalpel.SSA.const.SSA.get_stmt_idents_ctx": {"tf": 1}, "scalpel.SSA.ssa.SSA.get_stmt_idents_ctx": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {"scalpel.cfg.model.Block.get_source": {"tf": 1}}, "df": 1}}}}}, "g": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"scalpel.SSA.ssa.SSA.get_global_live_vars": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"scalpel.cfg.model.Block.get_calls": {"tf": 1}}, "df": 1, "l": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {"scalpel.core.func_call_visitor.get_call_type": {"tf": 1}, "scalpel.typeinfer.visitors.get_call_type": {"tf": 1}}, "df": 2}}}}}}}}, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {"scalpel.cfg.model.Link.get_exitcase": {"tf": 1}}, "df": 1}}}}}}}, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"scalpel.core.class_visitor.get_keywords": {"tf": 1}, "scalpel.core.source_visitor.get_keywords": {"tf": 1}}, "df": 2}}}}}}}, "f": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"scalpel.core.func_call_visitor.get_func_calls": {"tf": 1}}, "df": 1, "l": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {"scalpel.typeinfer.utilities.get_func_calls_type": {"tf": 1}, "scalpel.typeinfer.visitors.get_func_calls_type": {"tf": 1}}, "df": 2}}}}}}}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"scalpel.typeinfer.utilities.get_function_comment": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"scalpel.core.util.get_path_by_extension": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"scalpel.core.vars_visitor.get_vars": {"tf": 1}}, "df": 1}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {"scalpel.import_graph.import_graph.ImportGraph.get_leaf_nodes": {"tf": 1}}, "df": 1}}}}}}}}, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "v": {"docs": {"scalpel.typeinfer.analysers.Heuristics.get_bin_op_involved": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {"scalpel.typeinfer.utilities.get_built_in_types": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {"scalpel.typeinfer.typeinfer.TypeInference.get_types": {"tf": 1}, "scalpel.typeinfer.utilities.get_type": {"tf": 1}}, "df": 2}}}}}, "n": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"scalpel.core.mnode.MNode.gen_import_relations": {"tf": 1}}, "df": 1}}}}}}}}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"scalpel.core.mnode.MNode.gen_ast": {"tf": 1}}, "df": 1}}}, "c": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "g": {"docs": {"scalpel.core.mnode.MNode.gen_cfg": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"scalpel.typeinfer.utilities.generate_ast": {"tf": 1}}, "df": 1}}}}}}}}}}}, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"scalpel.cfg.builder.CFGBuilder.goto_new_block": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "_": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {"scalpel.import_graph.import_graph.ImportGraph.go_to_that_node": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "j": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"scalpel.SSA.const.SSA.to_json": {"tf": 1}, "scalpel.SSA.ssa.SSA.to_json": {"tf": 1}}, "df": 2}}}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"scalpel.cfg.model.Link.target": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {"scalpel.import_graph.import_graph.Tree": {"tf": 1}, "scalpel.import_graph.import_graph.Tree.__init__": {"tf": 1}}, "df": 2}}}, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"scalpel.typeinfer.classes.ScalpelVariable.type": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {"scalpel.typeinfer": {"tf": 1}, "scalpel.typeinfer.analysers": {"tf": 1}, "scalpel.typeinfer.analysers.BinaryOperatorMap": {"tf": 1}, "scalpel.typeinfer.analysers.BinaryOperatorMap.__init__": {"tf": 1}, "scalpel.typeinfer.analysers.BinaryOperatorMap.append": {"tf": 1}, "scalpel.typeinfer.analysers.BinaryOperatorMap.chain_types": {"tf": 1}, "scalpel.typeinfer.analysers.ImportTypeMap": {"tf": 1}, "scalpel.typeinfer.analysers.ImportTypeMap.__init__": {"tf": 1}, "scalpel.typeinfer.analysers.ImportTypeMap.map": {"tf": 1}, "scalpel.typeinfer.analysers.ImportTypeMap.get_imported_type": {"tf": 1}, "scalpel.typeinfer.analysers.ClassDefinitionMap": {"tf": 1}, "scalpel.typeinfer.analysers.ClassDefinitionMap.__init__": {"tf": 1}, "scalpel.typeinfer.analysers.ClassDefinitionMap.map": {"tf": 1}, "scalpel.typeinfer.analysers.FunctionDefinitionMap": {"tf": 1}, "scalpel.typeinfer.analysers.FunctionDefinitionMap.__init__": {"tf": 1}, "scalpel.typeinfer.analysers.FunctionDefinitionMap.map": {"tf": 1}, "scalpel.typeinfer.analysers.VariableAssignmentMap": {"tf": 1}, "scalpel.typeinfer.analysers.VariableAssignmentMap.__init__": {"tf": 1}, "scalpel.typeinfer.analysers.VariableAssignmentMap.map": {"tf": 1}, "scalpel.typeinfer.analysers.BinaryOperationMap": {"tf": 1}, "scalpel.typeinfer.analysers.BinaryOperationMap.__init__": {"tf": 1}, "scalpel.typeinfer.analysers.BinaryOperationMap.map": {"tf": 1}, "scalpel.typeinfer.analysers.HeuristicParser": {"tf": 1}, "scalpel.typeinfer.analysers.HeuristicParser.__init__": {"tf": 1}, "scalpel.typeinfer.analysers.HeuristicParser.visit_FunctionDef": {"tf": 1}, "scalpel.typeinfer.analysers.HeuristicParser.visit_Import": {"tf": 1}, "scalpel.typeinfer.analysers.HeuristicParser.visit_ImportFrom": {"tf": 1}, "scalpel.typeinfer.analysers.HeuristicParser.visit_While": {"tf": 1}, "scalpel.typeinfer.analysers.HeuristicParser.visit_Compare": {"tf": 1}, "scalpel.typeinfer.analysers.HeuristicParser.visit_BinOp": {"tf": 1}, "scalpel.typeinfer.analysers.HeuristicParser.visit_IfExp": {"tf": 1}, "scalpel.typeinfer.analysers.HeuristicParser.visit_If": {"tf": 1}, "scalpel.typeinfer.analysers.SourceSplitVisitor": {"tf": 1}, "scalpel.typeinfer.analysers.SourceSplitVisitor.__init__": {"tf": 1}, "scalpel.typeinfer.analysers.SourceSplitVisitor.visit_Assign": {"tf": 1}, "scalpel.typeinfer.analysers.SourceSplitVisitor.visit_FunctionDef": {"tf": 1}, "scalpel.typeinfer.analysers.ClassSplitVisitor": {"tf": 1}, "scalpel.typeinfer.analysers.ClassSplitVisitor.__init__": {"tf": 1}, "scalpel.typeinfer.analysers.ClassSplitVisitor.visit_FunctionDef": {"tf": 1}, "scalpel.typeinfer.analysers.ClassSplitVisitor.visit_ClassDef": {"tf": 1}, "scalpel.typeinfer.analysers.ReturnStmtVisitor": {"tf": 1}, "scalpel.typeinfer.analysers.ReturnStmtVisitor.__init__": {"tf": 1}, "scalpel.typeinfer.analysers.ReturnStmtVisitor.import_assign_records": {"tf": 1}, "scalpel.typeinfer.analysers.ReturnStmtVisitor.import_class_assign_records": {"tf": 1}, "scalpel.typeinfer.analysers.ReturnStmtVisitor.import_assignments": {"tf": 1}, "scalpel.typeinfer.analysers.ReturnStmtVisitor.visit_FunctionDef": {"tf": 1}, "scalpel.typeinfer.analysers.ReturnStmtVisitor.visit_Yield": {"tf": 1}, "scalpel.typeinfer.analysers.ReturnStmtVisitor.infer_actual_return_value": {"tf": 1}, "scalpel.typeinfer.analysers.ReturnStmtVisitor.type_infer_CFG": {"tf": 1}, "scalpel.typeinfer.analysers.ReturnStmtVisitor.query_assign_records": {"tf": 1}, "scalpel.typeinfer.analysers.ReturnStmtVisitor.type_infer": {"tf": 1}, "scalpel.typeinfer.analysers.ReturnStmtVisitor.clear": {"tf": 1}, "scalpel.typeinfer.analysers.ReturnStmtVisitor.clear_all": {"tf": 1}, "scalpel.typeinfer.analysers.Heuristics": {"tf": 1}, "scalpel.typeinfer.analysers.Heuristics.__init__": {"tf": 1}, "scalpel.typeinfer.analysers.Heuristics.heuristic_two": {"tf": 1}, "scalpel.typeinfer.analysers.Heuristics.heuristic_five": {"tf": 1}, "scalpel.typeinfer.analysers.Heuristics.heuristic_five_return": {"tf": 1}, "scalpel.typeinfer.analysers.Heuristics.heuristic_six": {"tf": 1}, "scalpel.typeinfer.analysers.Heuristics.heuristic_seven": {"tf": 1}, "scalpel.typeinfer.analysers.Heuristics.heuristic_eight": {"tf": 1}, "scalpel.typeinfer.analysers.Heuristics.heuristic_nine": {"tf": 1}, "scalpel.typeinfer.analysers.Heuristics.heuristic_eleven": {"tf": 1}, "scalpel.typeinfer.analysers.Heuristics.heuristic_twelve": {"tf": 1}, "scalpel.typeinfer.analysers.Heuristics.get_bin_op_involved": {"tf": 1}, "scalpel.typeinfer.analysers.Heuristics.in_bin_op": {"tf": 1}, "scalpel.typeinfer.classes": {"tf": 1}, "scalpel.typeinfer.classes.TypeWarning": {"tf": 1}, "scalpel.typeinfer.classes.TypeWarning.__init__": {"tf": 1}, "scalpel.typeinfer.classes.TypeWarning.print_warning": {"tf": 1}, "scalpel.typeinfer.classes.ScalpelVariable": {"tf": 1}, "scalpel.typeinfer.classes.ScalpelVariable.__init__": {"tf": 1}, "scalpel.typeinfer.classes.ScalpelVariable.type": {"tf": 1}, "scalpel.typeinfer.classes.ScalpelVariable.in_conditional": {"tf": 1}, "scalpel.typeinfer.classes.ScalpelVariable.in_equality": {"tf": 1}, "scalpel.typeinfer.classes.ScalpelVariable.is_callable": {"tf": 1}, "scalpel.typeinfer.classes.ScalpelVariable.called_methods": {"tf": 1}, "scalpel.typeinfer.classes.ScalpelVariable.binary_operation": {"tf": 1}, "scalpel.typeinfer.classes.ScalpelVariable.is_arg": {"tf": 1}, "scalpel.typeinfer.classes.ScalpelFunction": {"tf": 1}, "scalpel.typeinfer.classes.ScalpelFunction.__init__": {"tf": 1}, "scalpel.typeinfer.classes.ScalpelFunction.return_type": {"tf": 1}, "scalpel.typeinfer.classes.ScalpelClass": {"tf": 1}, "scalpel.typeinfer.classes.ScalpelClass.__init__": {"tf": 1}, "scalpel.typeinfer.classes.ScalpelClass.inherits": {"tf": 1}, "scalpel.typeinfer.classes.BinaryOperation": {"tf": 1}, "scalpel.typeinfer.classes.BinaryOperation.__init__": {"tf": 1}, "scalpel.typeinfer.classes.BinaryOperation.shared_type": {"tf": 1}, "scalpel.typeinfer.classes.ProcessedFile": {"tf": 1}, "scalpel.typeinfer.classes.ProcessedFile.__init__": {"tf": 1}, "scalpel.typeinfer.typeinfer": {"tf": 1.4142135623730951}, "scalpel.typeinfer.typeinfer.process_code_with_heuristics": {"tf": 1.4142135623730951}, "scalpel.typeinfer.typeinfer.TypeInference": {"tf": 1.4142135623730951}, "scalpel.typeinfer.typeinfer.TypeInference.__init__": {"tf": 1.4142135623730951}, "scalpel.typeinfer.typeinfer.TypeInference.infer_types": {"tf": 1.4142135623730951}, "scalpel.typeinfer.typeinfer.TypeInference.get_types": {"tf": 1.4142135623730951}, "scalpel.typeinfer.typeinfer.TypeInference.process_file": {"tf": 1.4142135623730951}, "scalpel.typeinfer.typeinfer.TypeInference.print_types": {"tf": 1.4142135623730951}, "scalpel.typeinfer.utilities": {"tf": 1}, "scalpel.typeinfer.utilities.get_func_calls_type": {"tf": 1}, "scalpel.typeinfer.utilities.TypeInferCallTransformer": {"tf": 1}, "scalpel.typeinfer.utilities.TypeInferCallTransformer.__init__": {"tf": 1}, "scalpel.typeinfer.utilities.TypeInferCallTransformer.visit_Attribute": {"tf": 1}, "scalpel.typeinfer.utilities.TypeInferCallTransformer.visit_Call": {"tf": 1}, "scalpel.typeinfer.utilities.FuncCallVisitor": {"tf": 1}, "scalpel.typeinfer.utilities.FuncCallVisitor.__init__": {"tf": 1}, "scalpel.typeinfer.utilities.FuncCallVisitor.clear": {"tf": 1}, "scalpel.typeinfer.utilities.FuncCallVisitor.name": {"tf": 1}, "scalpel.typeinfer.utilities.FuncCallVisitor.visit_Name": {"tf": 1}, "scalpel.typeinfer.utilities.FuncCallVisitor.visit_Attribute": {"tf": 1}, "scalpel.typeinfer.utilities.FuncCallVisitor.visit_Call": {"tf": 1}, "scalpel.typeinfer.utilities.get_built_in_types": {"tf": 1}, "scalpel.typeinfer.utilities.get_type": {"tf": 1}, "scalpel.typeinfer.utilities.check_consistent_list_types": {"tf": 1}, "scalpel.typeinfer.utilities.is_camel_case": {"tf": 1}, "scalpel.typeinfer.utilities.parse_module": {"tf": 1}, "scalpel.typeinfer.utilities.get_api_ref_id": {"tf": 1}, "scalpel.typeinfer.utilities.is_imported_fun": {"tf": 1}, "scalpel.typeinfer.utilities.rename_from_name": {"tf": 1}, "scalpel.typeinfer.utilities.is_valid_call_link": {"tf": 1}, "scalpel.typeinfer.utilities.generate_ast": {"tf": 1}, "scalpel.typeinfer.utilities.get_function_comment": {"tf": 1}, "scalpel.typeinfer.utilities.is_done": {"tf": 1}, "scalpel.typeinfer.utilities.find_class_by_attr": {"tf": 1}, "scalpel.typeinfer.utilities.get_attr_name": {"tf": 1}, "scalpel.typeinfer.utilities.resolve_name": {"tf": 1}, "scalpel.typeinfer.visitors": {"tf": 1}, "scalpel.typeinfer.visitors.FuncCallVisitor": {"tf": 1}, "scalpel.typeinfer.visitors.FuncCallVisitor.__init__": {"tf": 1}, "scalpel.typeinfer.visitors.FuncCallVisitor.clear": {"tf": 1}, "scalpel.typeinfer.visitors.FuncCallVisitor.name": {"tf": 1}, "scalpel.typeinfer.visitors.FuncCallVisitor.visit_Name": {"tf": 1}, "scalpel.typeinfer.visitors.FuncCallVisitor.visit_Attribute": {"tf": 1}, "scalpel.typeinfer.visitors.FuncCallVisitor.visit_Call": {"tf": 1}, "scalpel.typeinfer.visitors.TypeInferCallTransformer": {"tf": 1}, "scalpel.typeinfer.visitors.TypeInferCallTransformer.__init__": {"tf": 1}, "scalpel.typeinfer.visitors.TypeInferCallTransformer.visit_Attribute": {"tf": 1}, "scalpel.typeinfer.visitors.TypeInferCallTransformer.visit_Call": {"tf": 1}, "scalpel.typeinfer.visitors.get_args": {"tf": 1}, "scalpel.typeinfer.visitors.get_func_calls_type": {"tf": 1}, "scalpel.typeinfer.visitors.get_call_type": {"tf": 1}}, "df": 141, "e": {"docs": {}, "df": 0, "r": {"docs": {"scalpel.typeinfer.typeinfer.TypeInference": {"tf": 1}, "scalpel.typeinfer.typeinfer.TypeInference.__init__": {"tf": 1}, "scalpel.typeinfer.typeinfer.TypeInference.infer_types": {"tf": 1}, "scalpel.typeinfer.typeinfer.TypeInference.get_types": {"tf": 1}, "scalpel.typeinfer.typeinfer.TypeInference.process_file": {"tf": 1}, "scalpel.typeinfer.typeinfer.TypeInference.print_types": {"tf": 1}}, "df": 6, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {"scalpel.typeinfer.utilities.TypeInferCallTransformer": {"tf": 1}, "scalpel.typeinfer.utilities.TypeInferCallTransformer.__init__": {"tf": 1}, "scalpel.typeinfer.utilities.TypeInferCallTransformer.visit_Attribute": {"tf": 1}, "scalpel.typeinfer.utilities.TypeInferCallTransformer.visit_Call": {"tf": 1}, "scalpel.typeinfer.visitors.TypeInferCallTransformer": {"tf": 1}, "scalpel.typeinfer.visitors.TypeInferCallTransformer.__init__": {"tf": 1}, "scalpel.typeinfer.visitors.TypeInferCallTransformer.visit_Attribute": {"tf": 1}, "scalpel.typeinfer.visitors.TypeInferCallTransformer.visit_Call": {"tf": 1}}, "df": 8}}}}}}}}}}}}}}}}}}, "_": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {"scalpel.typeinfer.analysers.ReturnStmtVisitor.type_infer": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "g": {"docs": {"scalpel.typeinfer.analysers.ReturnStmtVisitor.type_infer_CFG": {"tf": 1}}, "df": 1}}}}}}}}}}, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {"scalpel.typeinfer.classes.TypeWarning": {"tf": 1}, "scalpel.typeinfer.classes.TypeWarning.__init__": {"tf": 1}, "scalpel.typeinfer.classes.TypeWarning.print_warning": {"tf": 1}}, "df": 3}}}}}}}}, "f": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {"scalpel.SSA.ssa.SSA.flatten_tuple": {"tf": 1}}, "df": 1}}}}}}}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"scalpel.cfg.model.Block.func_calls": {"tf": 1}}, "df": 1, "l": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"scalpel.core.func_call_visitor": {"tf": 1}, "scalpel.core.func_call_visitor.is_py38_or_higher": {"tf": 1}, "scalpel.core.func_call_visitor.CallTransformer": {"tf": 1}, "scalpel.core.func_call_visitor.CallTransformer.__init__": {"tf": 1}, "scalpel.core.func_call_visitor.CallTransformer.visit_Attribute": {"tf": 1}, "scalpel.core.func_call_visitor.CallTransformer.param2str": {"tf": 1}, "scalpel.core.func_call_visitor.CallTransformer.visit_Call": {"tf": 1}, "scalpel.core.func_call_visitor.FuncCallVisitor": {"tf": 1}, "scalpel.core.func_call_visitor.FuncCallVisitor.__init__": {"tf": 1}, "scalpel.core.func_call_visitor.FuncCallVisitor.clear": {"tf": 1}, "scalpel.core.func_call_visitor.FuncCallVisitor.name": {"tf": 1}, "scalpel.core.func_call_visitor.FuncCallVisitor.visit_Name": {"tf": 1}, "scalpel.core.func_call_visitor.FuncCallVisitor.visit_Attribute": {"tf": 1}, "scalpel.core.func_call_visitor.FuncCallVisitor.visit_Call": {"tf": 1}, "scalpel.core.func_call_visitor.get_args": {"tf": 1}, "scalpel.core.func_call_visitor.get_call_type": {"tf": 1}, "scalpel.core.func_call_visitor.get_func_calls": {"tf": 1}}, "df": 17}}}}}}}}}}}}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"scalpel.core.func_call_visitor.FuncCallVisitor": {"tf": 1}, "scalpel.core.func_call_visitor.FuncCallVisitor.__init__": {"tf": 1}, "scalpel.core.func_call_visitor.FuncCallVisitor.clear": {"tf": 1}, "scalpel.core.func_call_visitor.FuncCallVisitor.name": {"tf": 1}, "scalpel.core.func_call_visitor.FuncCallVisitor.visit_Name": {"tf": 1}, "scalpel.core.func_call_visitor.FuncCallVisitor.visit_Attribute": {"tf": 1}, "scalpel.core.func_call_visitor.FuncCallVisitor.visit_Call": {"tf": 1}, "scalpel.typeinfer.utilities.FuncCallVisitor": {"tf": 1}, "scalpel.typeinfer.utilities.FuncCallVisitor.__init__": {"tf": 1}, "scalpel.typeinfer.utilities.FuncCallVisitor.clear": {"tf": 1}, "scalpel.typeinfer.utilities.FuncCallVisitor.name": {"tf": 1}, "scalpel.typeinfer.utilities.FuncCallVisitor.visit_Name": {"tf": 1}, "scalpel.typeinfer.utilities.FuncCallVisitor.visit_Attribute": {"tf": 1}, "scalpel.typeinfer.utilities.FuncCallVisitor.visit_Call": {"tf": 1}, "scalpel.typeinfer.visitors.FuncCallVisitor": {"tf": 1}, "scalpel.typeinfer.visitors.FuncCallVisitor.__init__": {"tf": 1}, "scalpel.typeinfer.visitors.FuncCallVisitor.clear": {"tf": 1}, "scalpel.typeinfer.visitors.FuncCallVisitor.name": {"tf": 1}, "scalpel.typeinfer.visitors.FuncCallVisitor.visit_Name": {"tf": 1}, "scalpel.typeinfer.visitors.FuncCallVisitor.visit_Attribute": {"tf": 1}, "scalpel.typeinfer.visitors.FuncCallVisitor.visit_Call": {"tf": 1}}, "df": 21}}}}}}}}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {"scalpel.typeinfer.analysers.FunctionDefinitionMap": {"tf": 1}, "scalpel.typeinfer.analysers.FunctionDefinitionMap.__init__": {"tf": 1}, "scalpel.typeinfer.analysers.FunctionDefinitionMap.map": {"tf": 1}}, "df": 3}}}}}}}}}}}}}}}}}}, "_": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"scalpel.core.fun_def_visitor": {"tf": 1}, "scalpel.core.fun_def_visitor.FunDefVisitor": {"tf": 1}, "scalpel.core.fun_def_visitor.FunDefVisitor.__init__": {"tf": 1}, "scalpel.core.fun_def_visitor.FunDefVisitor.visit": {"tf": 1}, "scalpel.core.fun_def_visitor.FunDefVisitor.visit_Args": {"tf": 1}}, "df": 5}}}}}}}}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"scalpel.core.fun_def_visitor.FunDefVisitor": {"tf": 1}, "scalpel.core.fun_def_visitor.FunDefVisitor.__init__": {"tf": 1}, "scalpel.core.fun_def_visitor.FunDefVisitor.visit": {"tf": 1}, "scalpel.core.fun_def_visitor.FunDefVisitor.visit_Args": {"tf": 1}}, "df": 4}}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {"scalpel.core.util.find_local_modules": {"tf": 1}}, "df": 1}}}}}}}}}}}, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {"scalpel.import_graph.import_graph.ImportGraph.find_child_by_name": {"tf": 1}}, "df": 1}}}}}}}}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {"scalpel.typeinfer.utilities.find_class_by_attr": {"tf": 1}}, "df": 1}}}}}}}}}}}}}, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {"scalpel.import_graph.import_graph.ImportGraph.find_node_by_name": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "w": {"docs": {"scalpel.SSA.ssa.SSA.backward_query_new": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"scalpel.cfg.builder.CFGBuilder.build": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "r": {"docs": {"scalpel.cfg.builder": {"tf": 1}, "scalpel.cfg.builder.is_py38_or_higher": {"tf": 1}, "scalpel.cfg.builder.invert": {"tf": 1}, "scalpel.cfg.builder.merge_exitcases": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.__init__": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.build": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.build_from_src": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.build_from_file": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.new_block": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.add_statement": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.add_exit": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.new_loopguard": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.new_functionCFG": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.new_ClassCFG": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.clean_cfg": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.goto_new_block": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.visit_Expr": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.visit_Call": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.visit_Assign": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.visit_AnnAssign": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.visit_AugAssign": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.visit_Global": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.visit_Nonlocal": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.visit_Pass": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.visit_Delete": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.visit_Raise": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.visit_Assert": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.visit_Try": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.visit_If": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.visit_While": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.visit_For": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.visit_AsyncFor": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.visit_Break": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.visit_Continue": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.visit_Import": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.visit_ImportFrom": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.visit_FunctionDef": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.visit_AsyncFunctionDef": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.visit_ClassDef": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.visit_Await": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.visit_Return": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.visit_Yield": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.visit_With": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.visit_AsyncWith": {"tf": 1}}, "df": 45}}, "_": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {"scalpel.cfg.builder.CFGBuilder.build_from_src": {"tf": 1}}, "df": 1}}}, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {"scalpel.cfg.builder.CFGBuilder.build_from_file": {"tf": 1}}, "df": 1}}}}}}}}, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "u": {"docs": {"scalpel.cfg.model.CFG.build_visual": {"tf": 1}}, "df": 1}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"scalpel.import_graph.import_graph.ImportGraph.build_dir_tree": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"scalpel.cfg.model.Block": {"tf": 1}, "scalpel.cfg.model.Block.__init__": {"tf": 1}, "scalpel.cfg.model.Block.id": {"tf": 1}, "scalpel.cfg.model.Block.statements": {"tf": 1}, "scalpel.cfg.model.Block.func_calls": {"tf": 1}, "scalpel.cfg.model.Block.predecessors": {"tf": 1}, "scalpel.cfg.model.Block.exits": {"tf": 1}, "scalpel.cfg.model.Block.at": {"tf": 1}, "scalpel.cfg.model.Block.is_empty": {"tf": 1}, "scalpel.cfg.model.Block.strip_comment": {"tf": 1}, "scalpel.cfg.model.Block.get_source": {"tf": 1}, "scalpel.cfg.model.Block.get_calls": {"tf": 1}, "scalpel.cfg.model.Block.ssa_form": {"tf": 1}}, "df": 13}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"scalpel.typeinfer.classes.BinaryOperation": {"tf": 1}, "scalpel.typeinfer.classes.BinaryOperation.__init__": {"tf": 1}, "scalpel.typeinfer.classes.BinaryOperation.shared_type": {"tf": 1}}, "df": 3, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {"scalpel.typeinfer.analysers.BinaryOperatorMap": {"tf": 1}, "scalpel.typeinfer.analysers.BinaryOperatorMap.__init__": {"tf": 1}, "scalpel.typeinfer.analysers.BinaryOperatorMap.append": {"tf": 1}, "scalpel.typeinfer.analysers.BinaryOperatorMap.chain_types": {"tf": 1}}, "df": 4}}}}}, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {"scalpel.typeinfer.analysers.BinaryOperationMap": {"tf": 1}, "scalpel.typeinfer.analysers.BinaryOperationMap.__init__": {"tf": 1}, "scalpel.typeinfer.analysers.BinaryOperationMap.map": {"tf": 1}}, "df": 3}}}}}}}}}}}}, "_": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"scalpel.typeinfer.classes.ScalpelVariable.binary_operation": {"tf": 1}}, "df": 1}}}}}}}}}}}, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {"scalpel.SSA.ssa.SSA.hit_scope": {"tf": 1}}, "df": 1}}}}}}}, "e": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"scalpel.typeinfer.analysers.Heuristics": {"tf": 1}, "scalpel.typeinfer.analysers.Heuristics.__init__": {"tf": 1}, "scalpel.typeinfer.analysers.Heuristics.heuristic_two": {"tf": 1}, "scalpel.typeinfer.analysers.Heuristics.heuristic_five": {"tf": 1}, "scalpel.typeinfer.analysers.Heuristics.heuristic_five_return": {"tf": 1}, "scalpel.typeinfer.analysers.Heuristics.heuristic_six": {"tf": 1}, "scalpel.typeinfer.analysers.Heuristics.heuristic_seven": {"tf": 1}, "scalpel.typeinfer.analysers.Heuristics.heuristic_eight": {"tf": 1}, "scalpel.typeinfer.analysers.Heuristics.heuristic_nine": {"tf": 1}, "scalpel.typeinfer.analysers.Heuristics.heuristic_eleven": {"tf": 1}, "scalpel.typeinfer.analysers.Heuristics.heuristic_twelve": {"tf": 1}, "scalpel.typeinfer.analysers.Heuristics.get_bin_op_involved": {"tf": 1}, "scalpel.typeinfer.analysers.Heuristics.in_bin_op": {"tf": 1}}, "df": 13, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"scalpel.typeinfer.analysers.HeuristicParser": {"tf": 1}, "scalpel.typeinfer.analysers.HeuristicParser.__init__": {"tf": 1}, "scalpel.typeinfer.analysers.HeuristicParser.visit_FunctionDef": {"tf": 1}, "scalpel.typeinfer.analysers.HeuristicParser.visit_Import": {"tf": 1}, "scalpel.typeinfer.analysers.HeuristicParser.visit_ImportFrom": {"tf": 1}, "scalpel.typeinfer.analysers.HeuristicParser.visit_While": {"tf": 1}, "scalpel.typeinfer.analysers.HeuristicParser.visit_Compare": {"tf": 1}, "scalpel.typeinfer.analysers.HeuristicParser.visit_BinOp": {"tf": 1}, "scalpel.typeinfer.analysers.HeuristicParser.visit_IfExp": {"tf": 1}, "scalpel.typeinfer.analysers.HeuristicParser.visit_If": {"tf": 1}}, "df": 10}}}}, "_": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "o": {"docs": {"scalpel.typeinfer.analysers.Heuristics.heuristic_two": {"tf": 1}}, "df": 1}, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "v": {"docs": {"scalpel.typeinfer.analysers.Heuristics.heuristic_twelve": {"tf": 1}}, "df": 1}}}}}, "f": {"docs": {"scalpel.typeinfer.analysers.Heuristics.heuristic_five": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {"scalpel.typeinfer.analysers.Heuristics.heuristic_five_return": {"tf": 1}}, "df": 1}}}}}}}}}}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {"scalpel.typeinfer.analysers.Heuristics.heuristic_six": {"tf": 1}}, "df": 1}}, "e": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"scalpel.typeinfer.analysers.Heuristics.heuristic_seven": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {"scalpel.typeinfer.analysers.Heuristics.heuristic_eight": {"tf": 1}}, "df": 1}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"scalpel.typeinfer.analysers.Heuristics.heuristic_eleven": {"tf": 1}}, "df": 1}}}}}}, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"scalpel.typeinfer.analysers.Heuristics.heuristic_nine": {"tf": 1}}, "df": 1}}}}}}}}}}}}}, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"scalpel.cfg.builder.CFGBuilder.new_block": {"tf": 1}}, "df": 1}}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"scalpel.cfg.builder.CFGBuilder.new_loopguard": {"tf": 1}}, "df": 1}}}}}}}}}, "f": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "g": {"docs": {"scalpel.cfg.builder.CFGBuilder.new_functionCFG": {"tf": 1}}, "df": 1}}}}}}}}}}}, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "g": {"docs": {"scalpel.cfg.builder.CFGBuilder.new_ClassCFG": {"tf": 1}}, "df": 1}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"scalpel.core.func_call_visitor.FuncCallVisitor.name": {"tf": 1}, "scalpel.typeinfer.utilities.FuncCallVisitor.name": {"tf": 1}, "scalpel.typeinfer.visitors.FuncCallVisitor.name": {"tf": 1}}, "df": 3}}}}, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"scalpel.core.fun_def_visitor.FunDefVisitor.visit": {"tf": 1}}, "df": 1, "_": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "r": {"docs": {"scalpel.cfg.builder.CFGBuilder.visit_Expr": {"tf": 1}}, "df": 1}}}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"scalpel.cfg.builder.CFGBuilder.visit_Call": {"tf": 1}, "scalpel.core.func_call_visitor.CallTransformer.visit_Call": {"tf": 1}, "scalpel.core.func_call_visitor.FuncCallVisitor.visit_Call": {"tf": 1}, "scalpel.core.vars_visitor.VarsVisitor.visit_Call": {"tf": 1}, "scalpel.typeinfer.utilities.TypeInferCallTransformer.visit_Call": {"tf": 1}, "scalpel.typeinfer.utilities.FuncCallVisitor.visit_Call": {"tf": 1}, "scalpel.typeinfer.visitors.FuncCallVisitor.visit_Call": {"tf": 1}, "scalpel.typeinfer.visitors.TypeInferCallTransformer.visit_Call": {"tf": 1}}, "df": 8}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "u": {"docs": {"scalpel.cfg.builder.CFGBuilder.visit_Continue": {"tf": 1}}, "df": 1}}}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"scalpel.core.vars_visitor.VarsVisitor.visit_Compare": {"tf": 1}, "scalpel.typeinfer.analysers.HeuristicParser.visit_Compare": {"tf": 1}}, "df": 2}}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "f": {"docs": {"scalpel.cfg.builder.CFGBuilder.visit_ClassDef": {"tf": 1}, "scalpel.core.source_visitor.SourceVisitor.visit_ClassDef": {"tf": 1}, "scalpel.typeinfer.analysers.ClassSplitVisitor.visit_ClassDef": {"tf": 1}}, "df": 3}}}}}}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "n": {"docs": {"scalpel.cfg.builder.CFGBuilder.visit_Assign": {"tf": 1}, "scalpel.core.vars_visitor.VarsVisitor.visit_Assign": {"tf": 1}, "scalpel.typeinfer.analysers.SourceSplitVisitor.visit_Assign": {"tf": 1}}, "df": 3}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"scalpel.cfg.builder.CFGBuilder.visit_Assert": {"tf": 1}}, "df": 1}}}}, "y": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"scalpel.cfg.builder.CFGBuilder.visit_AsyncFor": {"tf": 1}}, "df": 1}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "f": {"docs": {"scalpel.cfg.builder.CFGBuilder.visit_AsyncFunctionDef": {"tf": 1}}, "df": 1}}}}}}}}}}}, "w": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"scalpel.cfg.builder.CFGBuilder.visit_AsyncWith": {"tf": 1}}, "df": 1}}}}}}}}, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "n": {"docs": {"scalpel.cfg.builder.CFGBuilder.visit_AnnAssign": {"tf": 1}}, "df": 1}}}}}}}}, "u": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "n": {"docs": {"scalpel.cfg.builder.CFGBuilder.visit_AugAssign": {"tf": 1}}, "df": 1}}}}}}}}, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"scalpel.cfg.builder.CFGBuilder.visit_Await": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "g": {"docs": {"scalpel.core.fun_def_visitor.FunDefVisitor.visit_Args": {"tf": 1}}, "df": 1}}, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"scalpel.core.func_call_visitor.CallTransformer.visit_Attribute": {"tf": 1}, "scalpel.core.func_call_visitor.FuncCallVisitor.visit_Attribute": {"tf": 1}, "scalpel.core.vars_visitor.VarsVisitor.visit_Attribute": {"tf": 1}, "scalpel.typeinfer.utilities.TypeInferCallTransformer.visit_Attribute": {"tf": 1}, "scalpel.typeinfer.utilities.FuncCallVisitor.visit_Attribute": {"tf": 1}, "scalpel.typeinfer.visitors.FuncCallVisitor.visit_Attribute": {"tf": 1}, "scalpel.typeinfer.visitors.TypeInferCallTransformer.visit_Attribute": {"tf": 1}}, "df": 7}}}}}}}}, "g": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "b": {"docs": {"scalpel.cfg.builder.CFGBuilder.visit_Global": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {"scalpel.core.vars_visitor.VarsVisitor.visit_GeneratorComp": {"tf": 1}}, "df": 1}}}}}}}}}}}}}, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {"scalpel.cfg.builder.CFGBuilder.visit_Nonlocal": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {"scalpel.core.func_call_visitor.FuncCallVisitor.visit_Name": {"tf": 1}, "scalpel.core.vars_visitor.VarsVisitor.visit_Name": {"tf": 1}, "scalpel.typeinfer.utilities.FuncCallVisitor.visit_Name": {"tf": 1}, "scalpel.typeinfer.visitors.FuncCallVisitor.visit_Name": {"tf": 1}}, "df": 4}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"scalpel.cfg.builder.CFGBuilder.visit_Pass": {"tf": 1}}, "df": 1}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"scalpel.cfg.builder.CFGBuilder.visit_Delete": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"scalpel.core.vars_visitor.VarsVisitor.visit_Dict": {"tf": 1}}, "df": 1, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {"scalpel.core.vars_visitor.VarsVisitor.visit_DictComp": {"tf": 1}}, "df": 1}}}}}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {"scalpel.cfg.builder.CFGBuilder.visit_Raise": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {"scalpel.cfg.builder.CFGBuilder.visit_Return": {"tf": 1}}, "df": 1}}}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {"scalpel.cfg.builder.CFGBuilder.visit_Try": {"tf": 1}}, "df": 1}}, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {"scalpel.core.vars_visitor.VarsVisitor.visit_Tuple": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "f": {"docs": {"scalpel.cfg.builder.CFGBuilder.visit_If": {"tf": 1}, "scalpel.typeinfer.analysers.HeuristicParser.visit_If": {"tf": 1}}, "df": 2, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "p": {"docs": {"scalpel.core.vars_visitor.VarsVisitor.visit_IfExp": {"tf": 1}, "scalpel.typeinfer.analysers.HeuristicParser.visit_IfExp": {"tf": 1}}, "df": 2}}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"scalpel.cfg.builder.CFGBuilder.visit_Import": {"tf": 1}, "scalpel.typeinfer.analysers.HeuristicParser.visit_Import": {"tf": 1}}, "df": 2, "f": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"scalpel.cfg.builder.CFGBuilder.visit_ImportFrom": {"tf": 1}, "scalpel.typeinfer.analysers.HeuristicParser.visit_ImportFrom": {"tf": 1}}, "df": 2}}}}}}}}}}, "w": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {"scalpel.cfg.builder.CFGBuilder.visit_While": {"tf": 1}, "scalpel.typeinfer.analysers.HeuristicParser.visit_While": {"tf": 1}}, "df": 2}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"scalpel.cfg.builder.CFGBuilder.visit_With": {"tf": 1}}, "df": 1}}}}, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"scalpel.cfg.builder.CFGBuilder.visit_For": {"tf": 1}}, "df": 1}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "f": {"docs": {"scalpel.cfg.builder.CFGBuilder.visit_FunctionDef": {"tf": 1}, "scalpel.core.class_visitor.ClassVisitor.visit_FunctionDef": {"tf": 1}, "scalpel.core.source_visitor.SourceVisitor.visit_FunctionDef": {"tf": 1}, "scalpel.core.vars_visitor.VarsVisitor.visit_FunctionDef": {"tf": 1}, "scalpel.typeinfer.analysers.HeuristicParser.visit_FunctionDef": {"tf": 1}, "scalpel.typeinfer.analysers.SourceSplitVisitor.visit_FunctionDef": {"tf": 1}, "scalpel.typeinfer.analysers.ClassSplitVisitor.visit_FunctionDef": {"tf": 1}, "scalpel.typeinfer.analysers.ReturnStmtVisitor.visit_FunctionDef": {"tf": 1}}, "df": 8}}}}}}}}}}}, "b": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "k": {"docs": {"scalpel.cfg.builder.CFGBuilder.visit_Break": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {"scalpel.core.vars_visitor.VarsVisitor.visit_BoolOp": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {"scalpel.core.vars_visitor.VarsVisitor.visit_BinOp": {"tf": 1}, "scalpel.typeinfer.analysers.HeuristicParser.visit_BinOp": {"tf": 1}}, "df": 2}}}}}, "y": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"scalpel.cfg.builder.CFGBuilder.visit_Yield": {"tf": 1}, "scalpel.core.vars_visitor.VarsVisitor.visit_Yield": {"tf": 1}, "scalpel.typeinfer.analysers.ReturnStmtVisitor.visit_Yield": {"tf": 1}}, "df": 3, "f": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"scalpel.core.vars_visitor.VarsVisitor.visit_YieldFrom": {"tf": 1}}, "df": 1}}}}}}}}}, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"scalpel.core.kw_visitor.KWVisitor.visit_keyword": {"tf": 1}, "scalpel.core.vars_visitor.VarsVisitor.visit_keyword": {"tf": 1}}, "df": 2}}}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {"scalpel.core.vars_visitor.VarsVisitor.visit_UnaryOp": {"tf": 1}}, "df": 1}}}}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {"scalpel.core.vars_visitor.VarsVisitor.visit_Lambda": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"scalpel.core.vars_visitor.VarsVisitor.visit_List": {"tf": 1}}, "df": 1, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {"scalpel.core.vars_visitor.VarsVisitor.visit_ListComp": {"tf": 1}}, "df": 1}}}}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"scalpel.core.vars_visitor.VarsVisitor.visit_Set": {"tf": 1}}, "df": 1, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {"scalpel.core.vars_visitor.VarsVisitor.visit_SetComp": {"tf": 1}}, "df": 1}}}}}}, "u": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {"scalpel.core.vars_visitor.VarsVisitor.visit_Subscript": {"tf": 1}}, "df": 1}}}}}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"scalpel.core.vars_visitor.VarsVisitor.visit_Starred": {"tf": 1}}, "df": 1}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {"scalpel.typeinfer.visitors": {"tf": 1}, "scalpel.typeinfer.visitors.FuncCallVisitor": {"tf": 1}, "scalpel.typeinfer.visitors.FuncCallVisitor.__init__": {"tf": 1}, "scalpel.typeinfer.visitors.FuncCallVisitor.clear": {"tf": 1}, "scalpel.typeinfer.visitors.FuncCallVisitor.name": {"tf": 1}, "scalpel.typeinfer.visitors.FuncCallVisitor.visit_Name": {"tf": 1}, "scalpel.typeinfer.visitors.FuncCallVisitor.visit_Attribute": {"tf": 1}, "scalpel.typeinfer.visitors.FuncCallVisitor.visit_Call": {"tf": 1}, "scalpel.typeinfer.visitors.TypeInferCallTransformer": {"tf": 1}, "scalpel.typeinfer.visitors.TypeInferCallTransformer.__init__": {"tf": 1}, "scalpel.typeinfer.visitors.TypeInferCallTransformer.visit_Attribute": {"tf": 1}, "scalpel.typeinfer.visitors.TypeInferCallTransformer.visit_Call": {"tf": 1}, "scalpel.typeinfer.visitors.get_args": {"tf": 1}, "scalpel.typeinfer.visitors.get_func_calls_type": {"tf": 1}, "scalpel.typeinfer.visitors.get_call_type": {"tf": 1}}, "df": 15}}}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"scalpel.core.vars_visitor": {"tf": 1}, "scalpel.core.vars_visitor.VarsVisitor": {"tf": 1}, "scalpel.core.vars_visitor.VarsVisitor.__init__": {"tf": 1}, "scalpel.core.vars_visitor.VarsVisitor.visit_Name": {"tf": 1}, "scalpel.core.vars_visitor.VarsVisitor.visit_BoolOp": {"tf": 1}, "scalpel.core.vars_visitor.VarsVisitor.visit_BinOp": {"tf": 1}, "scalpel.core.vars_visitor.VarsVisitor.visit_UnaryOp": {"tf": 1}, "scalpel.core.vars_visitor.VarsVisitor.visit_Lambda": {"tf": 1}, "scalpel.core.vars_visitor.VarsVisitor.visit_IfExp": {"tf": 1}, "scalpel.core.vars_visitor.VarsVisitor.visit_Dict": {"tf": 1}, "scalpel.core.vars_visitor.VarsVisitor.visit_Set": {"tf": 1}, "scalpel.core.vars_visitor.VarsVisitor.comprehension": {"tf": 1}, "scalpel.core.vars_visitor.VarsVisitor.visit_ListComp": {"tf": 1}, "scalpel.core.vars_visitor.VarsVisitor.visit_SetComp": {"tf": 1}, "scalpel.core.vars_visitor.VarsVisitor.visit_DictComp": {"tf": 1}, "scalpel.core.vars_visitor.VarsVisitor.visit_GeneratorComp": {"tf": 1}, "scalpel.core.vars_visitor.VarsVisitor.visit_Yield": {"tf": 1}, "scalpel.core.vars_visitor.VarsVisitor.visit_YieldFrom": {"tf": 1}, "scalpel.core.vars_visitor.VarsVisitor.visit_Compare": {"tf": 1}, "scalpel.core.vars_visitor.VarsVisitor.visit_Call": {"tf": 1}, "scalpel.core.vars_visitor.VarsVisitor.visit_keyword": {"tf": 1}, "scalpel.core.vars_visitor.VarsVisitor.visit_Attribute": {"tf": 1}, "scalpel.core.vars_visitor.VarsVisitor.get_attr_name": {"tf": 1}, "scalpel.core.vars_visitor.VarsVisitor.slicev": {"tf": 1}, "scalpel.core.vars_visitor.VarsVisitor.visit_Subscript": {"tf": 1}, "scalpel.core.vars_visitor.VarsVisitor.visit_Starred": {"tf": 1}, "scalpel.core.vars_visitor.VarsVisitor.visit_List": {"tf": 1}, "scalpel.core.vars_visitor.VarsVisitor.visit_Tuple": {"tf": 1}, "scalpel.core.vars_visitor.VarsVisitor.visit_FunctionDef": {"tf": 1}, "scalpel.core.vars_visitor.VarsVisitor.visit_Assign": {"tf": 1}, "scalpel.core.vars_visitor.get_vars": {"tf": 1}}, "df": 31}}}}}}}}, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"scalpel.core.vars_visitor.VarsVisitor": {"tf": 1}, "scalpel.core.vars_visitor.VarsVisitor.__init__": {"tf": 1}, "scalpel.core.vars_visitor.VarsVisitor.visit_Name": {"tf": 1}, "scalpel.core.vars_visitor.VarsVisitor.visit_BoolOp": {"tf": 1}, "scalpel.core.vars_visitor.VarsVisitor.visit_BinOp": {"tf": 1}, "scalpel.core.vars_visitor.VarsVisitor.visit_UnaryOp": {"tf": 1}, "scalpel.core.vars_visitor.VarsVisitor.visit_Lambda": {"tf": 1}, "scalpel.core.vars_visitor.VarsVisitor.visit_IfExp": {"tf": 1}, "scalpel.core.vars_visitor.VarsVisitor.visit_Dict": {"tf": 1}, "scalpel.core.vars_visitor.VarsVisitor.visit_Set": {"tf": 1}, "scalpel.core.vars_visitor.VarsVisitor.comprehension": {"tf": 1}, "scalpel.core.vars_visitor.VarsVisitor.visit_ListComp": {"tf": 1}, "scalpel.core.vars_visitor.VarsVisitor.visit_SetComp": {"tf": 1}, "scalpel.core.vars_visitor.VarsVisitor.visit_DictComp": {"tf": 1}, "scalpel.core.vars_visitor.VarsVisitor.visit_GeneratorComp": {"tf": 1}, "scalpel.core.vars_visitor.VarsVisitor.visit_Yield": {"tf": 1}, "scalpel.core.vars_visitor.VarsVisitor.visit_YieldFrom": {"tf": 1}, "scalpel.core.vars_visitor.VarsVisitor.visit_Compare": {"tf": 1}, "scalpel.core.vars_visitor.VarsVisitor.visit_Call": {"tf": 1}, "scalpel.core.vars_visitor.VarsVisitor.visit_keyword": {"tf": 1}, "scalpel.core.vars_visitor.VarsVisitor.visit_Attribute": {"tf": 1}, "scalpel.core.vars_visitor.VarsVisitor.get_attr_name": {"tf": 1}, "scalpel.core.vars_visitor.VarsVisitor.slicev": {"tf": 1}, "scalpel.core.vars_visitor.VarsVisitor.visit_Subscript": {"tf": 1}, "scalpel.core.vars_visitor.VarsVisitor.visit_Starred": {"tf": 1}, "scalpel.core.vars_visitor.VarsVisitor.visit_List": {"tf": 1}, "scalpel.core.vars_visitor.VarsVisitor.visit_Tuple": {"tf": 1}, "scalpel.core.vars_visitor.VarsVisitor.visit_FunctionDef": {"tf": 1}, "scalpel.core.vars_visitor.VarsVisitor.visit_Assign": {"tf": 1}}, "df": 29}}}}}}}}, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {"scalpel.typeinfer.analysers.VariableAssignmentMap": {"tf": 1}, "scalpel.typeinfer.analysers.VariableAssignmentMap.__init__": {"tf": 1}, "scalpel.typeinfer.analysers.VariableAssignmentMap.map": {"tf": 1}}, "df": 3}}}}}}}}}}}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"scalpel.cfg.model.Block.exits": {"tf": 1}}, "df": 1, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {"scalpel.cfg.model.Link.exitcase": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {"scalpel.import_graph.import_graph.ImportGraph.extract_class_from_source": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}}}}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "k": {"docs": {"scalpel.cfg.model.Link": {"tf": 1}, "scalpel.cfg.model.Link.__init__": {"tf": 1}, "scalpel.cfg.model.Link.source": {"tf": 1}, "scalpel.cfg.model.Link.target": {"tf": 1}, "scalpel.cfg.model.Link.exitcase": {"tf": 1}, "scalpel.cfg.model.Link.get_exitcase": {"tf": 1}}, "df": 6}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "f": {"2": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {"scalpel.import_graph.import_graph.ImportGraph.leaf2root": {"tf": 1}}, "df": 1}}}}}, "docs": {}, "df": 0}}}}, "k": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"scalpel.core.kw_visitor": {"tf": 1}, "scalpel.core.kw_visitor.KWVisitor": {"tf": 1}, "scalpel.core.kw_visitor.KWVisitor.__init__": {"tf": 1}, "scalpel.core.kw_visitor.KWVisitor.visit_keyword": {"tf": 1}}, "df": 4}}}}}}}}, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"scalpel.core.kw_visitor.KWVisitor": {"tf": 1}, "scalpel.core.kw_visitor.KWVisitor.__init__": {"tf": 1}, "scalpel.core.kw_visitor.KWVisitor.visit_keyword": {"tf": 1}}, "df": 3}}}}}}}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {"scalpel.core.util": {"tf": 1}, "scalpel.core.util.iter_fields": {"tf": 1}, "scalpel.core.util.iter_child_nodes": {"tf": 1}, "scalpel.core.util.iter_stmt_children": {"tf": 1}, "scalpel.core.util.find_local_modules": {"tf": 1}, "scalpel.core.util.get_path_by_extension": {"tf": 1}, "scalpel.core.util.Unit": {"tf": 1}, "scalpel.core.util.Unit.__init__": {"tf": 1}, "scalpel.core.util.Unit.search_for_pos": {"tf": 1}, "scalpel.core.util.Unit.insert_stmt_before": {"tf": 1}, "scalpel.core.util.Unit.insert_stmts_before": {"tf": 1}, "scalpel.core.util.Unit.insert_after": {"tf": 1}, "scalpel.core.util.Unit.remove": {"tf": 1}, "scalpel.core.util.Unit.replace": {"tf": 1}, "scalpel.core.util.UnitWalker": {"tf": 1}, "scalpel.core.util.StmtIterator": {"tf": 1}, "scalpel.core.util.StmtIterator.__init__": {"tf": 1}, "scalpel.core.util.StmtIterator.insert_before": {"tf": 1}, "scalpel.core.util.StmtIterator.insert_after": {"tf": 1}, "scalpel.core.util.StmtIterator.remove": {"tf": 1}, "scalpel.core.util.StmtIterator.replace": {"tf": 1}, "scalpel.typeinfer.utilities": {"tf": 1}, "scalpel.typeinfer.utilities.get_func_calls_type": {"tf": 1}, "scalpel.typeinfer.utilities.TypeInferCallTransformer": {"tf": 1}, "scalpel.typeinfer.utilities.TypeInferCallTransformer.__init__": {"tf": 1}, "scalpel.typeinfer.utilities.TypeInferCallTransformer.visit_Attribute": {"tf": 1}, "scalpel.typeinfer.utilities.TypeInferCallTransformer.visit_Call": {"tf": 1}, "scalpel.typeinfer.utilities.FuncCallVisitor": {"tf": 1}, "scalpel.typeinfer.utilities.FuncCallVisitor.__init__": {"tf": 1}, "scalpel.typeinfer.utilities.FuncCallVisitor.clear": {"tf": 1}, "scalpel.typeinfer.utilities.FuncCallVisitor.name": {"tf": 1}, "scalpel.typeinfer.utilities.FuncCallVisitor.visit_Name": {"tf": 1}, "scalpel.typeinfer.utilities.FuncCallVisitor.visit_Attribute": {"tf": 1}, "scalpel.typeinfer.utilities.FuncCallVisitor.visit_Call": {"tf": 1}, "scalpel.typeinfer.utilities.get_built_in_types": {"tf": 1}, "scalpel.typeinfer.utilities.get_type": {"tf": 1}, "scalpel.typeinfer.utilities.check_consistent_list_types": {"tf": 1}, "scalpel.typeinfer.utilities.is_camel_case": {"tf": 1}, "scalpel.typeinfer.utilities.parse_module": {"tf": 1}, "scalpel.typeinfer.utilities.get_api_ref_id": {"tf": 1}, "scalpel.typeinfer.utilities.is_imported_fun": {"tf": 1}, "scalpel.typeinfer.utilities.rename_from_name": {"tf": 1}, "scalpel.typeinfer.utilities.is_valid_call_link": {"tf": 1}, "scalpel.typeinfer.utilities.generate_ast": {"tf": 1}, "scalpel.typeinfer.utilities.get_function_comment": {"tf": 1}, "scalpel.typeinfer.utilities.is_done": {"tf": 1}, "scalpel.typeinfer.utilities.find_class_by_attr": {"tf": 1}, "scalpel.typeinfer.utilities.get_attr_name": {"tf": 1}, "scalpel.typeinfer.utilities.resolve_name": {"tf": 1}}, "df": 49}}}, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"scalpel.core.util.Unit": {"tf": 1}, "scalpel.core.util.Unit.__init__": {"tf": 1}, "scalpel.core.util.Unit.search_for_pos": {"tf": 1}, "scalpel.core.util.Unit.insert_stmt_before": {"tf": 1}, "scalpel.core.util.Unit.insert_stmts_before": {"tf": 1}, "scalpel.core.util.Unit.insert_after": {"tf": 1}, "scalpel.core.util.Unit.remove": {"tf": 1}, "scalpel.core.util.Unit.replace": {"tf": 1}}, "df": 8, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "k": {"docs": {"scalpel.core.util.UnitWalker": {"tf": 1}}, "df": 1}}}}}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"scalpel.typeinfer.analysers.ReturnStmtVisitor.query_assign_records": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}}}}, "doc": {"root": {"1": {"docs": {"scalpel.SSA.alg.immediate_dominators": {"tf": 3}, "scalpel.SSA.alg.dominance_frontiers": {"tf": 2.23606797749979}}, "df": 2, "a": {"docs": {"scalpel.SSA.const.SSA.compute_SSA": {"tf": 1}}, "df": 1}, "b": {"docs": {"scalpel.SSA.const.SSA.compute_SSA": {"tf": 1}}, "df": 1}}, "2": {"0": {"0": {"1": {"docs": {"scalpel.SSA.alg.immediate_dominators": {"tf": 1}, "scalpel.SSA.alg.dominance_frontiers": {"tf": 1}}, "df": 2}, "docs": {}, "df": 0}, "2": {"1": {"docs": {"scalpel.call_graph.pycg": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "1": {"docs": {"scalpel.call_graph.pycg": {"tf": 1}}, "df": 1}, "5": {"docs": {}, "df": 0, "\u2013": {"2": {"8": {"docs": {"scalpel.call_graph.pycg": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}, "docs": {"scalpel.SSA.alg.immediate_dominators": {"tf": 1.7320508075688772}, "scalpel.SSA.alg.dominance_frontiers": {"tf": 1.7320508075688772}}, "df": 2}, "3": {"docs": {"scalpel.SSA.alg.immediate_dominators": {"tf": 2}, "scalpel.SSA.alg.dominance_frontiers": {"tf": 1.7320508075688772}}, "df": 2}, "4": {"3": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"scalpel.call_graph.pycg": {"tf": 1}}, "df": 1}}}, "docs": {"scalpel.SSA.alg.immediate_dominators": {"tf": 1.7320508075688772}, "scalpel.SSA.alg.dominance_frontiers": {"tf": 1.7320508075688772}}, "df": 2, ":": {"1": {"1": {"0": {"docs": {"scalpel.SSA.alg.immediate_dominators": {"tf": 1}, "scalpel.SSA.alg.dominance_frontiers": {"tf": 1}}, "df": 2}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}, "5": {"docs": {"scalpel.SSA.alg.immediate_dominators": {"tf": 1.7320508075688772}, "scalpel.SSA.alg.dominance_frontiers": {"tf": 2.449489742783178}}, "df": 2}, "8": {"docs": {"scalpel.typeinfer.analysers.Heuristics.heuristic_eight": {"tf": 1}, "scalpel.typeinfer.analysers.Heuristics.heuristic_twelve": {"tf": 1}}, "df": 2}, "docs": {}, "df": 0, "s": {"docs": {"scalpel.typeinfer.utilities.is_camel_case": {"tf": 1}}, "df": 1, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"scalpel": {"tf": 1}, "scalpel.SSA": {"tf": 1.7320508075688772}, "scalpel.SSA.const": {"tf": 1}, "scalpel.SSA.const.SSA.compute_SSA": {"tf": 1}, "scalpel.SSA.ssa": {"tf": 1}, "scalpel.call_graph": {"tf": 1}, "scalpel.cfg": {"tf": 1}, "scalpel.cfg.builder": {"tf": 1}, "scalpel.typeinfer": {"tf": 1.4142135623730951}}, "df": 9}}, "e": {"docs": {"scalpel.typeinfer.utilities.is_done": {"tf": 1.4142135623730951}}, "df": 1, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"scalpel.SSA.const.SSA.get_stmt_idents_ctx": {"tf": 1.7320508075688772}, "scalpel.cfg": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.add_statement": {"tf": 2}, "scalpel.cfg.model.Block": {"tf": 1.4142135623730951}, "scalpel.cfg.model.Block.at": {"tf": 1}, "scalpel.cfg.model.Block.get_source": {"tf": 1.4142135623730951}, "scalpel.core.func_call_visitor.CallTransformer": {"tf": 1.4142135623730951}, "scalpel.core.mnode.MNode.make_unit_walker": {"tf": 1}, "scalpel.import_graph": {"tf": 1}, "scalpel.import_graph.import_graph.ImportGraph.go_to_that_node": {"tf": 1}, "scalpel.import_graph.import_graph.ImportGraph.parse_import": {"tf": 1}, "scalpel.import_graph.import_graph.ImportGraph.extract_class_from_source": {"tf": 1}, "scalpel.typeinfer.analysers.SourceSplitVisitor.visit_Assign": {"tf": 1}}, "df": 13}}}}}}, "r": {"docs": {}, "df": 0, "t": {"docs": {"scalpel.SSA.alg.immediate_dominators": {"tf": 2.23606797749979}, "scalpel.SSA.alg.dominance_frontiers": {"tf": 2}, "scalpel.SSA.const.SSA.compute_SSA": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.clean_cfg": {"tf": 1}}, "df": 4}}}, "e": {"docs": {}, "df": 0, "p": {"2": {"docs": {"scalpel.SSA.const.SSA.compute_SSA": {"tf": 1}}, "df": 1}, "docs": {"scalpel.SSA.const.SSA.compute_SSA": {"tf": 1.7320508075688772}}, "df": 1}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"scalpel.SSA.const.SSA.get_stmt_idents_ctx": {"tf": 1.4142135623730951}, "scalpel.typeinfer.analysers.BinaryOperatorMap": {"tf": 1}}, "df": 2}}}, "m": {"docs": {}, "df": 0, "t": {"docs": {"scalpel.SSA.const.SSA.get_stmt_idents_ctx": {"tf": 1}}, "df": 1}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"scalpel.cfg.builder.CFGBuilder.build_from_src": {"tf": 1}, "scalpel.cfg.model.Block.get_source": {"tf": 1.4142135623730951}, "scalpel.cfg.model.Block.get_calls": {"tf": 1.4142135623730951}, "scalpel.cfg.model.Link.get_exitcase": {"tf": 1.4142135623730951}, "scalpel.core.mnode.MNode.parse_vars": {"tf": 1}, "scalpel.core.mnode.MNode.parse_func_calls": {"tf": 1}, "scalpel.import_graph.import_graph.ImportGraph.leaf2root": {"tf": 1}, "scalpel.typeinfer.utilities.is_camel_case": {"tf": 1.7320508075688772}, "scalpel.typeinfer.utilities.generate_ast": {"tf": 1}, "scalpel.typeinfer.utilities.resolve_name": {"tf": 1}}, "df": 10}}}, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {"scalpel.core.mnode.MNode.parse_import_stmts": {"tf": 1}, "scalpel.import_graph": {"tf": 1}, "scalpel.import_graph.import_graph.ImportGraph": {"tf": 1}, "scalpel.import_graph.import_graph.ImportGraph.parse_import": {"tf": 1}}, "df": 4}}}}}}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"scalpel": {"tf": 1}, "scalpel.SSA": {"tf": 1}, "scalpel.call_graph": {"tf": 1}, "scalpel.cfg": {"tf": 1}, "scalpel.import_graph": {"tf": 1}, "scalpel.typeinfer": {"tf": 1}}, "df": 6}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"scalpel.core.mnode": {"tf": 1}}, "df": 1}}}}}}, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"scalpel.core.mnode": {"tf": 1}, "scalpel.core.mnode.MNode.parse_vars": {"tf": 1}, "scalpel.core.mnode.MNode.parse_func_calls": {"tf": 1}, "scalpel.typeinfer.analysers.SourceSplitVisitor.visit_Assign": {"tf": 1.4142135623730951}}, "df": 4}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {"scalpel.import_graph.import_graph.ImportGraph.get_leaf_nodes": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {"scalpel": {"tf": 1}, "scalpel.SSA.alg.immediate_dominators": {"tf": 1}, "scalpel.SSA.alg.dominance_frontiers": {"tf": 1}}, "df": 3}}}, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "l": {"docs": {"scalpel.SSA": {"tf": 1}, "scalpel.SSA.const": {"tf": 1.4142135623730951}, "scalpel.SSA.const.SSA.compute_SSA": {"tf": 1}, "scalpel.SSA.ssa": {"tf": 1.4142135623730951}, "scalpel.core.func_call_visitor.CallTransformer": {"tf": 1}, "scalpel.import_graph.import_graph.ImportGraph.get_leaf_nodes": {"tf": 1}, "scalpel.typeinfer.typeinfer": {"tf": 1}}, "df": 7}}}}, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"scalpel": {"tf": 1}}, "df": 1}}}, "f": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"scalpel": {"tf": 1}, "scalpel.SSA": {"tf": 1}, "scalpel.SSA.alg.immediate_dominators": {"tf": 1}, "scalpel.SSA.alg.dominance_frontiers": {"tf": 1}, "scalpel.call_graph.pycg": {"tf": 1}, "scalpel.import_graph": {"tf": 1}}, "df": 6}}}}}, "r": {"docs": {}, "df": 0, "t": {"docs": {"scalpel.SSA.alg.immediate_dominators": {"tf": 1}, "scalpel.SSA.alg.dominance_frontiers": {"tf": 1.4142135623730951}}, "df": 2}}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {"scalpel.SSA.const.SSA.__init__": {"tf": 1}, "scalpel.SSA.ssa.SSA.__init__": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.build_from_src": {"tf": 1.7320508075688772}, "scalpel.cfg.builder.CFGBuilder.build_from_file": {"tf": 1.7320508075688772}, "scalpel.cfg.model.Block.get_source": {"tf": 1.4142135623730951}, "scalpel.cfg.model.Link.get_exitcase": {"tf": 1.4142135623730951}, "scalpel.core.mnode": {"tf": 1}, "scalpel.core.mnode.MNode": {"tf": 1}, "scalpel.core.mnode.MNode.__init__": {"tf": 1}, "scalpel.core.mnode.MNode.gen_ast": {"tf": 1}, "scalpel.import_graph.import_graph.ImportGraph": {"tf": 1}, "scalpel.import_graph.import_graph.ImportGraph.extract_class_from_source": {"tf": 1.4142135623730951}, "scalpel.typeinfer.analysers.ImportTypeMap.__init__": {"tf": 1}, "scalpel.typeinfer.analysers.ClassDefinitionMap.__init__": {"tf": 1}, "scalpel.typeinfer.analysers.FunctionDefinitionMap.__init__": {"tf": 1}, "scalpel.typeinfer.analysers.VariableAssignmentMap.__init__": {"tf": 1.4142135623730951}, "scalpel.typeinfer.analysers.BinaryOperationMap.__init__": {"tf": 1}, "scalpel.typeinfer.typeinfer.TypeInference.process_file": {"tf": 1}, "scalpel.typeinfer.utilities.generate_ast": {"tf": 1}, "scalpel.typeinfer.utilities.get_function_comment": {"tf": 1.7320508075688772}}, "df": 20}}}, "p": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {"scalpel.call_graph": {"tf": 1}}, "df": 1, "t": {"docs": {"scalpel.typeinfer": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {"scalpel.call_graph.pycg": {"tf": 1}}, "df": 1}}}}}}}}}}, "s": {"docs": {}, "df": 0, "a": {"docs": {"scalpel.SSA": {"tf": 1.4142135623730951}, "scalpel.SSA.const": {"tf": 1}, "scalpel.SSA.const.SSA": {"tf": 1}, "scalpel.SSA.const.SSA.compute_SSA": {"tf": 1}, "scalpel.SSA.ssa": {"tf": 1}, "scalpel.SSA.ssa.SSA": {"tf": 1}, "scalpel.typeinfer.analysers.ReturnStmtVisitor.type_infer_CFG": {"tf": 1}}, "df": 7, "_": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"scalpel.SSA.const.SSA.compute_idom": {"tf": 1}, "scalpel.SSA.const.SSA.compute_DF": {"tf": 1}}, "df": 2}}}}}}}}, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {"scalpel.SSA": {"tf": 1}, "scalpel.cfg.model.CFG.build_visual": {"tf": 1}}, "df": 2}}}, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"scalpel.SSA": {"tf": 1}, "scalpel.SSA.alg": {"tf": 1}, "scalpel.call_graph": {"tf": 1}, "scalpel.cfg": {"tf": 1}, "scalpel.import_graph.import_graph.ImportGraph.__init__": {"tf": 1}}, "df": 5}}, "b": {"docs": {"scalpel.cfg.builder.CFGBuilder.new_functionCFG": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.new_ClassCFG": {"tf": 1}}, "df": 2, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"scalpel.call_graph": {"tf": 1}}, "df": 1}}}}}}, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"scalpel.core.class_visitor.ClassVisitor": {"tf": 1.4142135623730951}, "scalpel.core.fun_def_visitor.FunDefVisitor": {"tf": 1.4142135623730951}, "scalpel.core.func_call_visitor.CallTransformer": {"tf": 1}, "scalpel.core.func_call_visitor.FuncCallVisitor": {"tf": 1.4142135623730951}, "scalpel.core.kw_visitor.KWVisitor": {"tf": 1.4142135623730951}, "scalpel.core.source_visitor.SourceVisitor": {"tf": 1.4142135623730951}, "scalpel.core.vars_visitor.VarsVisitor": {"tf": 1.4142135623730951}}, "df": 7}}}}}}}, "e": {"docs": {}, "df": 0, "e": {"docs": {"scalpel.SSA.alg": {"tf": 1}, "scalpel.cfg": {"tf": 1}, "scalpel.typeinfer.utilities.check_consistent_list_types": {"tf": 1}}, "df": 3}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {"scalpel.cfg": {"tf": 1}}, "df": 1}}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"scalpel.cfg.model.CFG": {"tf": 1}}, "df": 1}}}, "t": {"docs": {"scalpel.typeinfer.analysers": {"tf": 1}, "scalpel.typeinfer.analysers.Heuristics": {"tf": 1}, "scalpel.typeinfer.classes": {"tf": 1}, "scalpel.typeinfer.typeinfer.TypeInference": {"tf": 1}, "scalpel.typeinfer.typeinfer.TypeInference.process_file": {"tf": 1}}, "df": 5}}, "r": {"docs": {}, "df": 0, "c": {"docs": {"scalpel.SSA.const.SSA.__init__": {"tf": 1}, "scalpel.SSA.ssa.SSA.__init__": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.build_from_src": {"tf": 1}}, "df": 3}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {"scalpel.call_graph.pycg": {"tf": 1}}, "df": 1}}, "v": {"docs": {}, "df": 0, "e": {"docs": {"scalpel.cfg.model.CFG.build_visual": {"tf": 1}}, "df": 1}}}, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {"scalpel.call_graph.pycg": {"tf": 1}}, "df": 1}}}}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"scalpel.core.class_visitor.ClassVisitor": {"tf": 1}, "scalpel.core.fun_def_visitor.FunDefVisitor": {"tf": 1}, "scalpel.core.func_call_visitor.FuncCallVisitor": {"tf": 1}, "scalpel.core.kw_visitor.KWVisitor": {"tf": 1}, "scalpel.core.source_visitor.SourceVisitor": {"tf": 1}, "scalpel.core.vars_visitor.VarsVisitor": {"tf": 1}}, "df": 6}}}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"scalpel.core.mnode.MNode.parse_vars": {"tf": 1}, "scalpel.core.mnode.MNode.parse_func_calls": {"tf": 1}}, "df": 2}}}}, "y": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"scalpel.cfg.builder.CFGBuilder.build": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "x": {"docs": {"scalpel.core.class_visitor.ClassVisitor": {"tf": 1}, "scalpel.core.fun_def_visitor.FunDefVisitor": {"tf": 1}, "scalpel.core.func_call_visitor.CallTransformer": {"tf": 1}, "scalpel.core.func_call_visitor.FuncCallVisitor": {"tf": 1}, "scalpel.core.kw_visitor.KWVisitor": {"tf": 1}, "scalpel.core.source_visitor.SourceVisitor": {"tf": 1}, "scalpel.core.vars_visitor.VarsVisitor": {"tf": 1}}, "df": 7}}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "=": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "(": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "=": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "(": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "=": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {"scalpel.core.func_call_visitor.CallTransformer": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {"scalpel.import_graph.import_graph.ImportGraph.__init__": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {"scalpel": {"tf": 1.4142135623730951}, "scalpel.SSA": {"tf": 1.7320508075688772}, "scalpel.SSA.const": {"tf": 1}, "scalpel.SSA.ssa": {"tf": 1}}, "df": 4}}}, "l": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "s": {"docs": {"scalpel.typeinfer": {"tf": 1}, "scalpel.typeinfer.typeinfer.TypeInference.__init__": {"tf": 1}}, "df": 2, "i": {"docs": {"scalpel.call_graph": {"tf": 1}, "scalpel.cfg": {"tf": 1.4142135623730951}, "scalpel.import_graph.import_graph.ImportGraph.build_dir_tree": {"tf": 1}, "scalpel.typeinfer": {"tf": 1.4142135623730951}, "scalpel.typeinfer.analysers.ReturnStmtVisitor.type_infer_CFG": {"tf": 1}}, "df": 5}}}}}, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"scalpel.cfg.builder.merge_exitcases": {"tf": 1}, "scalpel.typeinfer.utilities.is_imported_fun": {"tf": 1}}, "df": 2}}}}, "l": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "m": {"docs": {"scalpel": {"tf": 1}, "scalpel.SSA.alg": {"tf": 1}, "scalpel.SSA.alg.immediate_dominators": {"tf": 1}, "scalpel.SSA.alg.dominance_frontiers": {"tf": 1}}, "df": 4}}}}}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"scalpel.SSA": {"tf": 1}}, "df": 1}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {"scalpel.SSA.const": {"tf": 1}, "scalpel.SSA.ssa": {"tf": 1}, "scalpel.core.class_visitor.ClassVisitor": {"tf": 1}, "scalpel.core.fun_def_visitor.FunDefVisitor": {"tf": 1}, "scalpel.core.func_call_visitor.CallTransformer": {"tf": 1}, "scalpel.core.func_call_visitor.FuncCallVisitor": {"tf": 1}, "scalpel.core.kw_visitor.KWVisitor": {"tf": 1}, "scalpel.core.source_visitor.SourceVisitor": {"tf": 1}, "scalpel.core.vars_visitor.VarsVisitor": {"tf": 1}, "scalpel.import_graph.import_graph.ImportGraph": {"tf": 1}}, "df": 10}}}, "i": {"docs": {}, "df": 0, "a": {"docs": {"scalpel.SSA.const.SSA.compute_SSA": {"tf": 1}, "scalpel.import_graph.import_graph.ImportGraph.extract_class_from_source": {"tf": 1}}, "df": 2, "s": {"docs": {"scalpel.core.mnode.MNode.parse_import_stmts": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {"scalpel.cfg.builder.CFGBuilder.clean_cfg": {"tf": 1}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "m": {"docs": {"scalpel": {"tf": 1}, "scalpel.call_graph": {"tf": 1}}, "df": 2}}, "c": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"scalpel": {"tf": 1}, "scalpel.typeinfer.typeinfer.TypeInference": {"tf": 1}, "scalpel.typeinfer.typeinfer.TypeInference.infer_types": {"tf": 1}}, "df": 3}}}}, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"scalpel.SSA": {"tf": 1}, "scalpel.typeinfer.analysers.Heuristics.heuristic_eight": {"tf": 1}, "scalpel.typeinfer.analysers.Heuristics.heuristic_twelve": {"tf": 1}}, "df": 3}}}}}, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "n": {"docs": {"scalpel.SSA": {"tf": 1}, "scalpel.SSA.const": {"tf": 1}, "scalpel.SSA.const.SSA.compute_SSA": {"tf": 1.4142135623730951}, "scalpel.SSA.const.SSA.get_stmt_idents_ctx": {"tf": 1.7320508075688772}, "scalpel.SSA.ssa": {"tf": 1}, "scalpel.typeinfer.analysers.VariableAssignmentMap": {"tf": 1}, "scalpel.typeinfer.analysers.VariableAssignmentMap.map": {"tf": 1}, "scalpel.typeinfer.analysers.SourceSplitVisitor": {"tf": 1}, "scalpel.typeinfer.analysers.SourceSplitVisitor.visit_Assign": {"tf": 1.4142135623730951}, "scalpel.typeinfer.analysers.ClassSplitVisitor": {"tf": 1}, "scalpel.typeinfer.analysers.ReturnStmtVisitor.import_assign_records": {"tf": 1.4142135623730951}, "scalpel.typeinfer.analysers.ReturnStmtVisitor.import_class_assign_records": {"tf": 1.4142135623730951}, "scalpel.typeinfer.analysers.ReturnStmtVisitor.infer_actual_return_value": {"tf": 1.4142135623730951}, "scalpel.typeinfer.analysers.ReturnStmtVisitor.type_infer_CFG": {"tf": 1}, "scalpel.typeinfer.analysers.Heuristics.heuristic_two": {"tf": 1.4142135623730951}, "scalpel.typeinfer.analysers.Heuristics.heuristic_eight": {"tf": 1}, "scalpel.typeinfer.analysers.Heuristics.heuristic_twelve": {"tf": 1}}, "df": 17, "_": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"scalpel.typeinfer.analysers.ReturnStmtVisitor.import_assign_records": {"tf": 1}, "scalpel.typeinfer.analysers.ReturnStmtVisitor.import_class_assign_records": {"tf": 1}, "scalpel.typeinfer.analysers.ReturnStmtVisitor.infer_actual_return_value": {"tf": 1}, "scalpel.typeinfer.analysers.ReturnStmtVisitor.type_infer_CFG": {"tf": 1}}, "df": 4}}}}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"scalpel.typeinfer.analysers.HeuristicParser": {"tf": 1}, "scalpel.typeinfer.analysers.Heuristics": {"tf": 1}}, "df": 2}}}, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {"scalpel.cfg.model.Link": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {"scalpel.SSA.const.SSA": {"tf": 1}, "scalpel.SSA.const.SSA.get_identifiers": {"tf": 1.4142135623730951}, "scalpel.SSA.const.SSA.get_stmt_idents_ctx": {"tf": 1}, "scalpel.SSA.ssa.SSA": {"tf": 1}, "scalpel.SSA.ssa.SSA.flatten_tuple": {"tf": 1}, "scalpel.SSA.ssa.SSA.get_identifiers": {"tf": 1.4142135623730951}, "scalpel.cfg.builder.invert": {"tf": 1.7320508075688772}, "scalpel.cfg.builder.CFGBuilder": {"tf": 1.4142135623730951}, "scalpel.cfg.builder.CFGBuilder.build": {"tf": 1.7320508075688772}, "scalpel.cfg.builder.CFGBuilder.add_statement": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.add_exit": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.new_functionCFG": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.new_ClassCFG": {"tf": 1}, "scalpel.core.func_call_visitor.CallTransformer": {"tf": 1}, "scalpel.core.mnode.MNode.gen_ast": {"tf": 1}, "scalpel.import_graph.import_graph.ImportGraph.parse_import": {"tf": 1.4142135623730951}, "scalpel.import_graph.import_graph.ImportGraph.extract_class_from_source": {"tf": 1.4142135623730951}, "scalpel.typeinfer.analysers": {"tf": 1}, "scalpel.typeinfer.analysers.SourceSplitVisitor": {"tf": 1}, "scalpel.typeinfer.analysers.ClassSplitVisitor": {"tf": 1}, "scalpel.typeinfer.analysers.Heuristics.heuristic_two": {"tf": 1}, "scalpel.typeinfer.analysers.Heuristics.heuristic_eight": {"tf": 1}, "scalpel.typeinfer.analysers.Heuristics.heuristic_twelve": {"tf": 1}, "scalpel.typeinfer.utilities.parse_module": {"tf": 1}, "scalpel.typeinfer.utilities.generate_ast": {"tf": 1}, "scalpel.typeinfer.utilities.resolve_name": {"tf": 1}, "scalpel.typeinfer.visitors.get_call_type": {"tf": 1}}, "df": 27, "_": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {"scalpel.SSA.const.SSA.get_identifiers": {"tf": 1}, "scalpel.SSA.ssa.SSA.get_identifiers": {"tf": 1}}, "df": 2, "e": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"scalpel.typeinfer.analysers.SourceSplitVisitor.visit_Assign": {"tf": 1}}, "df": 1}}}}}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"scalpel.typeinfer.analysers.Heuristics.heuristic_two": {"tf": 1}, "scalpel.typeinfer.analysers.Heuristics.heuristic_eight": {"tf": 1}, "scalpel.typeinfer.analysers.Heuristics.heuristic_twelve": {"tf": 1}}, "df": 3}}}}}, "y": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {"scalpel.cfg.builder.CFGBuilder.build": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.new_functionCFG": {"tf": 1}}, "df": 2, "h": {"docs": {}, "df": 0, "r": {"docs": {"scalpel.cfg.builder.CFGBuilder.new_ClassCFG": {"tf": 1}}, "df": 1, "o": {"docs": {}, "df": 0, "n": {"docs": {"scalpel.cfg.builder.CFGBuilder.build": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.new_functionCFG": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.new_ClassCFG": {"tf": 1}}, "df": 3}}}}}}}}, "d": {"docs": {"scalpel.SSA.const.SSA.compute_SSA": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.add_statement": {"tf": 1.4142135623730951}, "scalpel.cfg.builder.CFGBuilder.add_exit": {"tf": 1}, "scalpel.core.class_visitor.ClassVisitor": {"tf": 1}, "scalpel.core.fun_def_visitor.FunDefVisitor": {"tf": 1}, "scalpel.core.func_call_visitor.FuncCallVisitor": {"tf": 1}, "scalpel.core.kw_visitor.KWVisitor": {"tf": 1}, "scalpel.core.source_visitor.SourceVisitor": {"tf": 1}, "scalpel.core.vars_visitor.VarsVisitor": {"tf": 1}}, "df": 9, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {"scalpel.SSA.alg": {"tf": 1.4142135623730951}, "scalpel.cfg.builder": {"tf": 1}}, "df": 2}}}, "d": {"docs": {"scalpel.cfg.builder.CFGBuilder.add_statement": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.add_exit": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.new_functionCFG": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.new_ClassCFG": {"tf": 1}, "scalpel.typeinfer.analysers.SourceSplitVisitor.visit_Assign": {"tf": 1}}, "df": 5, "i": {"docs": {}, "df": 0, "t": {"docs": {"scalpel.SSA.const.SSA.compute_SSA": {"tf": 1}, "scalpel.SSA.const.SSA.get_stmt_idents_ctx": {"tf": 1}, "scalpel.core.mnode": {"tf": 1}}, "df": 3}}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {"scalpel.SSA.alg.immediate_dominators": {"tf": 1}, "scalpel.SSA.alg.dominance_frontiers": {"tf": 1}}, "df": 2}}, "r": {"docs": {}, "df": 0, "g": {"docs": {"scalpel.SSA.const.SSA.__init__": {"tf": 1}, "scalpel.SSA.const.SSA.get_identifiers": {"tf": 1}, "scalpel.SSA.const.SSA.compute_SSA": {"tf": 1}, "scalpel.SSA.const.SSA.get_stmt_idents_ctx": {"tf": 1}, "scalpel.SSA.const.SSA.compute_idom": {"tf": 1}, "scalpel.SSA.const.SSA.compute_DF": {"tf": 1}, "scalpel.SSA.ssa.SSA.__init__": {"tf": 1}, "scalpel.SSA.ssa.SSA.get_identifiers": {"tf": 1}, "scalpel.cfg.builder.invert": {"tf": 1}, "scalpel.cfg.builder.merge_exitcases": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.build": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.build_from_src": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.build_from_file": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.add_statement": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.add_exit": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.new_functionCFG": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.new_ClassCFG": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.clean_cfg": {"tf": 1}, "scalpel.cfg.model.CFG.build_visual": {"tf": 1}, "scalpel.core.mnode.MNode.__init__": {"tf": 1}, "scalpel.core.mnode.MNode.parse_vars": {"tf": 1}, "scalpel.core.mnode.MNode.parse_func_calls": {"tf": 1}, "scalpel.import_graph.import_graph.ImportGraph.__init__": {"tf": 1}, "scalpel.import_graph.import_graph.ImportGraph.go_to_that_node": {"tf": 1}, "scalpel.import_graph.import_graph.ImportGraph.parse_import": {"tf": 1}, "scalpel.import_graph.import_graph.ImportGraph.extract_class_from_source": {"tf": 1}, "scalpel.import_graph.import_graph.ImportGraph.leaf2root": {"tf": 1}, "scalpel.typeinfer.analysers.ImportTypeMap.__init__": {"tf": 1}, "scalpel.typeinfer.analysers.ImportTypeMap.get_imported_type": {"tf": 1}, "scalpel.typeinfer.analysers.ClassDefinitionMap.__init__": {"tf": 1}, "scalpel.typeinfer.analysers.FunctionDefinitionMap.__init__": {"tf": 1}, "scalpel.typeinfer.analysers.VariableAssignmentMap.__init__": {"tf": 1}, "scalpel.typeinfer.analysers.BinaryOperationMap.__init__": {"tf": 1}, "scalpel.typeinfer.analysers.SourceSplitVisitor.visit_Assign": {"tf": 1}, "scalpel.typeinfer.analysers.ReturnStmtVisitor.import_assign_records": {"tf": 1}, "scalpel.typeinfer.analysers.ReturnStmtVisitor.import_class_assign_records": {"tf": 1}, "scalpel.typeinfer.analysers.ReturnStmtVisitor.infer_actual_return_value": {"tf": 1}, "scalpel.typeinfer.analysers.ReturnStmtVisitor.type_infer_CFG": {"tf": 1}, "scalpel.typeinfer.analysers.Heuristics.heuristic_two": {"tf": 1}, "scalpel.typeinfer.analysers.Heuristics.heuristic_five": {"tf": 1}, "scalpel.typeinfer.analysers.Heuristics.heuristic_six": {"tf": 1}, "scalpel.typeinfer.analysers.Heuristics.heuristic_seven": {"tf": 1}, "scalpel.typeinfer.analysers.Heuristics.heuristic_eight": {"tf": 1}, "scalpel.typeinfer.analysers.Heuristics.heuristic_nine": {"tf": 1}, "scalpel.typeinfer.analysers.Heuristics.heuristic_twelve": {"tf": 1}, "scalpel.typeinfer.analysers.Heuristics.get_bin_op_involved": {"tf": 1}, "scalpel.typeinfer.analysers.Heuristics.in_bin_op": {"tf": 1}, "scalpel.typeinfer.typeinfer.TypeInference.__init__": {"tf": 1}, "scalpel.typeinfer.utilities.get_type": {"tf": 1}, "scalpel.typeinfer.utilities.is_camel_case": {"tf": 1}, "scalpel.typeinfer.utilities.parse_module": {"tf": 1}, "scalpel.typeinfer.utilities.is_imported_fun": {"tf": 1}, "scalpel.typeinfer.utilities.get_function_comment": {"tf": 1}, "scalpel.typeinfer.utilities.is_done": {"tf": 1}, "scalpel.typeinfer.visitors.get_args": {"tf": 1}, "scalpel.typeinfer.visitors.get_call_type": {"tf": 1}}, "df": 56, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"scalpel.import_graph.import_graph.ImportGraph.__init__": {"tf": 1}, "scalpel.typeinfer.visitors.get_args": {"tf": 1}, "scalpel.typeinfer.visitors.get_call_type": {"tf": 1}}, "df": 3}}}}}}, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {"scalpel.import_graph": {"tf": 1}}, "df": 1}}}}}}}}}}, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {"scalpel.core.class_visitor.ClassVisitor": {"tf": 1}, "scalpel.core.fun_def_visitor.FunDefVisitor": {"tf": 1}, "scalpel.core.func_call_visitor.CallTransformer": {"tf": 1}, "scalpel.core.func_call_visitor.FuncCallVisitor": {"tf": 1}, "scalpel.core.kw_visitor.KWVisitor": {"tf": 1}, "scalpel.core.source_visitor.SourceVisitor": {"tf": 1}, "scalpel.core.vars_visitor.VarsVisitor": {"tf": 1}}, "df": 7, "c": {"docs": {"scalpel.call_graph": {"tf": 1}, "scalpel.cfg": {"tf": 1}}, "df": 2}}}}, "i": {"docs": {"scalpel.core.mnode.MNode": {"tf": 1}}, "df": 1}}, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"scalpel.cfg.model.CFG.build_visual": {"tf": 1}, "scalpel.typeinfer": {"tf": 1}}, "df": 2}}}}}}, "b": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"scalpel.core.class_visitor.ClassVisitor": {"tf": 1}, "scalpel.core.fun_def_visitor.FunDefVisitor": {"tf": 1}, "scalpel.core.func_call_visitor.CallTransformer": {"tf": 1}, "scalpel.core.func_call_visitor.FuncCallVisitor": {"tf": 1}, "scalpel.core.kw_visitor.KWVisitor": {"tf": 1}, "scalpel.core.source_visitor.SourceVisitor": {"tf": 1}, "scalpel.core.vars_visitor.VarsVisitor": {"tf": 1}}, "df": 7}}}}}, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"scalpel.import_graph.import_graph.ImportGraph.go_to_that_node": {"tf": 1}}, "df": 1}}}}}}, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {"scalpel.typeinfer.analysers.Heuristics.heuristic_eight": {"tf": 1}, "scalpel.typeinfer.analysers.Heuristics.heuristic_twelve": {"tf": 1}}, "df": 2}}}}}}}, "p": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"scalpel": {"tf": 1.7320508075688772}, "scalpel.call_graph": {"tf": 1}, "scalpel.call_graph.pycg": {"tf": 1.4142135623730951}, "scalpel.cfg": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.build": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.build_from_src": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.build_from_file": {"tf": 1.4142135623730951}, "scalpel.cfg.model": {"tf": 1}, "scalpel.cfg.model.Block.get_source": {"tf": 1}, "scalpel.cfg.model.Link.get_exitcase": {"tf": 1}, "scalpel.core.mnode": {"tf": 1}, "scalpel.import_graph": {"tf": 1}, "scalpel.import_graph.import_graph.ImportGraph": {"tf": 1}, "scalpel.import_graph.import_graph.ImportGraph.__init__": {"tf": 1}, "scalpel.import_graph.import_graph.ImportGraph.get_leaf_nodes": {"tf": 1}, "scalpel.import_graph.import_graph.ImportGraph.go_to_that_node": {"tf": 1}, "scalpel.import_graph.import_graph.ImportGraph.parse_import": {"tf": 1}, "scalpel.typeinfer": {"tf": 1.4142135623730951}, "scalpel.typeinfer.typeinfer.TypeInference.__init__": {"tf": 1}, "scalpel.typeinfer.utilities.get_built_in_types": {"tf": 1.4142135623730951}}, "df": 20}}}}, "c": {"docs": {}, "df": 0, "g": {"docs": {"scalpel.call_graph": {"tf": 1.4142135623730951}, "scalpel.call_graph.pycg": {"tf": 1.4142135623730951}}, "df": 2}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {"scalpel": {"tf": 1.4142135623730951}, "scalpel.SSA": {"tf": 1}, "scalpel.call_graph": {"tf": 1.4142135623730951}, "scalpel.cfg": {"tf": 1.7320508075688772}, "scalpel.cfg.builder.CFGBuilder.build": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.add_exit": {"tf": 1}, "scalpel.cfg.model": {"tf": 1}, "scalpel.cfg.model.Block": {"tf": 1}, "scalpel.cfg.model.Block.at": {"tf": 1}, "scalpel.typeinfer": {"tf": 1}}, "df": 10, "'": {"docs": {"scalpel.cfg.builder.CFGBuilder": {"tf": 1}}, "df": 1}}}}}, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {"scalpel": {"tf": 1}, "scalpel.core.mnode": {"tf": 1}, "scalpel.core.mnode.MNode.parse_vars": {"tf": 1}, "scalpel.core.mnode.MNode.parse_func_calls": {"tf": 1}, "scalpel.typeinfer": {"tf": 1}, "scalpel.typeinfer.analysers.Heuristics.heuristic_eight": {"tf": 1}, "scalpel.typeinfer.analysers.Heuristics.heuristic_twelve": {"tf": 1}}, "df": 7}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {"scalpel.SSA": {"tf": 2}, "scalpel.call_graph": {"tf": 1}}, "df": 2}}}, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"scalpel.SSA": {"tf": 1}, "scalpel.import_graph": {"tf": 1}, "scalpel.typeinfer.analysers.Heuristics.heuristic_two": {"tf": 1}, "scalpel.typeinfer.analysers.Heuristics.heuristic_five": {"tf": 1}, "scalpel.typeinfer.analysers.Heuristics.heuristic_six": {"tf": 1}, "scalpel.typeinfer.analysers.Heuristics.heuristic_seven": {"tf": 1}, "scalpel.typeinfer.analysers.Heuristics.heuristic_nine": {"tf": 1}, "scalpel.typeinfer.classes.ProcessedFile": {"tf": 1}, "scalpel.typeinfer.typeinfer": {"tf": 1}, "scalpel.typeinfer.typeinfer.TypeInference.process_file": {"tf": 1}}, "df": 10, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {"scalpel.typeinfer.analysers.Heuristics.heuristic_two": {"tf": 1}, "scalpel.typeinfer.analysers.Heuristics.heuristic_five": {"tf": 1}, "scalpel.typeinfer.analysers.Heuristics.heuristic_six": {"tf": 1}, "scalpel.typeinfer.analysers.Heuristics.heuristic_seven": {"tf": 1}, "scalpel.typeinfer.analysers.Heuristics.heuristic_nine": {"tf": 1}}, "df": 5}}}}}}}}}}, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {"scalpel.call_graph": {"tf": 1}}, "df": 1}}}, "j": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"scalpel.call_graph": {"tf": 1}, "scalpel.cfg.builder": {"tf": 1}, "scalpel.import_graph": {"tf": 1.4142135623730951}, "scalpel.import_graph.import_graph.ImportGraph": {"tf": 1}}, "df": 4, "s": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "k": {"1": {"docs": {"scalpel.import_graph.import_graph.ImportGraph.__init__": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}}}}}}}}}}}}}}, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "c": {"docs": {"scalpel.cfg.builder.CFGBuilder.build": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.build_from_src": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.build_from_file": {"tf": 1}}, "df": 3}}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"scalpel.SSA.alg.immediate_dominators": {"tf": 1}, "scalpel.SSA.alg.dominance_frontiers": {"tf": 1}, "scalpel.call_graph.pycg": {"tf": 1.4142135623730951}}, "df": 3}}}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"scalpel.core.util.iter_fields": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"scalpel.typeinfer.typeinfer.TypeInference.print_types": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"scalpel.core.func_call_visitor.CallTransformer": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"scalpel.SSA": {"tf": 1}, "scalpel.import_graph.import_graph.ImportGraph.go_to_that_node": {"tf": 1}}, "df": 2}}}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {"scalpel.cfg.builder": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"scalpel.SSA.alg.immediate_dominators": {"tf": 1}, "scalpel.SSA.alg.dominance_frontiers": {"tf": 1}, "scalpel.typeinfer.analysers.Heuristics.heuristic_eight": {"tf": 1.4142135623730951}, "scalpel.typeinfer.analysers.Heuristics.heuristic_twelve": {"tf": 1.4142135623730951}}, "df": 4}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"scalpel.SSA.alg.immediate_dominators": {"tf": 1}}, "df": 1}}}, "s": {"docs": {"scalpel.core.mnode": {"tf": 1}, "scalpel.core.mnode.MNode": {"tf": 1}, "scalpel.import_graph.import_graph.ImportGraph.parse_import": {"tf": 1}, "scalpel.import_graph.import_graph.ImportGraph.extract_class_from_source": {"tf": 1}}, "df": 4}}, "i": {"docs": {}, "df": 0, "r": {"docs": {"scalpel.SSA.const.SSA.compute_SSA": {"tf": 1}, "scalpel.import_graph.import_graph.ImportGraph.extract_class_from_source": {"tf": 1}}, "df": 2}}, "n": {"docs": {}, "df": 0, "o": {"docs": {"scalpel.call_graph.pycg": {"tf": 1}}, "df": 1}}, "t": {"docs": {}, "df": 0, "h": {"docs": {"scalpel.cfg.builder.CFGBuilder.build_from_file": {"tf": 1}, "scalpel.import_graph.import_graph.ImportGraph.__init__": {"tf": 1}, "scalpel.import_graph.import_graph.ImportGraph.go_to_that_node": {"tf": 2}, "scalpel.import_graph.import_graph.ImportGraph.leaf2root": {"tf": 1.4142135623730951}}, "df": 4}}, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {"scalpel.typeinfer": {"tf": 1}, "scalpel.typeinfer.typeinfer.TypeInference.__init__": {"tf": 1}}, "df": 2}}}}}, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"scalpel.SSA": {"tf": 1}, "scalpel.typeinfer.typeinfer.TypeInference.__init__": {"tf": 1}}, "df": 2}}}, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {"scalpel.SSA": {"tf": 1}, "scalpel.cfg.model.CFG": {"tf": 1}, "scalpel.typeinfer.analysers.ReturnStmtVisitor.infer_actual_return_value": {"tf": 1}, "scalpel.typeinfer.analysers.ReturnStmtVisitor.type_infer_CFG": {"tf": 1}}, "df": 4}}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {"scalpel.SSA.const.SSA.compute_SSA": {"tf": 1}, "scalpel.core.class_visitor.ClassVisitor": {"tf": 1}, "scalpel.core.fun_def_visitor.FunDefVisitor": {"tf": 1}, "scalpel.core.func_call_visitor.FuncCallVisitor": {"tf": 1}, "scalpel.core.kw_visitor.KWVisitor": {"tf": 1}, "scalpel.core.source_visitor.SourceVisitor": {"tf": 1}, "scalpel.core.vars_visitor.VarsVisitor": {"tf": 1}}, "df": 7, "f": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"scalpel.SSA": {"tf": 1}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {"scalpel.typeinfer.analysers.Heuristics.heuristic_eight": {"tf": 1}, "scalpel.typeinfer.analysers.Heuristics.heuristic_twelve": {"tf": 1}}, "df": 2}}}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {"scalpel.SSA.alg": {"tf": 1}, "scalpel.call_graph": {"tf": 1}, "scalpel.call_graph.pycg": {"tf": 1}, "scalpel.cfg": {"tf": 1}}, "df": 4}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"scalpel.SSA.const.SSA.compute_SSA": {"tf": 1}, "scalpel.core.func_call_visitor.CallTransformer": {"tf": 1}}, "df": 2}}}}, "h": {"docs": {}, "df": 0, "i": {"docs": {"scalpel.SSA.const.SSA.compute_SSA": {"tf": 2}}, "df": 1}}, "u": {"docs": {}, "df": 0, "t": {"docs": {"scalpel.SSA.const.SSA.compute_SSA": {"tf": 1}}, "df": 1}, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {"scalpel.core.mnode.MNode": {"tf": 1}}, "df": 1}}}}}}}}, "d": {"docs": {}, "df": 0, "f": {"docs": {"scalpel.cfg.model.CFG.build_visual": {"tf": 1}}, "df": 1}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {"scalpel.typeinfer.analysers.SourceSplitVisitor.visit_Assign": {"tf": 1}}, "df": 1, "u": {"docs": {}, "df": 0, "l": {"docs": {"scalpel": {"tf": 1}, "scalpel.SSA.const": {"tf": 1.4142135623730951}, "scalpel.SSA.ssa": {"tf": 1.4142135623730951}, "scalpel.call_graph": {"tf": 1.4142135623730951}, "scalpel.cfg": {"tf": 1}, "scalpel.core.mnode": {"tf": 1.4142135623730951}, "scalpel.core.mnode.MNode": {"tf": 1}, "scalpel.core.mnode.MNode.parse_import_stmts": {"tf": 1}, "scalpel.import_graph": {"tf": 1.4142135623730951}, "scalpel.import_graph.import_graph": {"tf": 1}, "scalpel.import_graph.import_graph.ImportGraph.go_to_that_node": {"tf": 1}, "scalpel.import_graph.import_graph.ImportGraph.leaf2root": {"tf": 1}, "scalpel.typeinfer.analysers": {"tf": 1}, "scalpel.typeinfer.analysers.SourceSplitVisitor.visit_Assign": {"tf": 1}, "scalpel.typeinfer.analysers.Heuristics.heuristic_eight": {"tf": 1}, "scalpel.typeinfer.analysers.Heuristics.heuristic_twelve": {"tf": 1}, "scalpel.typeinfer.classes": {"tf": 1}, "scalpel.typeinfer.typeinfer": {"tf": 1.7320508075688772}, "scalpel.typeinfer.typeinfer.TypeInference": {"tf": 1}, "scalpel.typeinfer.typeinfer.TypeInference.infer_types": {"tf": 1}, "scalpel.typeinfer.utilities": {"tf": 1}, "scalpel.typeinfer.utilities.parse_module": {"tf": 1}, "scalpel.typeinfer.utilities.is_imported_fun": {"tf": 1.4142135623730951}}, "df": 23, "e": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "a": {"docs": {"scalpel.import_graph.import_graph.ImportGraph.go_to_that_node": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "f": {"docs": {"scalpel.core.class_visitor.ClassVisitor": {"tf": 1}, "scalpel.core.fun_def_visitor.FunDefVisitor": {"tf": 1}, "scalpel.core.func_call_visitor.CallTransformer": {"tf": 1}, "scalpel.core.func_call_visitor.FuncCallVisitor": {"tf": 1}, "scalpel.core.kw_visitor.KWVisitor": {"tf": 1}, "scalpel.core.source_visitor.SourceVisitor": {"tf": 1}, "scalpel.core.vars_visitor.VarsVisitor": {"tf": 1}}, "df": 7}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {"scalpel.call_graph": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {"scalpel.SSA": {"tf": 1}}, "df": 1}}}, "p": {"docs": {"scalpel.SSA.const.SSA.get_stmt_idents_ctx": {"tf": 1}, "scalpel.core.mnode.MNode.parse_import_stmts": {"tf": 1}, "scalpel.import_graph.import_graph.ImportGraph.parse_import": {"tf": 1}, "scalpel.typeinfer.analysers.ImportTypeMap": {"tf": 1}, "scalpel.typeinfer.analysers.ImportTypeMap.map": {"tf": 1}, "scalpel.typeinfer.analysers.VariableAssignmentMap.__init__": {"tf": 1}, "scalpel.typeinfer.analysers.Heuristics.heuristic_five": {"tf": 1}, "scalpel.typeinfer.analysers.Heuristics.heuristic_eight": {"tf": 1}, "scalpel.typeinfer.analysers.Heuristics.heuristic_nine": {"tf": 1}, "scalpel.typeinfer.analysers.Heuristics.heuristic_twelve": {"tf": 1}}, "df": 10}, "i": {"docs": {}, "df": 0, "n": {"docs": {"scalpel.cfg.builder.CFGBuilder.build": {"tf": 1}, "scalpel.typeinfer.typeinfer": {"tf": 1}}, "df": 2}}, "d": {"docs": {}, "df": 0, "e": {"docs": {"scalpel.cfg.model.Link": {"tf": 1}}, "df": 1}}, "n": {"docs": {}, "df": 0, "i": {"docs": {"scalpel.typeinfer": {"tf": 1}}, "df": 1, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {"scalpel.core.mnode.MNode": {"tf": 1}, "scalpel.import_graph": {"tf": 1}, "scalpel.import_graph.import_graph.ImportGraph": {"tf": 1}}, "df": 3}}}}}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "h": {"docs": {"scalpel.SSA.alg.immediate_dominators": {"tf": 1}, "scalpel.SSA.alg.dominance_frontiers": {"tf": 1}}, "df": 2}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {"scalpel.call_graph.pycg": {"tf": 1}}, "df": 1}}}}}}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {"scalpel.core.func_call_visitor.CallTransformer": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {"scalpel.cfg.builder.merge_exitcases": {"tf": 1.7320508075688772}}, "df": 1}}, "t": {"docs": {}, "df": 0, "h": {"docs": {"scalpel.core.func_call_visitor.CallTransformer": {"tf": 1}}, "df": 1, "o": {"docs": {}, "df": 0, "d": {"docs": {"scalpel.core.class_visitor.ClassVisitor": {"tf": 1.7320508075688772}, "scalpel.core.fun_def_visitor.FunDefVisitor": {"tf": 1.7320508075688772}, "scalpel.core.func_call_visitor.CallTransformer": {"tf": 1.7320508075688772}, "scalpel.core.func_call_visitor.FuncCallVisitor": {"tf": 1.7320508075688772}, "scalpel.core.kw_visitor.KWVisitor": {"tf": 1.7320508075688772}, "scalpel.core.source_visitor.SourceVisitor": {"tf": 1.7320508075688772}, "scalpel.core.vars_visitor.VarsVisitor": {"tf": 1.7320508075688772}}, "df": 7}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {"scalpel.core.mnode.MNode.parse_vars": {"tf": 1}, "scalpel.core.mnode.MNode.parse_func_calls": {"tf": 1}, "scalpel.import_graph.import_graph.ImportGraph.go_to_that_node": {"tf": 1}}, "df": 3, "t": {"docs": {"scalpel.core.class_visitor.ClassVisitor": {"tf": 1}, "scalpel.core.fun_def_visitor.FunDefVisitor": {"tf": 1}, "scalpel.core.func_call_visitor.FuncCallVisitor": {"tf": 1}, "scalpel.core.kw_visitor.KWVisitor": {"tf": 1}, "scalpel.core.source_visitor.SourceVisitor": {"tf": 1}, "scalpel.core.vars_visitor.VarsVisitor": {"tf": 1}}, "df": 6}}}}, "_": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"scalpel.typeinfer.utilities.parse_module": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {"scalpel": {"tf": 1}}, "df": 1}}, "r": {"docs": {}, "df": 0, "n": {"docs": {"scalpel.call_graph.pycg": {"tf": 1}}, "df": 1}, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {"scalpel.core.mnode": {"tf": 1}}, "df": 1}}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {"scalpel.typeinfer.analysers.Heuristics.heuristic_eight": {"tf": 1}, "scalpel.typeinfer.analysers.Heuristics.heuristic_twelve": {"tf": 1}}, "df": 2}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "c": {"docs": {"scalpel.SSA.const.SSA.compute_SSA": {"tf": 1}}, "df": 1}}}}}}, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {"scalpel.SSA": {"tf": 1}, "scalpel.SSA.const.SSA.get_stmt_idents_ctx": {"tf": 1}, "scalpel.core.mnode": {"tf": 1}, "scalpel.core.mnode.MNode.parse_func_defs": {"tf": 1}, "scalpel.import_graph": {"tf": 1}, "scalpel.typeinfer": {"tf": 1.4142135623730951}, "scalpel.typeinfer.analysers.BinaryOperatorMap": {"tf": 1}, "scalpel.typeinfer.analysers.SourceSplitVisitor.visit_Assign": {"tf": 1}, "scalpel.typeinfer.classes.TypeWarning": {"tf": 1}, "scalpel.typeinfer.classes.ScalpelVariable": {"tf": 1}, "scalpel.typeinfer.classes.ScalpelFunction": {"tf": 1}, "scalpel.typeinfer.classes.ScalpelClass": {"tf": 1}, "scalpel.typeinfer.classes.BinaryOperation": {"tf": 1}, "scalpel.typeinfer.classes.ProcessedFile": {"tf": 1}, "scalpel.typeinfer.typeinfer.TypeInference.get_types": {"tf": 1}, "scalpel.typeinfer.typeinfer.TypeInference.process_file": {"tf": 1}, "scalpel.typeinfer.utilities.TypeInferCallTransformer": {"tf": 1}, "scalpel.typeinfer.utilities.FuncCallVisitor": {"tf": 1}, "scalpel.typeinfer.visitors.FuncCallVisitor": {"tf": 1}, "scalpel.typeinfer.visitors.TypeInferCallTransformer": {"tf": 1}}, "df": 20}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {"scalpel.typeinfer": {"tf": 1}, "scalpel.typeinfer.analysers": {"tf": 1}, "scalpel.typeinfer.analysers.HeuristicParser": {"tf": 1}, "scalpel.typeinfer.analysers.ReturnStmtVisitor": {"tf": 1}, "scalpel.typeinfer.analysers.ReturnStmtVisitor.import_assign_records": {"tf": 1}, "scalpel.typeinfer.analysers.ReturnStmtVisitor.import_class_assign_records": {"tf": 1}, "scalpel.typeinfer.analysers.ReturnStmtVisitor.infer_actual_return_value": {"tf": 1}, "scalpel.typeinfer.analysers.Heuristics": {"tf": 1}, "scalpel.typeinfer.typeinfer": {"tf": 1}, "scalpel.typeinfer.typeinfer.TypeInference": {"tf": 1}, "scalpel.typeinfer.typeinfer.TypeInference.__init__": {"tf": 1}, "scalpel.typeinfer.typeinfer.TypeInference.infer_types": {"tf": 1}, "scalpel.typeinfer.typeinfer.TypeInference.get_types": {"tf": 1}, "scalpel.typeinfer.typeinfer.TypeInference.process_file": {"tf": 1}, "scalpel.typeinfer.typeinfer.TypeInference.print_types": {"tf": 1}, "scalpel.typeinfer.utilities": {"tf": 1}, "scalpel.typeinfer.visitors": {"tf": 1}}, "df": 17, "/": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"scalpel.typeinfer.analysers.Heuristics.heuristic_eight": {"tf": 1}, "scalpel.typeinfer.analysers.Heuristics.heuristic_twelve": {"tf": 1}}, "df": 2}}}}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {"scalpel.SSA": {"tf": 1}, "scalpel.core.mnode.MNode.parse_vars": {"tf": 1}, "scalpel.core.mnode.MNode.parse_func_calls": {"tf": 1}, "scalpel.import_graph.import_graph.ImportGraph.go_to_that_node": {"tf": 1}}, "df": 4}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"scalpel.core.class_visitor.ClassVisitor": {"tf": 1}, "scalpel.core.fun_def_visitor.FunDefVisitor": {"tf": 1}, "scalpel.core.func_call_visitor.FuncCallVisitor": {"tf": 1}, "scalpel.core.kw_visitor.KWVisitor": {"tf": 1}, "scalpel.core.source_visitor.SourceVisitor": {"tf": 1}, "scalpel.core.vars_visitor.VarsVisitor": {"tf": 1}}, "df": 6}}}, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"scalpel.core.mnode": {"tf": 1}, "scalpel.core.mnode.MNode": {"tf": 1}}, "df": 2}}}}}}}, "i": {"docs": {}, "df": 0, "d": {"docs": {"scalpel.cfg.model.Block.get_calls": {"tf": 1.4142135623730951}}, "df": 1}}}, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "d": {"docs": {"scalpel.SSA.alg": {"tf": 1}}, "df": 1}}}}, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"scalpel.SSA.const.SSA.__init__": {"tf": 1}, "scalpel.SSA.ssa.SSA.__init__": {"tf": 1}, "scalpel.SSA.ssa.SSA.flatten_tuple": {"tf": 1}, "scalpel.cfg.builder.invert": {"tf": 1}, "scalpel.core.mnode.MNode": {"tf": 1}, "scalpel.core.mnode.MNode.__init__": {"tf": 1}, "scalpel.typeinfer": {"tf": 1}, "scalpel.typeinfer.analysers.ImportTypeMap.__init__": {"tf": 1}, "scalpel.typeinfer.analysers.ClassDefinitionMap.__init__": {"tf": 1}, "scalpel.typeinfer.analysers.FunctionDefinitionMap.__init__": {"tf": 1}, "scalpel.typeinfer.analysers.VariableAssignmentMap.__init__": {"tf": 1.4142135623730951}, "scalpel.typeinfer.analysers.BinaryOperationMap.__init__": {"tf": 1}, "scalpel.typeinfer.analysers.Heuristics.heuristic_eight": {"tf": 1}, "scalpel.typeinfer.analysers.Heuristics.heuristic_twelve": {"tf": 1}}, "df": 14}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"scalpel.cfg.builder.invert": {"tf": 1}}, "df": 1}, "s": {"docs": {"scalpel.cfg.builder.invert": {"tf": 1}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "v": {"docs": {"scalpel.typeinfer.analysers.Heuristics.get_bin_op_involved": {"tf": 1}}, "df": 1}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"scalpel.cfg.builder.CFGBuilder.build": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.new_functionCFG": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.new_ClassCFG": {"tf": 1}, "scalpel.cfg.model.Block.is_empty": {"tf": 1}, "scalpel.cfg.model.CFG.build_visual": {"tf": 1}}, "df": 5}}}}, "r": {"docs": {"scalpel.SSA": {"tf": 1}}, "df": 1}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"scalpel.SSA": {"tf": 1}, "scalpel.SSA.alg": {"tf": 1}, "scalpel.SSA.const": {"tf": 1}, "scalpel.SSA.ssa": {"tf": 1}, "scalpel.cfg.builder": {"tf": 1}}, "df": 5}}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"scalpel.core.mnode.MNode.parse_import_stmts": {"tf": 1}, "scalpel.import_graph": {"tf": 2.449489742783178}, "scalpel.import_graph.import_graph": {"tf": 1}, "scalpel.import_graph.import_graph.ImportGraph": {"tf": 1.4142135623730951}, "scalpel.import_graph.import_graph.ImportGraph.__init__": {"tf": 1}, "scalpel.import_graph.import_graph.ImportGraph.go_to_that_node": {"tf": 1.4142135623730951}, "scalpel.import_graph.import_graph.ImportGraph.parse_import": {"tf": 1.4142135623730951}, "scalpel.import_graph.import_graph.ImportGraph.extract_class_from_source": {"tf": 1}, "scalpel.typeinfer.analysers.ImportTypeMap": {"tf": 1}, "scalpel.typeinfer.analysers.ImportTypeMap.map": {"tf": 1}, "scalpel.typeinfer.analysers.ImportTypeMap.get_imported_type": {"tf": 1}, "scalpel.typeinfer.analysers.VariableAssignmentMap.__init__": {"tf": 1.4142135623730951}, "scalpel.typeinfer.analysers.ReturnStmtVisitor.import_assign_records": {"tf": 1}, "scalpel.typeinfer.analysers.ReturnStmtVisitor.import_class_assign_records": {"tf": 1}, "scalpel.typeinfer.analysers.Heuristics.heuristic_five": {"tf": 1}, "scalpel.typeinfer.analysers.Heuristics.heuristic_nine": {"tf": 1}, "scalpel.typeinfer.utilities.get_type": {"tf": 1.4142135623730951}, "scalpel.typeinfer.utilities.parse_module": {"tf": 1.4142135623730951}, "scalpel.typeinfer.utilities.is_imported_fun": {"tf": 2}}, "df": 19, "_": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "h": {"docs": {"scalpel.import_graph": {"tf": 1}}, "df": 1}}}}}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {"scalpel.typeinfer.analysers.ImportTypeMap.get_imported_type": {"tf": 1}}, "df": 1}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {"scalpel.typeinfer.analysers.Heuristics.heuristic_five": {"tf": 1}, "scalpel.typeinfer.analysers.Heuristics.heuristic_nine": {"tf": 1}}, "df": 2}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"scalpel.typeinfer.utilities.is_imported_fun": {"tf": 1}}, "df": 1}}}}}}}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {"scalpel.SSA.alg.immediate_dominators": {"tf": 1.7320508075688772}, "scalpel.SSA.const.SSA.compute_idom": {"tf": 1.4142135623730951}}, "df": 2, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"scalpel.SSA.alg.immediate_dominators": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}, "d": {"docs": {"scalpel.cfg.builder.CFGBuilder.build": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.new_block": {"tf": 1.4142135623730951}, "scalpel.core.func_call_visitor.CallTransformer": {"tf": 1}}, "df": 3, "o": {"docs": {}, "df": 0, "m": {"docs": {"scalpel.SSA.alg.immediate_dominators": {"tf": 1}}, "df": 1}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {"scalpel.SSA.const.SSA.get_identifiers": {"tf": 1}, "scalpel.SSA.const.SSA.get_stmt_idents_ctx": {"tf": 1.4142135623730951}, "scalpel.SSA.ssa.SSA.get_identifiers": {"tf": 1}}, "df": 3}}}}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {"scalpel.SSA.alg.immediate_dominators": {"tf": 1}, "scalpel.SSA.alg.dominance_frontiers": {"tf": 1}, "scalpel.core.mnode.MNode.parse_func_defs": {"tf": 1}, "scalpel.core.util.iter_child_nodes": {"tf": 1}, "scalpel.core.util.iter_stmt_children": {"tf": 1}}, "df": 5}, "r": {"docs": {"scalpel.cfg.builder.CFGBuilder": {"tf": 1}}, "df": 1}}}, "c": {"docs": {}, "df": 0, "s": {"docs": {"scalpel.call_graph.pycg": {"tf": 1}}, "df": 1}}}, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"scalpel.SSA.const": {"tf": 1}, "scalpel.SSA.ssa": {"tf": 1}, "scalpel.call_graph": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.new_ClassCFG": {"tf": 1}, "scalpel.cfg.model.CFG.__init__": {"tf": 1}, "scalpel.core.class_visitor.ClassVisitor": {"tf": 1.7320508075688772}, "scalpel.core.fun_def_visitor.FunDefVisitor": {"tf": 1.7320508075688772}, "scalpel.core.func_call_visitor.CallTransformer": {"tf": 1.4142135623730951}, "scalpel.core.func_call_visitor.FuncCallVisitor": {"tf": 1.7320508075688772}, "scalpel.core.kw_visitor.KWVisitor": {"tf": 1.7320508075688772}, "scalpel.core.mnode.MNode.parse_vars": {"tf": 1}, "scalpel.core.mnode.MNode.parse_func_calls": {"tf": 1}, "scalpel.core.source_visitor.SourceVisitor": {"tf": 1.7320508075688772}, "scalpel.core.vars_visitor.VarsVisitor": {"tf": 1.7320508075688772}, "scalpel.import_graph.import_graph.ImportGraph": {"tf": 1}, "scalpel.typeinfer.analysers": {"tf": 1}, "scalpel.typeinfer.analysers.BinaryOperatorMap": {"tf": 1}, "scalpel.typeinfer.analysers.ImportTypeMap": {"tf": 1}, "scalpel.typeinfer.analysers.ClassDefinitionMap": {"tf": 1.4142135623730951}, "scalpel.typeinfer.analysers.ClassDefinitionMap.map": {"tf": 1}, "scalpel.typeinfer.analysers.FunctionDefinitionMap": {"tf": 1}, "scalpel.typeinfer.analysers.VariableAssignmentMap": {"tf": 1}, "scalpel.typeinfer.analysers.BinaryOperationMap": {"tf": 1}, "scalpel.typeinfer.analysers.SourceSplitVisitor": {"tf": 1}, "scalpel.typeinfer.analysers.ClassSplitVisitor": {"tf": 1.4142135623730951}, "scalpel.typeinfer.analysers.ReturnStmtVisitor": {"tf": 1}, "scalpel.typeinfer.analysers.ReturnStmtVisitor.import_class_assign_records": {"tf": 1.4142135623730951}, "scalpel.typeinfer.classes": {"tf": 1}, "scalpel.typeinfer.classes.ScalpelClass": {"tf": 1}, "scalpel.typeinfer.typeinfer": {"tf": 1}, "scalpel.typeinfer.utilities.TypeInferCallTransformer": {"tf": 1}, "scalpel.typeinfer.utilities.FuncCallVisitor": {"tf": 1}, "scalpel.typeinfer.utilities.parse_module": {"tf": 1.4142135623730951}, "scalpel.typeinfer.visitors.FuncCallVisitor": {"tf": 1}, "scalpel.typeinfer.visitors.TypeInferCallTransformer": {"tf": 1}}, "df": 35, "i": {"docs": {}, "df": 0, "c": {"docs": {"scalpel": {"tf": 1}}, "df": 1}}, "/": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"scalpel.import_graph.import_graph.ImportGraph.extract_class_from_source": {"tf": 1}}, "df": 1}}}}}}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {"scalpel.cfg.builder.CFGBuilder.clean_cfg": {"tf": 1}}, "df": 1, "_": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "g": {"docs": {"scalpel.cfg.builder.CFGBuilder.clean_cfg": {"tf": 1}}, "df": 1}}}}}}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {"scalpel": {"tf": 1}}, "df": 1}, "u": {"docs": {"scalpel.SSA.const.SSA.get_stmt_idents_ctx": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {"scalpel.SSA": {"tf": 1}, "scalpel.SSA.alg": {"tf": 1}, "scalpel.SSA.const.SSA.compute_SSA": {"tf": 1}, "scalpel.SSA.const.SSA.compute_idom": {"tf": 1}, "scalpel.SSA.const.SSA.compute_DF": {"tf": 1}, "scalpel.cfg": {"tf": 2.23606797749979}, "scalpel.cfg.builder.CFGBuilder": {"tf": 1.4142135623730951}, "scalpel.cfg.builder.CFGBuilder.add_exit": {"tf": 1}, "scalpel.cfg.model": {"tf": 1}, "scalpel.cfg.model.Block": {"tf": 1.7320508075688772}, "scalpel.cfg.model.Link": {"tf": 1.7320508075688772}, "scalpel.cfg.model.CFG": {"tf": 1.7320508075688772}}, "df": 12}}, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"scalpel.import_graph": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"scalpel.SSA.alg.immediate_dominators": {"tf": 1}, "scalpel.SSA.alg.dominance_frontiers": {"tf": 1}, "scalpel.SSA.const": {"tf": 1}, "scalpel.SSA.const.SSA.compute_SSA": {"tf": 1}, "scalpel.SSA.ssa": {"tf": 1}, "scalpel.cfg": {"tf": 1.4142135623730951}, "scalpel.cfg.builder.invert": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.build_from_src": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.build_from_file": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.new_functionCFG": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.new_ClassCFG": {"tf": 1}, "scalpel.cfg.model.Block": {"tf": 1}, "scalpel.cfg.model.Block.get_source": {"tf": 1.4142135623730951}, "scalpel.cfg.model.Block.get_calls": {"tf": 1.4142135623730951}, "scalpel.cfg.model.Link": {"tf": 1}, "scalpel.cfg.model.Link.get_exitcase": {"tf": 1.4142135623730951}, "scalpel.typeinfer.analysers": {"tf": 1}, "scalpel.typeinfer.classes": {"tf": 1}, "scalpel.typeinfer.typeinfer": {"tf": 1}, "scalpel.typeinfer.utilities.parse_module": {"tf": 1}}, "df": 20}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"scalpel.SSA": {"tf": 2.23606797749979}, "scalpel.SSA.const.SSA.compute_SSA": {"tf": 1}, "scalpel.typeinfer.utilities.check_consistent_list_types": {"tf": 1}}, "df": 3}}}, "_": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"scalpel.SSA.const.SSA.get_stmt_idents_ctx": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"scalpel.call_graph": {"tf": 1}, "scalpel.cfg": {"tf": 1}}, "df": 2, "o": {"docs": {}, "df": 0, "r": {"docs": {"scalpel.cfg.model.CFG.__init__": {"tf": null}}, "df": 1}}}}}}, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"scalpel.import_graph.import_graph.ImportGraph.__init__": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "d": {"docs": {"scalpel.cfg.builder.CFGBuilder.build": {"tf": 1}}, "df": 1}}}, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"scalpel.call_graph.pycg": {"tf": 1}}, "df": 1}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"scalpel.cfg": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.add_exit": {"tf": 1}}, "df": 2}}, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"scalpel.typeinfer.analysers.ReturnStmtVisitor.type_infer_CFG": {"tf": 1}}, "df": 1}}}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {"scalpel.SSA": {"tf": 1}}, "df": 1}}, "u": {"docs": {}, "df": 0, "t": {"docs": {"scalpel.SSA.alg": {"tf": 1}, "scalpel.SSA.alg.immediate_dominators": {"tf": 1.4142135623730951}, "scalpel.SSA.alg.dominance_frontiers": {"tf": 1.4142135623730951}, "scalpel.SSA.const.SSA.compute_SSA": {"tf": 2}, "scalpel.SSA.const.SSA.compute_idom": {"tf": 1}, "scalpel.SSA.const.SSA.compute_DF": {"tf": 1}, "scalpel.call_graph": {"tf": 1}}, "df": 7}}, "o": {"docs": {}, "df": 0, "n": {"docs": {"scalpel.call_graph": {"tf": 1}, "scalpel.cfg": {"tf": 1}}, "df": 2}, "s": {"docs": {"scalpel.cfg.model.CFG": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "t": {"docs": {"scalpel.typeinfer.analysers.ClassSplitVisitor": {"tf": 1}}, "df": 1}}}}}, "/": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "g": {"docs": {"scalpel.call_graph.pycg": {"tf": 1}}, "df": 1}}}}}}}}}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"0": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "g": {"docs": {"scalpel.cfg.builder": {"tf": 1}}, "df": 1}}}}}}}}}}, "docs": {}, "df": 0}}}}}}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"scalpel.typeinfer.utilities.get_function_comment": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {"scalpel.SSA": {"tf": 1.4142135623730951}, "scalpel.SSA.alg": {"tf": 1.4142135623730951}, "scalpel.SSA.const.SSA.__init__": {"tf": 1}, "scalpel.SSA.ssa.SSA.__init__": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.build_from_src": {"tf": 1.7320508075688772}, "scalpel.cfg.builder.CFGBuilder.build_from_file": {"tf": 1}, "scalpel.cfg.model.Block.get_source": {"tf": 1.4142135623730951}, "scalpel.cfg.model.Link.get_exitcase": {"tf": 1.4142135623730951}, "scalpel.cfg.model.CFG.get_all_blocks": {"tf": 1.4142135623730951}, "scalpel.core.mnode": {"tf": 1}, "scalpel.core.mnode.MNode": {"tf": 1}, "scalpel.core.mnode.MNode.rewrite": {"tf": 1}, "scalpel.import_graph.import_graph.ImportGraph.extract_class_from_source": {"tf": 1}, "scalpel.typeinfer.utilities.get_function_comment": {"tf": 1.4142135623730951}}, "df": 14}}, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"scalpel.SSA.alg.immediate_dominators": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder": {"tf": 1}, "scalpel.cfg.model.Block.get_source": {"tf": 1}, "scalpel.cfg.model.Link.get_exitcase": {"tf": 1}}, "df": 4}}}}}}}}, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"scalpel.SSA.alg.immediate_dominators": {"tf": 1}, "scalpel.SSA.alg.dominance_frontiers": {"tf": 1}}, "df": 2}}}}, "p": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "(": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {"scalpel.core.func_call_visitor.CallTransformer": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"scalpel.core.func_call_visitor.CallTransformer": {"tf": 1}}, "df": 1}}}}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"scalpel.SSA": {"tf": 1}, "scalpel.cfg.model.Block.is_empty": {"tf": 1}, "scalpel.typeinfer.analysers.Heuristics.heuristic_five": {"tf": 1}, "scalpel.typeinfer.analysers.Heuristics.heuristic_six": {"tf": 1}, "scalpel.typeinfer.analysers.Heuristics.heuristic_seven": {"tf": 1}, "scalpel.typeinfer.analysers.Heuristics.heuristic_eight": {"tf": 1}, "scalpel.typeinfer.analysers.Heuristics.heuristic_nine": {"tf": 1}, "scalpel.typeinfer.analysers.Heuristics.heuristic_twelve": {"tf": 1}, "scalpel.typeinfer.analysers.Heuristics.in_bin_op": {"tf": 1.4142135623730951}, "scalpel.typeinfer.utilities.check_consistent_list_types": {"tf": 1}, "scalpel.typeinfer.utilities.is_camel_case": {"tf": 1}, "scalpel.typeinfer.utilities.is_imported_fun": {"tf": 1}, "scalpel.typeinfer.utilities.get_function_comment": {"tf": 1}, "scalpel.typeinfer.utilities.is_done": {"tf": 1}, "scalpel.typeinfer.visitors.get_args": {"tf": 1}, "scalpel.typeinfer.visitors.get_call_type": {"tf": 1}}, "df": 16}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"scalpel.core.class_visitor.ClassVisitor": {"tf": 1.4142135623730951}, "scalpel.core.fun_def_visitor.FunDefVisitor": {"tf": 1.4142135623730951}, "scalpel.core.func_call_visitor.FuncCallVisitor": {"tf": 1.4142135623730951}, "scalpel.core.kw_visitor.KWVisitor": {"tf": 1.4142135623730951}, "scalpel.core.source_visitor.SourceVisitor": {"tf": 1.4142135623730951}, "scalpel.core.vars_visitor.VarsVisitor": {"tf": 1.4142135623730951}}, "df": 6}}}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"scalpel.core.func_call_visitor.CallTransformer": {"tf": 1.4142135623730951}, "scalpel.core.util.iter_child_nodes": {"tf": 1}, "scalpel.core.util.iter_stmt_children": {"tf": 1}, "scalpel.import_graph.import_graph.ImportGraph.find_child_by_name": {"tf": 1}}, "df": 4}}}}, "f": {"docs": {}, "df": 0, "g": {"docs": {"scalpel.SSA.const.SSA": {"tf": 1}, "scalpel.SSA.const.SSA.compute_SSA": {"tf": 1.4142135623730951}, "scalpel.SSA.ssa.SSA": {"tf": 1}, "scalpel.SSA.ssa.SSA.compute_undefined_names": {"tf": 1}, "scalpel.cfg": {"tf": 1.4142135623730951}, "scalpel.cfg.builder": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.build": {"tf": 2.6457513110645907}, "scalpel.cfg.builder.CFGBuilder.build_from_src": {"tf": 2}, "scalpel.cfg.builder.CFGBuilder.build_from_file": {"tf": 2}, "scalpel.cfg.builder.CFGBuilder.new_functionCFG": {"tf": 2}, "scalpel.cfg.builder.CFGBuilder.new_ClassCFG": {"tf": 2}, "scalpel.cfg.builder.CFGBuilder.clean_cfg": {"tf": 1.4142135623730951}, "scalpel.cfg.model.CFG": {"tf": 1.4142135623730951}, "scalpel.cfg.model.CFG.__init__": {"tf": 1}, "scalpel.cfg.model.CFG.get_all_blocks": {"tf": 1}, "scalpel.cfg.model.CFG.build_visual": {"tf": 1}, "scalpel.typeinfer.analysers.ReturnStmtVisitor.type_infer_CFG": {"tf": 1}}, "df": 18}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {"scalpel.call_graph": {"tf": 2}, "scalpel.call_graph.pycg": {"tf": 1.4142135623730951}, "scalpel.cfg.model.Block.get_calls": {"tf": 1.4142135623730951}, "scalpel.core.class_visitor.ClassVisitor": {"tf": 1}, "scalpel.core.fun_def_visitor.FunDefVisitor": {"tf": 1}, "scalpel.core.func_call_visitor.CallTransformer": {"tf": 1}, "scalpel.core.func_call_visitor.FuncCallVisitor": {"tf": 1}, "scalpel.core.kw_visitor.KWVisitor": {"tf": 1}, "scalpel.core.mnode.MNode.parse_func_calls": {"tf": 1}, "scalpel.core.source_visitor.SourceVisitor": {"tf": 1}, "scalpel.core.vars_visitor.VarsVisitor": {"tf": 1}, "scalpel.import_graph": {"tf": 1}, "scalpel.typeinfer.utilities.TypeInferCallTransformer": {"tf": 1}, "scalpel.typeinfer.utilities.FuncCallVisitor": {"tf": 1}, "scalpel.typeinfer.visitors.FuncCallVisitor": {"tf": 1}, "scalpel.typeinfer.visitors.TypeInferCallTransformer": {"tf": 1}, "scalpel.typeinfer.visitors.get_call_type": {"tf": 1}}, "df": 17}}, "s": {"docs": {}, "df": 0, "e": {"docs": {"scalpel.cfg.builder.CFGBuilder.add_exit": {"tf": 1}, "scalpel.cfg.model.Link": {"tf": 1}, "scalpel.core.func_call_visitor.CallTransformer": {"tf": 1}, "scalpel.typeinfer.utilities.is_camel_case": {"tf": 1.4142135623730951}}, "df": 4}}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"scalpel.typeinfer.utilities.is_camel_case": {"tf": 1.4142135623730951}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"scalpel.cfg.builder.CFGBuilder.new_block": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.new_loopguard": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.new_functionCFG": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.new_ClassCFG": {"tf": 1}}, "df": 4}}}}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"scalpel.cfg.builder.CFGBuilder.add_statement": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.new_loopguard": {"tf": 1.4142135623730951}, "scalpel.import_graph.import_graph.ImportGraph.go_to_that_node": {"tf": 1}, "scalpel.typeinfer.analysers.SourceSplitVisitor.visit_Assign": {"tf": 1}}, "df": 4}}}}}}, "t": {"docs": {}, "df": 0, "x": {"docs": {"scalpel.core.func_call_visitor.CallTransformer": {"tf": 1}}, "df": 1, "=": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"scalpel.core.func_call_visitor.CallTransformer": {"tf": 1}}, "df": 1}}}}, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"scalpel.core.func_call_visitor.CallTransformer": {"tf": 1}}, "df": 1}}}}}}}}, "t": {"docs": {"scalpel.SSA.alg.immediate_dominators": {"tf": 1}, "scalpel.SSA.alg.dominance_frontiers": {"tf": 1}}, "df": 2, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"scalpel": {"tf": 1}}, "df": 1}}}, "n": {"docs": {}, "df": 0, "t": {"docs": {"scalpel.cfg": {"tf": 1}}, "df": 1}}}, "s": {"docs": {}, "df": 0, "k": {"docs": {"scalpel.SSA": {"tf": 1}, "scalpel.typeinfer": {"tf": 1}}, "df": 2}}, "k": {"docs": {}, "df": 0, "e": {"docs": {"scalpel.core.func_call_visitor.CallTransformer": {"tf": 1}, "scalpel.typeinfer": {"tf": 1}}, "df": 2}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "u": {"docs": {"scalpel.SSA": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "x": {"docs": {}, "df": 0, "t": {"docs": {"scalpel.import_graph.import_graph.ImportGraph.extract_class_from_source": {"tf": 1}}, "df": 1}}}, "h": {"docs": {"scalpel.core.mnode.MNode.gen_ast": {"tf": 1}}, "df": 1, "o": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {"scalpel.SSA": {"tf": 1}}, "df": 1}}}, "d": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {"scalpel.call_graph.pycg": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {"scalpel.cfg.builder.CFGBuilder": {"tf": 1}, "scalpel.cfg.model.Block": {"tf": 1}}, "df": 2}}}}}}, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"scalpel.SSA": {"tf": 1}, "scalpel.typeinfer": {"tf": 1.7320508075688772}, "scalpel.typeinfer.analysers": {"tf": 1}, "scalpel.typeinfer.analysers.ImportTypeMap": {"tf": 1}, "scalpel.typeinfer.analysers.ImportTypeMap.map": {"tf": 1}, "scalpel.typeinfer.analysers.ImportTypeMap.get_imported_type": {"tf": 1}, "scalpel.typeinfer.analysers.VariableAssignmentMap.__init__": {"tf": 1}, "scalpel.typeinfer.analysers.HeuristicParser": {"tf": 1}, "scalpel.typeinfer.analysers.ReturnStmtVisitor": {"tf": 1}, "scalpel.typeinfer.analysers.ReturnStmtVisitor.import_assign_records": {"tf": 1}, "scalpel.typeinfer.analysers.ReturnStmtVisitor.import_class_assign_records": {"tf": 1}, "scalpel.typeinfer.analysers.ReturnStmtVisitor.infer_actual_return_value": {"tf": 1}, "scalpel.typeinfer.analysers.Heuristics": {"tf": 1}, "scalpel.typeinfer.analysers.Heuristics.heuristic_eight": {"tf": 1.4142135623730951}, "scalpel.typeinfer.analysers.Heuristics.heuristic_twelve": {"tf": 1.4142135623730951}, "scalpel.typeinfer.classes.TypeWarning": {"tf": 1}, "scalpel.typeinfer.typeinfer": {"tf": 1}, "scalpel.typeinfer.typeinfer.TypeInference": {"tf": 1}, "scalpel.typeinfer.typeinfer.TypeInference.__init__": {"tf": 1}, "scalpel.typeinfer.typeinfer.TypeInference.infer_types": {"tf": 1}, "scalpel.typeinfer.typeinfer.TypeInference.get_types": {"tf": 1}, "scalpel.typeinfer.typeinfer.TypeInference.process_file": {"tf": 1}, "scalpel.typeinfer.typeinfer.TypeInference.print_types": {"tf": 1}, "scalpel.typeinfer.utilities": {"tf": 1}, "scalpel.typeinfer.utilities.get_built_in_types": {"tf": 1.4142135623730951}, "scalpel.typeinfer.utilities.get_type": {"tf": 2}, "scalpel.typeinfer.utilities.check_consistent_list_types": {"tf": 1}, "scalpel.typeinfer.utilities.is_done": {"tf": 1.4142135623730951}, "scalpel.typeinfer.visitors": {"tf": 1}, "scalpel.typeinfer.visitors.get_args": {"tf": 1}, "scalpel.typeinfer.visitors.get_call_type": {"tf": 1}}, "df": 31, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {"scalpel.typeinfer": {"tf": 1}, "scalpel.typeinfer.typeinfer": {"tf": 1}}, "df": 2, "e": {"docs": {}, "df": 0, "r": {"docs": {"scalpel.typeinfer.typeinfer": {"tf": 1}}, "df": 1}}}}}}}}, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "o": {"docs": {"scalpel.SSA.alg": {"tf": 1}}, "df": 1}}, "p": {"docs": {"scalpel.import_graph.import_graph.ImportGraph.__init__": {"tf": 1}, "scalpel.import_graph.import_graph.ImportGraph.leaf2root": {"tf": 1}}, "df": 2}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {"scalpel.SSA.alg.immediate_dominators": {"tf": 1}, "scalpel.SSA.const.SSA.get_stmt_idents_ctx": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.build": {"tf": 1}, "scalpel.core.class_visitor.ClassVisitor": {"tf": 1}, "scalpel.core.fun_def_visitor.FunDefVisitor": {"tf": 1}, "scalpel.core.func_call_visitor.CallTransformer": {"tf": 1}, "scalpel.core.func_call_visitor.FuncCallVisitor": {"tf": 1}, "scalpel.core.kw_visitor.KWVisitor": {"tf": 1}, "scalpel.core.mnode.MNode.gen_ast": {"tf": 1}, "scalpel.core.source_visitor.SourceVisitor": {"tf": 1}, "scalpel.core.vars_visitor.VarsVisitor": {"tf": 1}, "scalpel.import_graph.import_graph.ImportGraph.build_dir_tree": {"tf": 1}, "scalpel.import_graph.import_graph.ImportGraph.get_leaf_nodes": {"tf": 1}, "scalpel.import_graph.import_graph.ImportGraph.go_to_that_node": {"tf": 1}, "scalpel.import_graph.import_graph.ImportGraph.parse_import": {"tf": 1.4142135623730951}, "scalpel.import_graph.import_graph.ImportGraph.extract_class_from_source": {"tf": 1.4142135623730951}, "scalpel.import_graph.import_graph.ImportGraph.leaf2root": {"tf": 1}, "scalpel.typeinfer.analysers.Heuristics.heuristic_two": {"tf": 1}, "scalpel.typeinfer.analysers.Heuristics.heuristic_eight": {"tf": 1}, "scalpel.typeinfer.analysers.Heuristics.heuristic_twelve": {"tf": 1}, "scalpel.typeinfer.utilities.parse_module": {"tf": 1}, "scalpel.typeinfer.visitors.get_call_type": {"tf": 1.4142135623730951}}, "df": 22}}, "a": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"scalpel.cfg.builder.CFGBuilder.clean_cfg": {"tf": 1}, "scalpel.core.class_visitor.ClassVisitor": {"tf": 1}, "scalpel.core.fun_def_visitor.FunDefVisitor": {"tf": 1}, "scalpel.core.func_call_visitor.FuncCallVisitor": {"tf": 1}, "scalpel.core.kw_visitor.KWVisitor": {"tf": 1}, "scalpel.core.source_visitor.SourceVisitor": {"tf": 1}, "scalpel.core.vars_visitor.VarsVisitor": {"tf": 1}}, "df": 7}}}}, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {"scalpel.core.func_call_visitor.CallTransformer": {"tf": 1.7320508075688772}}, "df": 1}}}}}}}, "u": {"docs": {}, "df": 0, "e": {"docs": {"scalpel.cfg.model.Block.is_empty": {"tf": 1}, "scalpel.typeinfer.analysers.Heuristics.in_bin_op": {"tf": 1}, "scalpel.typeinfer.utilities.is_camel_case": {"tf": 1}, "scalpel.typeinfer.utilities.is_done": {"tf": 1}}, "df": 4}}, "y": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"scalpel.core.class_visitor.ClassVisitor": {"tf": 1}, "scalpel.core.fun_def_visitor.FunDefVisitor": {"tf": 1}, "scalpel.core.func_call_visitor.FuncCallVisitor": {"tf": 1}, "scalpel.core.kw_visitor.KWVisitor": {"tf": 1}, "scalpel.core.source_visitor.SourceVisitor": {"tf": 1}, "scalpel.core.vars_visitor.VarsVisitor": {"tf": 1}}, "df": 6}}}}, "i": {"docs": {"scalpel.import_graph.import_graph.ImportGraph.go_to_that_node": {"tf": 1}}, "df": 1}}, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {"scalpel.SSA.ssa.SSA.flatten_tuple": {"tf": 1.4142135623730951}, "scalpel.core.util.iter_fields": {"tf": 1}, "scalpel.typeinfer.utilities.parse_module": {"tf": 1}}, "df": 3}}}, "w": {"docs": {}, "df": 0, "o": {"docs": {"scalpel.cfg": {"tf": 1}, "scalpel.cfg.builder.merge_exitcases": {"tf": 1}, "scalpel.cfg.model.Link": {"tf": 1}, "scalpel.typeinfer.classes.BinaryOperation": {"tf": 1}}, "df": 4}}, "_": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"scalpel.typeinfer.utilities.is_done": {"tf": 1}}, "df": 1}}}}}, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {"scalpel": {"tf": 1}, "scalpel.typeinfer.analysers.Heuristics.in_bin_op": {"tf": 1}}, "df": 2}}}}, "d": {"docs": {"scalpel.core.mnode": {"tf": 1}}, "df": 1}, "w": {"docs": {"scalpel.typeinfer.analysers": {"tf": 1}}, "df": 1}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {"scalpel.SSA": {"tf": 1.4142135623730951}, "scalpel.SSA.alg": {"tf": 1}, "scalpel.SSA.const.SSA.compute_SSA": {"tf": 1}, "scalpel.SSA.const.SSA.compute_idom": {"tf": 1}, "scalpel.SSA.const.SSA.compute_DF": {"tf": 1}, "scalpel.cfg": {"tf": 2.23606797749979}, "scalpel.cfg.builder.CFGBuilder": {"tf": 1.4142135623730951}, "scalpel.cfg.model": {"tf": 1}, "scalpel.cfg.model.Block": {"tf": 1.4142135623730951}, "scalpel.cfg.model.Link": {"tf": 1.4142135623730951}, "scalpel.cfg.model.CFG": {"tf": 1.7320508075688772}, "scalpel.import_graph": {"tf": 1}}, "df": 12}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"scalpel.SSA.alg.immediate_dominators": {"tf": 1}, "scalpel.SSA.alg.dominance_frontiers": {"tf": 1}}, "df": 2}}, "l": {"docs": {}, "df": 0, "s": {"docs": {"scalpel.cfg.model.Block.is_empty": {"tf": 1}, "scalpel.typeinfer.analysers.Heuristics.in_bin_op": {"tf": 1}, "scalpel.typeinfer.utilities.is_camel_case": {"tf": 1}, "scalpel.typeinfer.utilities.is_done": {"tf": 1}}, "df": 4}}, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"scalpel.typeinfer": {"tf": 1}}, "df": 1}}}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"scalpel.SSA.alg.dominance_frontiers": {"tf": 1.4142135623730951}, "scalpel.SSA.const.SSA.compute_SSA": {"tf": 1.7320508075688772}, "scalpel.SSA.const.SSA.compute_DF": {"tf": 1}}, "df": 3}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"scalpel.core.mnode": {"tf": 1}}, "df": 1}}}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {"scalpel.SSA.const": {"tf": 1}, "scalpel.SSA.const.SSA.compute_SSA": {"tf": 1}, "scalpel.SSA.ssa": {"tf": 1}, "scalpel.cfg": {"tf": 1}, "scalpel.cfg.model.Link": {"tf": 1}, "scalpel.import_graph.import_graph.ImportGraph.leaf2root": {"tf": 1}}, "df": 6, "a": {"docs": {}, "df": 0, "t": {"docs": {"scalpel.cfg.model.CFG.build_visual": {"tf": 1.4142135623730951}, "scalpel.typeinfer.typeinfer.TypeInference.print_types": {"tf": 1}}, "df": 2}}}, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"scalpel.core.class_visitor.ClassVisitor": {"tf": 1}, "scalpel.core.fun_def_visitor.FunDefVisitor": {"tf": 1}, "scalpel.core.func_call_visitor.FuncCallVisitor": {"tf": 1}, "scalpel.core.kw_visitor.KWVisitor": {"tf": 1}, "scalpel.core.source_visitor.SourceVisitor": {"tf": 1}, "scalpel.core.vars_visitor.VarsVisitor": {"tf": 1}}, "df": 6}}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {"scalpel.SSA.const.SSA.compute_SSA": {"tf": 1}}, "df": 1}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"scalpel.import_graph.import_graph.ImportGraph.__init__": {"tf": 1}, "scalpel.import_graph.import_graph.ImportGraph.go_to_that_node": {"tf": 1}, "scalpel.typeinfer": {"tf": 1}, "scalpel.typeinfer.typeinfer.TypeInference.__init__": {"tf": 1}}, "df": 4}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"scalpel.core.class_visitor.ClassVisitor": {"tf": 1}, "scalpel.core.fun_def_visitor.FunDefVisitor": {"tf": 1}, "scalpel.core.func_call_visitor.FuncCallVisitor": {"tf": 1}, "scalpel.core.kw_visitor.KWVisitor": {"tf": 1}, "scalpel.core.source_visitor.SourceVisitor": {"tf": 1}, "scalpel.core.vars_visitor.VarsVisitor": {"tf": 1}}, "df": 6}}}, "o": {"docs": {"scalpel.core.func_call_visitor.CallTransformer": {"tf": 1}}, "df": 1}}, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"scalpel.SSA.const": {"tf": 1}, "scalpel.SSA.ssa": {"tf": 1}}, "df": 2}}}, "u": {"docs": {}, "df": 0, "r": {"docs": {"scalpel.import_graph": {"tf": 1}}, "df": 1}}}, "n": {"docs": {"scalpel.core.mnode.MNode.parse_vars": {"tf": 1.4142135623730951}, "scalpel.core.mnode.MNode.parse_func_calls": {"tf": 1.4142135623730951}}, "df": 2, "c": {"docs": {"scalpel.import_graph.import_graph.ImportGraph.go_to_that_node": {"tf": 1.4142135623730951}}, "df": 1, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"scalpel.SSA.const.SSA.compute_SSA": {"tf": 1.4142135623730951}, "scalpel.call_graph": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.build": {"tf": 1.4142135623730951}, "scalpel.cfg.builder.CFGBuilder.new_functionCFG": {"tf": 2}, "scalpel.cfg.builder.CFGBuilder.new_ClassCFG": {"tf": 1.7320508075688772}, "scalpel.cfg.builder.CFGBuilder.clean_cfg": {"tf": 1}, "scalpel.cfg.model.Block.get_calls": {"tf": 1.4142135623730951}, "scalpel.core.class_visitor.ClassVisitor": {"tf": 2.23606797749979}, "scalpel.core.fun_def_visitor.FunDefVisitor": {"tf": 2.23606797749979}, "scalpel.core.func_call_visitor.FuncCallVisitor": {"tf": 2.23606797749979}, "scalpel.core.kw_visitor.KWVisitor": {"tf": 2.23606797749979}, "scalpel.core.mnode.MNode.parse_vars": {"tf": 1}, "scalpel.core.mnode.MNode.parse_func_calls": {"tf": 1.4142135623730951}, "scalpel.core.source_visitor.SourceVisitor": {"tf": 2.23606797749979}, "scalpel.core.vars_visitor.VarsVisitor": {"tf": 2.23606797749979}, "scalpel.import_graph": {"tf": 1}, "scalpel.import_graph.import_graph.ImportGraph.go_to_that_node": {"tf": 1.4142135623730951}, "scalpel.typeinfer.analysers": {"tf": 1}, "scalpel.typeinfer.analysers.ImportTypeMap": {"tf": 1}, "scalpel.typeinfer.analysers.ImportTypeMap.get_imported_type": {"tf": 1.4142135623730951}, "scalpel.typeinfer.analysers.FunctionDefinitionMap": {"tf": 1}, "scalpel.typeinfer.analysers.FunctionDefinitionMap.map": {"tf": 1}, "scalpel.typeinfer.analysers.ClassSplitVisitor": {"tf": 1}, "scalpel.typeinfer.analysers.ReturnStmtVisitor": {"tf": 1}, "scalpel.typeinfer.analysers.Heuristics": {"tf": 1}, "scalpel.typeinfer.analysers.Heuristics.heuristic_five": {"tf": 1}, "scalpel.typeinfer.analysers.Heuristics.heuristic_six": {"tf": 1}, "scalpel.typeinfer.analysers.Heuristics.heuristic_seven": {"tf": 1}, "scalpel.typeinfer.analysers.Heuristics.heuristic_eight": {"tf": 2}, "scalpel.typeinfer.analysers.Heuristics.heuristic_nine": {"tf": 1}, "scalpel.typeinfer.analysers.Heuristics.heuristic_twelve": {"tf": 2}, "scalpel.typeinfer.classes.ScalpelFunction": {"tf": 1}, "scalpel.typeinfer.typeinfer.TypeInference": {"tf": 1}, "scalpel.typeinfer.typeinfer.TypeInference.process_file": {"tf": 1}, "scalpel.typeinfer.typeinfer.TypeInference.print_types": {"tf": 1}, "scalpel.typeinfer.utilities.TypeInferCallTransformer": {"tf": 1}, "scalpel.typeinfer.utilities.FuncCallVisitor": {"tf": 1}, "scalpel.typeinfer.utilities.parse_module": {"tf": 1.4142135623730951}, "scalpel.typeinfer.utilities.is_imported_fun": {"tf": 1.7320508075688772}, "scalpel.typeinfer.utilities.get_function_comment": {"tf": 2}, "scalpel.typeinfer.visitors.FuncCallVisitor": {"tf": 1}, "scalpel.typeinfer.visitors.TypeInferCallTransformer": {"tf": 1}, "scalpel.typeinfer.visitors.get_call_type": {"tf": 1}}, "df": 43, "/": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"scalpel.core.mnode.MNode.parse_func_defs": {"tf": 1}, "scalpel.typeinfer.analysers.SourceSplitVisitor.visit_Assign": {"tf": 1}}, "df": 2}}}}}}, "_": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {"scalpel.typeinfer.analysers.Heuristics.heuristic_five": {"tf": 1}, "scalpel.typeinfer.analysers.Heuristics.heuristic_six": {"tf": 1}, "scalpel.typeinfer.analysers.Heuristics.heuristic_seven": {"tf": 1}, "scalpel.typeinfer.analysers.Heuristics.heuristic_nine": {"tf": 1}}, "df": 4}}, "a": {"docs": {}, "df": 0, "m": {"docs": {"scalpel.typeinfer.analysers.Heuristics.heuristic_eight": {"tf": 1}, "scalpel.typeinfer.analysers.Heuristics.heuristic_twelve": {"tf": 1}}, "df": 2}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {"scalpel.typeinfer.analysers.Heuristics.heuristic_eight": {"tf": 1}, "scalpel.typeinfer.analysers.Heuristics.heuristic_twelve": {"tf": 1}}, "df": 2}}}}}}, "'": {"docs": {"scalpel.typeinfer.analysers.Heuristics.heuristic_eight": {"tf": 1}, "scalpel.typeinfer.analysers.Heuristics.heuristic_twelve": {"tf": 1}}, "df": 2}}}}}, "_": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {"scalpel.typeinfer.utilities.is_imported_fun": {"tf": 1}}, "df": 1}}}}}}, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"scalpel.import_graph.import_graph.ImportGraph.build_dir_tree": {"tf": 1}}, "df": 1}}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {"scalpel.import_graph.import_graph.ImportGraph.leaf2root": {"tf": 1.4142135623730951}}, "df": 1, "i": {"docs": {"scalpel.typeinfer.analysers.ImportTypeMap.get_imported_type": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"scalpel.call_graph.pycg": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.build_from_file": {"tf": 1.7320508075688772}, "scalpel.cfg.model.CFG.build_visual": {"tf": 2}, "scalpel.core.mnode": {"tf": 1}, "scalpel.core.mnode.MNode": {"tf": 1.4142135623730951}, "scalpel.core.mnode.MNode.__init__": {"tf": 1}, "scalpel.import_graph": {"tf": 1.4142135623730951}, "scalpel.import_graph.import_graph.ImportGraph": {"tf": 1.4142135623730951}, "scalpel.typeinfer": {"tf": 1}, "scalpel.typeinfer.analysers.ImportTypeMap.__init__": {"tf": 1}, "scalpel.typeinfer.analysers.ClassDefinitionMap": {"tf": 1}, "scalpel.typeinfer.analysers.ClassDefinitionMap.__init__": {"tf": 1}, "scalpel.typeinfer.analysers.FunctionDefinitionMap": {"tf": 1}, "scalpel.typeinfer.analysers.FunctionDefinitionMap.__init__": {"tf": 1}, "scalpel.typeinfer.analysers.VariableAssignmentMap.__init__": {"tf": 1.4142135623730951}, "scalpel.typeinfer.analysers.BinaryOperationMap.__init__": {"tf": 1}, "scalpel.typeinfer.analysers.Heuristics.heuristic_two": {"tf": 1}, "scalpel.typeinfer.analysers.Heuristics.heuristic_five": {"tf": 1}, "scalpel.typeinfer.analysers.Heuristics.heuristic_six": {"tf": 1}, "scalpel.typeinfer.analysers.Heuristics.heuristic_seven": {"tf": 1}, "scalpel.typeinfer.analysers.Heuristics.heuristic_nine": {"tf": 1}, "scalpel.typeinfer.classes.ProcessedFile": {"tf": 1}, "scalpel.typeinfer.typeinfer": {"tf": 1}, "scalpel.typeinfer.typeinfer.TypeInference.__init__": {"tf": 1}, "scalpel.typeinfer.typeinfer.TypeInference.process_file": {"tf": 1}}, "df": 25, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"scalpel.cfg.builder.CFGBuilder.build_from_file": {"tf": 1}}, "df": 1}}}}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {"scalpel.cfg.model.CFG.build_visual": {"tf": 1}, "scalpel.core.mnode.MNode.__init__": {"tf": 1}}, "df": 2}}}}}, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"scalpel.cfg.model.Block.at": {"tf": 1}, "scalpel.core.func_call_visitor.CallTransformer": {"tf": 1}}, "df": 2}}}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"scalpel.cfg.model.CFG": {"tf": 1}}, "df": 1}}, "e": {"docs": {"scalpel.core.mnode": {"tf": 1}}, "df": 1}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {"scalpel.typeinfer.utilities.is_done": {"tf": 1.4142135623730951}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"scalpel.core.util.iter_fields": {"tf": 1}, "scalpel.core.util.iter_child_nodes": {"tf": 1.4142135623730951}, "scalpel.core.util.iter_stmt_children": {"tf": 1.4142135623730951}}, "df": 3, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {"scalpel.core.util.iter_fields": {"tf": 1}}, "df": 1}}}}}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {"scalpel": {"tf": 1}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {"scalpel.SSA.alg": {"tf": 1}}, "df": 1}}}}}}}}}, "b": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {"scalpel.SSA.alg": {"tf": 1}, "scalpel.typeinfer.utilities.is_imported_fun": {"tf": 1}}, "df": 2}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"scalpel.SSA.alg.dominance_frontiers": {"tf": 1}, "scalpel.SSA.ssa.SSA.flatten_tuple": {"tf": 1}, "scalpel.cfg": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.clean_cfg": {"tf": 1}, "scalpel.cfg.model.Block": {"tf": 1.4142135623730951}, "scalpel.cfg.model.CFG.get_all_blocks": {"tf": 1.4142135623730951}, "scalpel.core.func_call_visitor.CallTransformer": {"tf": 1}, "scalpel.core.mnode.MNode.parse_vars": {"tf": 1}, "scalpel.core.mnode.MNode.parse_func_calls": {"tf": 1}, "scalpel.core.mnode.MNode.parse_func_defs": {"tf": 1}, "scalpel.core.util.iter_child_nodes": {"tf": 1}, "scalpel.core.util.iter_stmt_children": {"tf": 1}, "scalpel.import_graph.import_graph.ImportGraph.go_to_that_node": {"tf": 1}, "scalpel.typeinfer.analysers.SourceSplitVisitor.visit_Assign": {"tf": 1.4142135623730951}, "scalpel.typeinfer.analysers.ReturnStmtVisitor.import_assign_records": {"tf": 1}, "scalpel.typeinfer.analysers.ReturnStmtVisitor.import_class_assign_records": {"tf": 1}, "scalpel.typeinfer.analysers.ReturnStmtVisitor.infer_actual_return_value": {"tf": 1}, "scalpel.typeinfer.analysers.ReturnStmtVisitor.type_infer_CFG": {"tf": 1}, "scalpel.typeinfer.analysers.Heuristics.heuristic_two": {"tf": 1}, "scalpel.typeinfer.analysers.Heuristics.get_bin_op_involved": {"tf": 1.7320508075688772}, "scalpel.typeinfer.typeinfer.TypeInference.get_types": {"tf": 1}, "scalpel.typeinfer.utilities.check_consistent_list_types": {"tf": 1}, "scalpel.typeinfer.utilities.parse_module": {"tf": 1.7320508075688772}, "scalpel.typeinfer.utilities.is_done": {"tf": 1.4142135623730951}}, "df": 24}}, "n": {"docs": {}, "df": 0, "k": {"docs": {"scalpel.cfg": {"tf": 1.4142135623730951}, "scalpel.cfg.builder.merge_exitcases": {"tf": 1.4142135623730951}, "scalpel.cfg.builder.CFGBuilder.new_loopguard": {"tf": 1}, "scalpel.cfg.model.Block": {"tf": 1}, "scalpel.cfg.model.Link": {"tf": 1}, "scalpel.cfg.model.Link.get_exitcase": {"tf": 1}, "scalpel.cfg.model.CFG": {"tf": 1}}, "df": 7}, "e": {"docs": {"scalpel.cfg.model.Block.at": {"tf": 1}, "scalpel.core.mnode.MNode.parse_vars": {"tf": 1}, "scalpel.core.mnode.MNode.parse_func_calls": {"tf": 1}}, "df": 3}}, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"scalpel.typeinfer.analysers.Heuristics.heuristic_eight": {"tf": 1}, "scalpel.typeinfer.analysers.Heuristics.heuristic_twelve": {"tf": 1}}, "df": 2}}}}, "e": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {"scalpel.call_graph": {"tf": 1}, "scalpel.import_graph.import_graph.ImportGraph": {"tf": 1}}, "df": 2}}}, "l": {"docs": {"scalpel.core.mnode.MNode.make_unit_walker": {"tf": 1}, "scalpel.import_graph.import_graph.ImportGraph.__init__": {"tf": 1}, "scalpel.import_graph.import_graph.ImportGraph.go_to_that_node": {"tf": 1}, "scalpel.import_graph.import_graph.ImportGraph.leaf2root": {"tf": 1}}, "df": 4}}}, "a": {"docs": {}, "df": 0, "d": {"docs": {"scalpel.cfg.builder.CFGBuilder.add_exit": {"tf": 1}}, "df": 1}, "f": {"docs": {"scalpel.import_graph": {"tf": 1}, "scalpel.import_graph.import_graph.ImportGraph.get_leaf_nodes": {"tf": 1.4142135623730951}}, "df": 2}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {"scalpel.call_graph.pycg": {"tf": 1}}, "df": 1}}}}}, "o": {"docs": {}, "df": 0, "p": {"docs": {"scalpel.cfg.builder.CFGBuilder.new_loopguard": {"tf": 1.4142135623730951}}, "df": 1, "'": {"docs": {"scalpel.cfg.builder.CFGBuilder.new_loopguard": {"tf": 1}}, "df": 1}}, "k": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {"scalpel.core.func_call_visitor.CallTransformer": {"tf": 1}}, "df": 1}}}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"scalpel.core.func_call_visitor.CallTransformer": {"tf": 1}, "scalpel.import_graph.import_graph.ImportGraph.go_to_that_node": {"tf": 1.7320508075688772}, "scalpel.import_graph.import_graph.ImportGraph.find_child_by_name": {"tf": 1}, "scalpel.import_graph.import_graph.ImportGraph.find_node_by_name": {"tf": 1}}, "df": 4}}}}}, "e": {"docs": {"scalpel.typeinfer.analysers": {"tf": 1}}, "df": 1, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {"scalpel": {"tf": 1}, "scalpel.SSA": {"tf": 1}}, "df": 2}}}}}, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"scalpel": {"tf": 1}, "scalpel.call_graph.pycg": {"tf": 1}}, "df": 2}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {"scalpel.SSA.const.SSA.compute_SSA": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.build": {"tf": 1}, "scalpel.cfg.model.CFG": {"tf": 1}, "scalpel.typeinfer.analysers.SourceSplitVisitor.visit_Assign": {"tf": 1}, "scalpel.typeinfer.typeinfer.TypeInference.__init__": {"tf": 1}}, "df": 5}, "y": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {"scalpel.cfg.builder.CFGBuilder.build": {"tf": 1}}, "df": 1}}, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"scalpel.import_graph.import_graph.ImportGraph.__init__": {"tf": 1}, "scalpel.typeinfer.typeinfer.TypeInference.__init__": {"tf": 1}}, "df": 2}}}}}}, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"scalpel.typeinfer.typeinfer.TypeInference": {"tf": 1}, "scalpel.typeinfer.typeinfer.TypeInference.infer_types": {"tf": 1}}, "df": 2}}}}}}}, "i": {"docs": {}, "df": 0, "r": {"docs": {"scalpel.typeinfer.analysers.SourceSplitVisitor.visit_Assign": {"tf": 1}}, "df": 1}}}, "d": {"docs": {"scalpel.cfg.model.CFG": {"tf": 1}}, "df": 1, "s": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"scalpel.import_graph.import_graph.ImportGraph.__init__": {"tf": 1}}, "df": 1}}}}}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {"scalpel.import_graph": {"tf": 1}}, "df": 1}}}}}}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {"scalpel.import_graph.import_graph.ImportGraph.build_dir_tree": {"tf": 1}}, "df": 1}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {"scalpel": {"tf": 1}}, "df": 1}}}}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {"scalpel.SSA": {"tf": 1}}, "df": 1}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"scalpel.SSA": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"scalpel.SSA.ssa.SSA.flatten_tuple": {"tf": 1}}, "df": 1}}}}}}, "t": {"docs": {}, "df": 0, "c": {"docs": {"scalpel.SSA": {"tf": 1}, "scalpel.typeinfer.analysers": {"tf": 1}, "scalpel.typeinfer.analysers.ImportTypeMap": {"tf": 1}, "scalpel.typeinfer.analysers.ImportTypeMap.get_imported_type": {"tf": 1.4142135623730951}}, "df": 4}}, "x": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"scalpel.SSA": {"tf": 1}, "scalpel.cfg": {"tf": 1}, "scalpel.cfg.model.Link": {"tf": 1}}, "df": 3}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {"scalpel.SSA.alg.immediate_dominators": {"tf": 1}, "scalpel.SSA.alg.dominance_frontiers": {"tf": 1}}, "df": 2}}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"scalpel.SSA": {"tf": 1}, "scalpel.cfg": {"tf": 1}, "scalpel.cfg.model.Block": {"tf": 1}}, "df": 3}}}}, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {"scalpel.SSA.alg.immediate_dominators": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {"scalpel.SSA.alg.immediate_dominators": {"tf": 1}, "scalpel.SSA.alg.dominance_frontiers": {"tf": 1}, "scalpel.cfg": {"tf": 1}, "scalpel.core.func_call_visitor.CallTransformer": {"tf": 1}, "scalpel.import_graph.import_graph.ImportGraph.go_to_that_node": {"tf": 1.4142135623730951}}, "df": 5}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"scalpel.SSA.const.SSA.get_identifiers": {"tf": 1}, "scalpel.SSA.const.SSA.get_stmt_idents_ctx": {"tf": 1}, "scalpel.SSA.ssa.SSA.get_identifiers": {"tf": 1}, "scalpel.import_graph": {"tf": 1}, "scalpel.typeinfer.analysers": {"tf": 1}, "scalpel.typeinfer.typeinfer.TypeInference.process_file": {"tf": 1}}, "df": 6}}}}}, "i": {"docs": {}, "df": 0, "t": {"1": {"docs": {"scalpel.cfg.builder.merge_exitcases": {"tf": 1.4142135623730951}}, "df": 1}, "2": {"docs": {"scalpel.cfg.builder.merge_exitcases": {"tf": 1}}, "df": 1}, "docs": {"scalpel.cfg.builder.CFGBuilder.add_exit": {"tf": 2}, "scalpel.cfg.model.Block": {"tf": 1.7320508075688772}, "scalpel.cfg.model.CFG": {"tf": 1}}, "df": 3, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {"scalpel.cfg.builder.merge_exitcases": {"tf": 2}, "scalpel.cfg.builder.CFGBuilder.add_exit": {"tf": 1}, "scalpel.cfg.model.Link": {"tf": 1}, "scalpel.cfg.model.Link.get_exitcase": {"tf": 1}}, "df": 4}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"scalpel.core.class_visitor.ClassVisitor": {"tf": 1.4142135623730951}, "scalpel.core.fun_def_visitor.FunDefVisitor": {"tf": 1.4142135623730951}, "scalpel.core.func_call_visitor.FuncCallVisitor": {"tf": 1.4142135623730951}, "scalpel.core.kw_visitor.KWVisitor": {"tf": 1.4142135623730951}, "scalpel.core.source_visitor.SourceVisitor": {"tf": 1.4142135623730951}, "scalpel.core.vars_visitor.VarsVisitor": {"tf": 1.4142135623730951}}, "df": 6}}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"scalpel.SSA.alg.immediate_dominators": {"tf": 1}, "scalpel.SSA.alg.dominance_frontiers": {"tf": 1}, "scalpel.SSA.const.SSA.get_stmt_idents_ctx": {"tf": 1.4142135623730951}, "scalpel.SSA.const.SSA.compute_idom": {"tf": 1}, "scalpel.SSA.const.SSA.compute_DF": {"tf": 1}, "scalpel.core.mnode": {"tf": 1}, "scalpel.core.mnode.MNode.parse_func_defs": {"tf": 1}, "scalpel.core.util.iter_fields": {"tf": 1}, "scalpel.import_graph": {"tf": 1}, "scalpel.import_graph.import_graph.ImportGraph": {"tf": 1}, "scalpel.import_graph.import_graph.ImportGraph.get_leaf_nodes": {"tf": 1}, "scalpel.typeinfer": {"tf": 1}, "scalpel.typeinfer.analysers.SourceSplitVisitor.visit_Assign": {"tf": 1}}, "df": 13}}}, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {"scalpel.call_graph": {"tf": 1}, "scalpel.cfg": {"tf": 1}, "scalpel.typeinfer": {"tf": 1}}, "df": 3}}}}}}, "d": {"docs": {}, "df": 0, "g": {"docs": {"scalpel.call_graph": {"tf": 1}}, "df": 1}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {"scalpel.cfg.builder.CFGBuilder.new_loopguard": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.clean_cfg": {"tf": 1}, "scalpel.cfg.model.Block.is_empty": {"tf": 1.4142135623730951}}, "df": 3}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"scalpel": {"tf": 1}}, "df": 1}}}}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"scalpel.typeinfer.typeinfer.TypeInference.print_types": {"tf": 1}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "v": {"docs": {"scalpel.typeinfer.utilities.resolve_name": {"tf": 1}}, "df": 1}}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {"scalpel": {"tf": 1}}, "df": 1}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "n": {"docs": {"scalpel.SSA": {"tf": 1}}, "df": 1}}, "r": {"docs": {}, "df": 0, "d": {"docs": {"scalpel.core.mnode.MNode.parse_vars": {"tf": 1}, "scalpel.typeinfer.analysers.ClassSplitVisitor": {"tf": 1}, "scalpel.typeinfer.analysers.ReturnStmtVisitor.import_assign_records": {"tf": 1.4142135623730951}, "scalpel.typeinfer.analysers.ReturnStmtVisitor.import_class_assign_records": {"tf": 1.4142135623730951}, "scalpel.typeinfer.analysers.ReturnStmtVisitor.infer_actual_return_value": {"tf": 1.4142135623730951}, "scalpel.typeinfer.analysers.ReturnStmtVisitor.type_infer_CFG": {"tf": 1}}, "df": 6}}}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"scalpel.cfg.builder.CFGBuilder.clean_cfg": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {"scalpel.SSA": {"tf": 1}}, "df": 1}}}, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {"scalpel.SSA.alg.immediate_dominators": {"tf": 1}, "scalpel.SSA.alg.dominance_frontiers": {"tf": 1}}, "df": 2}}}}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "v": {"docs": {"scalpel.SSA": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.clean_cfg": {"tf": 1}, "scalpel.core.func_call_visitor.CallTransformer": {"tf": 1.4142135623730951}}, "df": 3}}}, "l": {"docs": {"scalpel.import_graph.import_graph.ImportGraph.go_to_that_node": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "t": {"docs": {"scalpel.import_graph.import_graph.ImportGraph": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {"scalpel.SSA.alg": {"tf": 1}, "scalpel.SSA.const.SSA.get_stmt_idents_ctx": {"tf": 1}, "scalpel.call_graph": {"tf": 1.4142135623730951}, "scalpel.import_graph": {"tf": 1}}, "df": 4}}}}}}}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "r": {"docs": {"scalpel.SSA.alg": {"tf": 1}, "scalpel.SSA.const.SSA.compute_SSA": {"tf": 1}, "scalpel.cfg.model.CFG.__init__": {"tf": 1}}, "df": 3}}}}, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {"scalpel.SSA.alg.immediate_dominators": {"tf": 1.4142135623730951}, "scalpel.SSA.alg.dominance_frontiers": {"tf": 1.4142135623730951}, "scalpel.SSA.ssa.SSA.flatten_tuple": {"tf": 1}, "scalpel.cfg.builder.invert": {"tf": 1}, "scalpel.cfg.builder.merge_exitcases": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.build": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.build_from_src": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.build_from_file": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.new_block": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.new_loopguard": {"tf": 1}, "scalpel.cfg.model.Block.is_empty": {"tf": 1}, "scalpel.cfg.model.Block.get_source": {"tf": 1}, "scalpel.cfg.model.Block.get_calls": {"tf": 1}, "scalpel.cfg.model.Link.get_exitcase": {"tf": 1}, "scalpel.cfg.model.CFG.get_all_blocks": {"tf": 1}, "scalpel.core.class_visitor.ClassVisitor": {"tf": 1.4142135623730951}, "scalpel.core.fun_def_visitor.FunDefVisitor": {"tf": 1.4142135623730951}, "scalpel.core.func_call_visitor.CallTransformer": {"tf": 2.449489742783178}, "scalpel.core.func_call_visitor.FuncCallVisitor": {"tf": 1.4142135623730951}, "scalpel.core.kw_visitor.KWVisitor": {"tf": 1.4142135623730951}, "scalpel.core.mnode.MNode.parse_vars": {"tf": 1}, "scalpel.core.mnode.MNode.parse_func_calls": {"tf": 1}, "scalpel.core.mnode.MNode.parse_func_defs": {"tf": 1}, "scalpel.core.mnode.MNode.parse_import_stmts": {"tf": 1}, "scalpel.core.mnode.MNode.make_unit_walker": {"tf": 1}, "scalpel.core.source_visitor.SourceVisitor": {"tf": 1.4142135623730951}, "scalpel.core.vars_visitor.VarsVisitor": {"tf": 1.4142135623730951}, "scalpel.import_graph.import_graph.ImportGraph.get_leaf_nodes": {"tf": 1}, "scalpel.import_graph.import_graph.ImportGraph.parse_import": {"tf": 1}, "scalpel.import_graph.import_graph.ImportGraph.extract_class_from_source": {"tf": 1}, "scalpel.import_graph.import_graph.ImportGraph.leaf2root": {"tf": 1}, "scalpel.typeinfer.analysers.ReturnStmtVisitor": {"tf": 1}, "scalpel.typeinfer.analysers.ReturnStmtVisitor.import_assign_records": {"tf": 1}, "scalpel.typeinfer.analysers.ReturnStmtVisitor.import_class_assign_records": {"tf": 1}, "scalpel.typeinfer.analysers.ReturnStmtVisitor.infer_actual_return_value": {"tf": 1.4142135623730951}, "scalpel.typeinfer.analysers.ReturnStmtVisitor.type_infer_CFG": {"tf": 1}, "scalpel.typeinfer.analysers.Heuristics.get_bin_op_involved": {"tf": 1}, "scalpel.typeinfer.analysers.Heuristics.in_bin_op": {"tf": 1}, "scalpel.typeinfer.utilities.get_built_in_types": {"tf": 1}, "scalpel.typeinfer.utilities.get_type": {"tf": 1}, "scalpel.typeinfer.utilities.is_camel_case": {"tf": 1}, "scalpel.typeinfer.utilities.parse_module": {"tf": 1}, "scalpel.typeinfer.utilities.is_imported_fun": {"tf": 1}, "scalpel.typeinfer.utilities.get_function_comment": {"tf": 1}, "scalpel.typeinfer.utilities.is_done": {"tf": 1}}, "df": 45}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {"scalpel.core.mnode.MNode.parse_vars": {"tf": 1}, "scalpel.core.mnode.MNode.parse_func_calls": {"tf": 1}}, "df": 2}}}, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "v": {"docs": {"scalpel.typeinfer.analysers.ClassDefinitionMap": {"tf": 1}, "scalpel.typeinfer.analysers.FunctionDefinitionMap": {"tf": 1}, "scalpel.typeinfer.analysers.VariableAssignmentMap": {"tf": 1}, "scalpel.typeinfer.analysers.BinaryOperationMap": {"tf": 1}, "scalpel.typeinfer.analysers.SourceSplitVisitor": {"tf": 1}, "scalpel.typeinfer.analysers.ClassSplitVisitor": {"tf": 1}}, "df": 6}}}}}, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"scalpel.SSA.alg.immediate_dominators": {"tf": 1}, "scalpel.SSA.alg.dominance_frontiers": {"tf": 1}, "scalpel.call_graph.pycg": {"tf": 1}}, "df": 3}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"scalpel.call_graph": {"tf": 1}}, "df": 1}}}}}}, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"scalpel.call_graph": {"tf": 1}, "scalpel.cfg": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.build": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.add_statement": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.add_exit": {"tf": 1}, "scalpel.cfg.model.Block": {"tf": 1}, "scalpel.cfg.model.Link": {"tf": 1.4142135623730951}, "scalpel.cfg.model.CFG": {"tf": 1.4142135623730951}, "scalpel.import_graph": {"tf": 1}, "scalpel.import_graph.import_graph.ImportGraph.get_leaf_nodes": {"tf": 1}, "scalpel.import_graph.import_graph.ImportGraph.go_to_that_node": {"tf": 1}}, "df": 11, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"scalpel.SSA.const.SSA.compute_SSA": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {"scalpel.core.func_call_visitor.CallTransformer": {"tf": 1.7320508075688772}}, "df": 1}}}}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {"scalpel.SSA.const.SSA.compute_SSA": {"tf": 1}}, "df": 1}}}, "w": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"scalpel.core.func_call_visitor.CallTransformer": {"tf": 1}, "scalpel.core.mnode.MNode.rewrite": {"tf": 1}}, "df": 2, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "(": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {"scalpel.core.func_call_visitor.CallTransformer": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}}}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {"scalpel.SSA": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {"scalpel.SSA.alg.immediate_dominators": {"tf": 1}, "scalpel.SSA.alg.dominance_frontiers": {"tf": 1}}, "df": 2}}, "n": {"docs": {}, "df": 0, "k": {"docs": {"scalpel.core.mnode.MNode.parse_vars": {"tf": 1}, "scalpel.core.mnode.MNode.parse_func_calls": {"tf": 1}}, "df": 2}}}, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {"scalpel.cfg.builder.CFGBuilder.build": {"tf": 1}, "scalpel.typeinfer": {"tf": 1}, "scalpel.typeinfer.analysers.ImportTypeMap.__init__": {"tf": 1.4142135623730951}, "scalpel.typeinfer.analysers.ClassDefinitionMap.__init__": {"tf": 1.4142135623730951}, "scalpel.typeinfer.analysers.FunctionDefinitionMap.__init__": {"tf": 1.4142135623730951}, "scalpel.typeinfer.analysers.VariableAssignmentMap.__init__": {"tf": 1.4142135623730951}, "scalpel.typeinfer.analysers.BinaryOperationMap.__init__": {"tf": 1.4142135623730951}, "scalpel.typeinfer.analysers.Heuristics.heuristic_two": {"tf": 1}, "scalpel.typeinfer.typeinfer.TypeInference.__init__": {"tf": 1}}, "df": 9}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {"scalpel": {"tf": 1}}, "df": 1}}, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {"scalpel.SSA": {"tf": 1}, "scalpel.SSA.const.SSA.compute_SSA": {"tf": 1}, "scalpel.SSA.const.SSA.get_stmt_idents_ctx": {"tf": 1.7320508075688772}, "scalpel.core.mnode.MNode.parse_vars": {"tf": 1}, "scalpel.typeinfer": {"tf": 1}, "scalpel.typeinfer.analysers.ImportTypeMap": {"tf": 1}, "scalpel.typeinfer.analysers.ImportTypeMap.get_imported_type": {"tf": 1.4142135623730951}, "scalpel.typeinfer.analysers.VariableAssignmentMap": {"tf": 1}, "scalpel.typeinfer.analysers.VariableAssignmentMap.map": {"tf": 1}, "scalpel.typeinfer.analysers.Heuristics.heuristic_eight": {"tf": 1}, "scalpel.typeinfer.analysers.Heuristics.heuristic_twelve": {"tf": 1}, "scalpel.typeinfer.analysers.Heuristics.in_bin_op": {"tf": 1.7320508075688772}, "scalpel.typeinfer.classes.ScalpelVariable": {"tf": 1}, "scalpel.typeinfer.classes.BinaryOperation": {"tf": 1}}, "df": 14, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"scalpel.typeinfer.analysers.Heuristics.get_bin_op_involved": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}, "/": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"scalpel.typeinfer.analysers.Heuristics.get_bin_op_involved": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}}}, "l": {"docs": {}, "df": 0, "u": {"docs": {"scalpel.SSA": {"tf": 1.7320508075688772}, "scalpel.SSA.const.SSA.compute_SSA": {"tf": 1}, "scalpel.SSA.const.SSA.get_stmt_idents_ctx": {"tf": 1.4142135623730951}, "scalpel.cfg.builder.CFGBuilder.build": {"tf": 1}, "scalpel.core.class_visitor.ClassVisitor": {"tf": 1.4142135623730951}, "scalpel.core.fun_def_visitor.FunDefVisitor": {"tf": 1.4142135623730951}, "scalpel.core.func_call_visitor.CallTransformer": {"tf": 2}, "scalpel.core.func_call_visitor.FuncCallVisitor": {"tf": 1.4142135623730951}, "scalpel.core.kw_visitor.KWVisitor": {"tf": 1.4142135623730951}, "scalpel.core.source_visitor.SourceVisitor": {"tf": 1.4142135623730951}, "scalpel.core.util.iter_fields": {"tf": 1}, "scalpel.core.vars_visitor.VarsVisitor": {"tf": 1.4142135623730951}, "scalpel.typeinfer.analysers.ReturnStmtVisitor.infer_actual_return_value": {"tf": 1}, "scalpel.typeinfer.analysers.ReturnStmtVisitor.type_infer_CFG": {"tf": 1}, "scalpel.typeinfer.utilities.check_consistent_list_types": {"tf": 1}, "scalpel.typeinfer.utilities.is_done": {"tf": 1.4142135623730951}}, "df": 16, "e": {"docs": {}, "df": 0, "=": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "(": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "=": {"docs": {}, "df": 0, "'": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"scalpel.core.func_call_visitor.CallTransformer": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"scalpel.call_graph": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {"scalpel.call_graph.pycg": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"scalpel.cfg.builder.CFGBuilder.clean_cfg": {"tf": 1.4142135623730951}, "scalpel.core.class_visitor.ClassVisitor": {"tf": 1.7320508075688772}, "scalpel.core.fun_def_visitor.FunDefVisitor": {"tf": 1.7320508075688772}, "scalpel.core.fun_def_visitor.FunDefVisitor.visit": {"tf": 1}, "scalpel.core.func_call_visitor.FuncCallVisitor": {"tf": 1.7320508075688772}, "scalpel.core.kw_visitor.KWVisitor": {"tf": 1.7320508075688772}, "scalpel.core.source_visitor.SourceVisitor": {"tf": 1.7320508075688772}, "scalpel.core.vars_visitor.VarsVisitor": {"tf": 1.7320508075688772}, "scalpel.import_graph.import_graph.ImportGraph.go_to_that_node": {"tf": 1.4142135623730951}, "scalpel.typeinfer.analysers.SourceSplitVisitor.visit_Assign": {"tf": 2}}, "df": 10, "o": {"docs": {}, "df": 0, "r": {"docs": {"scalpel.core.class_visitor.ClassVisitor": {"tf": 2.6457513110645907}, "scalpel.core.fun_def_visitor.FunDefVisitor": {"tf": 2.6457513110645907}, "scalpel.core.func_call_visitor.CallTransformer": {"tf": 1.7320508075688772}, "scalpel.core.func_call_visitor.FuncCallVisitor": {"tf": 2.6457513110645907}, "scalpel.core.kw_visitor.KWVisitor": {"tf": 2.6457513110645907}, "scalpel.core.source_visitor.SourceVisitor": {"tf": 2.6457513110645907}, "scalpel.core.vars_visitor.VarsVisitor": {"tf": 2.6457513110645907}, "scalpel.typeinfer.analysers": {"tf": 1}, "scalpel.typeinfer.visitors": {"tf": 1}}, "df": 9}}, "_": {"docs": {"scalpel.core.class_visitor.ClassVisitor": {"tf": 1}, "scalpel.core.fun_def_visitor.FunDefVisitor": {"tf": 1}, "scalpel.core.func_call_visitor.FuncCallVisitor": {"tf": 1}, "scalpel.core.kw_visitor.KWVisitor": {"tf": 1}, "scalpel.core.source_visitor.SourceVisitor": {"tf": 1}, "scalpel.core.vars_visitor.VarsVisitor": {"tf": 1}}, "df": 6, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"scalpel.core.class_visitor.ClassVisitor": {"tf": 1}, "scalpel.core.fun_def_visitor.FunDefVisitor": {"tf": 1}, "scalpel.core.func_call_visitor.FuncCallVisitor": {"tf": 1}, "scalpel.core.kw_visitor.KWVisitor": {"tf": 1}, "scalpel.core.source_visitor.SourceVisitor": {"tf": 1}, "scalpel.core.vars_visitor.VarsVisitor": {"tf": 1}}, "df": 6}}}}}}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "(": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "f": {"docs": {"scalpel.core.func_call_visitor.CallTransformer": {"tf": 1}}, "df": 1}}}}}}}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"scalpel.import_graph.import_graph.ImportGraph.go_to_that_node": {"tf": 1}}, "df": 1}}}}}, "(": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {"scalpel.core.func_call_visitor.CallTransformer": {"tf": 1}}, "df": 1}}}}}}, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {"scalpel.cfg.model.CFG.build_visual": {"tf": 1.7320508075688772}}, "df": 1}}}}}}}}, "g": {"docs": {"scalpel.SSA.alg": {"tf": 1}, "scalpel.SSA.alg.immediate_dominators": {"tf": 2.23606797749979}, "scalpel.SSA.alg.dominance_frontiers": {"tf": 2.23606797749979}, "scalpel.typeinfer.analysers": {"tf": 1}}, "df": 4, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"scalpel.SSA": {"tf": 1.4142135623730951}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "h": {"docs": {"scalpel.SSA.alg": {"tf": 1}, "scalpel.SSA.alg.immediate_dominators": {"tf": 1.4142135623730951}, "scalpel.SSA.alg.dominance_frontiers": {"tf": 1.4142135623730951}, "scalpel.SSA.const.SSA": {"tf": 1}, "scalpel.SSA.const.SSA.compute_SSA": {"tf": 1}, "scalpel.SSA.const.SSA.compute_idom": {"tf": 1}, "scalpel.SSA.const.SSA.compute_DF": {"tf": 1}, "scalpel.SSA.ssa.SSA": {"tf": 1}, "scalpel.call_graph": {"tf": 1.4142135623730951}, "scalpel.call_graph.pycg": {"tf": 1.4142135623730951}, "scalpel.cfg": {"tf": 1.4142135623730951}, "scalpel.cfg.builder.CFGBuilder": {"tf": 1.4142135623730951}, "scalpel.cfg.model": {"tf": 1}, "scalpel.cfg.model.Block": {"tf": 1}, "scalpel.cfg.model.Link": {"tf": 1}, "scalpel.cfg.model.CFG": {"tf": 1.4142135623730951}, "scalpel.cfg.model.CFG.__init__": {"tf": 1}, "scalpel.import_graph": {"tf": 2}, "scalpel.import_graph.import_graph": {"tf": 1}, "scalpel.import_graph.import_graph.ImportGraph": {"tf": 1}, "scalpel.import_graph.import_graph.ImportGraph.__init__": {"tf": 1}}, "df": 21, "(": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "g": {"docs": {"scalpel.cfg": {"tf": 1}}, "df": 1}}}}, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {"scalpel.cfg.model.CFG.build_visual": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {"scalpel.core.mnode": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"scalpel.SSA": {"tf": 1}}, "df": 1, "n": {"docs": {"scalpel.SSA.const.SSA": {"tf": 1}, "scalpel.SSA.const.SSA.get_identifiers": {"tf": 1}, "scalpel.SSA.const.SSA.compute_SSA": {"tf": 1}, "scalpel.SSA.ssa.SSA": {"tf": 1}, "scalpel.SSA.ssa.SSA.flatten_tuple": {"tf": 1}, "scalpel.SSA.ssa.SSA.get_identifiers": {"tf": 1}, "scalpel.SSA.ssa.SSA.compute_undefined_names": {"tf": 1}, "scalpel.call_graph": {"tf": 1}, "scalpel.cfg": {"tf": 1}, "scalpel.core.mnode": {"tf": 1}, "scalpel.core.mnode.MNode": {"tf": 1}, "scalpel.import_graph": {"tf": 1}, "scalpel.import_graph.import_graph.ImportGraph.go_to_that_node": {"tf": 1.4142135623730951}, "scalpel.import_graph.import_graph.ImportGraph.leaf2root": {"tf": 1}}, "df": 14}}}}, "t": {"docs": {"scalpel.SSA.alg.immediate_dominators": {"tf": 2.449489742783178}, "scalpel.SSA.alg.dominance_frontiers": {"tf": 2.449489742783178}}, "df": 2}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"scalpel.SSA.const.SSA.compute_SSA": {"tf": 1}, "scalpel.SSA.ssa.SSA.compute_undefined_names": {"tf": 1}, "scalpel.call_graph.pycg": {"tf": 1.4142135623730951}, "scalpel.cfg.model.CFG.get_all_blocks": {"tf": 1}, "scalpel.core.mnode": {"tf": 1}, "scalpel.core.mnode.MNode.make_unit_walker": {"tf": 1}, "scalpel.import_graph.import_graph.ImportGraph.leaf2root": {"tf": 1}, "scalpel.typeinfer.analysers.Heuristics.heuristic_five": {"tf": 1}, "scalpel.typeinfer.analysers.Heuristics.heuristic_nine": {"tf": 1}, "scalpel.typeinfer.utilities.generate_ast": {"tf": 1}}, "df": 10, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"scalpel.core.class_visitor.ClassVisitor": {"tf": 1}, "scalpel.core.fun_def_visitor.FunDefVisitor": {"tf": 1}, "scalpel.core.func_call_visitor.CallTransformer": {"tf": 1}, "scalpel.core.func_call_visitor.FuncCallVisitor": {"tf": 1}, "scalpel.core.kw_visitor.KWVisitor": {"tf": 1}, "scalpel.core.source_visitor.SourceVisitor": {"tf": 1}, "scalpel.core.vars_visitor.VarsVisitor": {"tf": 1}}, "df": 7}}}}}}}}}}}, "t": {"docs": {"scalpel.typeinfer.utilities.TypeInferCallTransformer": {"tf": 1}, "scalpel.typeinfer.utilities.FuncCallVisitor": {"tf": 1}, "scalpel.typeinfer.utilities.get_built_in_types": {"tf": 1}, "scalpel.typeinfer.visitors.FuncCallVisitor": {"tf": 1}, "scalpel.typeinfer.visitors.TypeInferCallTransformer": {"tf": 1}}, "df": 5}}, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"scalpel.cfg.builder.CFGBuilder.new_loopguard": {"tf": 1.7320508075688772}}, "df": 1}}}}}, "b": {"docs": {}, "df": 0, "e": {"docs": {"scalpel.cfg.builder.CFGBuilder.build": {"tf": 1.7320508075688772}, "scalpel.cfg.builder.CFGBuilder.build_from_src": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.build_from_file": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.new_functionCFG": {"tf": 1.4142135623730951}, "scalpel.cfg.builder.CFGBuilder.new_ClassCFG": {"tf": 1.4142135623730951}, "scalpel.typeinfer.analysers.SourceSplitVisitor.visit_Assign": {"tf": 1}, "scalpel.typeinfer.analysers.Heuristics.heuristic_five": {"tf": 1}, "scalpel.typeinfer.analysers.Heuristics.heuristic_six": {"tf": 1}, "scalpel.typeinfer.analysers.Heuristics.heuristic_seven": {"tf": 1}, "scalpel.typeinfer.analysers.Heuristics.heuristic_eight": {"tf": 1}, "scalpel.typeinfer.analysers.Heuristics.heuristic_nine": {"tf": 1}, "scalpel.typeinfer.analysers.Heuristics.heuristic_twelve": {"tf": 1}, "scalpel.typeinfer.visitors.get_args": {"tf": 1}, "scalpel.typeinfer.visitors.get_call_type": {"tf": 1}}, "df": 14, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"scalpel.SSA": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"scalpel.SSA": {"tf": 1}}, "df": 1}}}, "t": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"scalpel.SSA.const.SSA.get_stmt_idents_ctx": {"tf": 1}, "scalpel.call_graph": {"tf": 1.4142135623730951}, "scalpel.cfg": {"tf": 1}, "scalpel.cfg.model.Link": {"tf": 1.4142135623730951}, "scalpel.cfg.model.CFG": {"tf": 1}, "scalpel.typeinfer.classes.BinaryOperation": {"tf": 1}}, "df": 6}}}}}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"scalpel.core.class_visitor.ClassVisitor": {"tf": 1}, "scalpel.core.fun_def_visitor.FunDefVisitor": {"tf": 1}, "scalpel.core.func_call_visitor.FuncCallVisitor": {"tf": 1}, "scalpel.core.kw_visitor.KWVisitor": {"tf": 1}, "scalpel.core.source_visitor.SourceVisitor": {"tf": 1}, "scalpel.core.vars_visitor.VarsVisitor": {"tf": 1}}, "df": 6}}}}}}}, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"scalpel.SSA.const.SSA": {"tf": 1}, "scalpel.SSA.ssa.SSA": {"tf": 1}, "scalpel.call_graph": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.build": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.build_from_src": {"tf": 1.4142135623730951}, "scalpel.cfg.builder.CFGBuilder.build_from_file": {"tf": 1.4142135623730951}, "scalpel.cfg.model.CFG.build_visual": {"tf": 1.4142135623730951}, "scalpel.core.mnode.MNode": {"tf": 1}, "scalpel.core.mnode.MNode.gen_ast": {"tf": 1}, "scalpel.import_graph.import_graph.ImportGraph.build_dir_tree": {"tf": 1}}, "df": 11, "e": {"docs": {}, "df": 0, "r": {"docs": {"scalpel.cfg.builder.CFGBuilder": {"tf": 1.4142135623730951}}, "df": 1}}}, "t": {"docs": {"scalpel.cfg.builder.CFGBuilder.build": {"tf": 2}, "scalpel.cfg.builder.CFGBuilder.build_from_src": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.build_from_file": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.new_functionCFG": {"tf": 1.4142135623730951}, "scalpel.cfg.builder.CFGBuilder.new_ClassCFG": {"tf": 1.4142135623730951}, "scalpel.typeinfer.utilities.get_built_in_types": {"tf": 1.4142135623730951}}, "df": 6}}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"scalpel.SSA.const.SSA": {"tf": 1}, "scalpel.SSA.ssa.SSA": {"tf": 1}, "scalpel.core.class_visitor.ClassVisitor": {"tf": 1}, "scalpel.core.fun_def_visitor.FunDefVisitor": {"tf": 1}, "scalpel.core.func_call_visitor.FuncCallVisitor": {"tf": 1}, "scalpel.core.kw_visitor.KWVisitor": {"tf": 1}, "scalpel.core.source_visitor.SourceVisitor": {"tf": 1}, "scalpel.core.vars_visitor.VarsVisitor": {"tf": 1}, "scalpel.typeinfer.analysers.ClassSplitVisitor": {"tf": 1}}, "df": 9}, "i": {"docs": {}, "df": 0, "c": {"docs": {"scalpel.call_graph": {"tf": 1}, "scalpel.cfg": {"tf": 1}, "scalpel.cfg.model.Block": {"tf": 1}, "scalpel.cfg.model.CFG": {"tf": 1}}, "df": 4}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"scalpel.SSA.const.SSA.compute_idom": {"tf": 1.4142135623730951}, "scalpel.SSA.const.SSA.compute_DF": {"tf": 1.4142135623730951}, "scalpel.cfg": {"tf": 1.7320508075688772}, "scalpel.cfg.builder.CFGBuilder.build": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.new_block": {"tf": 1.4142135623730951}, "scalpel.cfg.builder.CFGBuilder.add_statement": {"tf": 2}, "scalpel.cfg.builder.CFGBuilder.add_exit": {"tf": 2.23606797749979}, "scalpel.cfg.builder.CFGBuilder.new_loopguard": {"tf": 2}, "scalpel.cfg.builder.CFGBuilder.clean_cfg": {"tf": 2}, "scalpel.cfg.model.Block": {"tf": 1.4142135623730951}, "scalpel.cfg.model.Block.at": {"tf": 1}, "scalpel.cfg.model.Block.is_empty": {"tf": 1.4142135623730951}, "scalpel.cfg.model.Block.get_source": {"tf": 1}, "scalpel.cfg.model.Block.get_calls": {"tf": 1.4142135623730951}, "scalpel.cfg.model.Link": {"tf": 1.4142135623730951}, "scalpel.cfg.model.CFG": {"tf": 2}, "scalpel.cfg.model.CFG.get_all_blocks": {"tf": 1.4142135623730951}}, "df": 17}}}}, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {"scalpel.cfg.builder.CFGBuilder.build": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.new_functionCFG": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.new_ClassCFG": {"tf": 1}, "scalpel.cfg.model.Block.is_empty": {"tf": 1}, "scalpel.cfg.model.CFG.build_visual": {"tf": 1}, "scalpel.typeinfer.analysers.Heuristics.in_bin_op": {"tf": 1}}, "df": 6}}}}}, "t": {"docs": {}, "df": 0, "h": {"docs": {"scalpel.core.mnode": {"tf": 1}, "scalpel.import_graph.import_graph.ImportGraph.go_to_that_node": {"tf": 1}}, "df": 2}}}, "f": {"docs": {"scalpel.cfg.model.CFG.get_all_blocks": {"tf": 1}}, "df": 1}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {"scalpel.typeinfer.analysers.BinaryOperatorMap": {"tf": 1}, "scalpel.typeinfer.analysers.BinaryOperationMap": {"tf": 1}, "scalpel.typeinfer.analysers.BinaryOperationMap.map": {"tf": 1}, "scalpel.typeinfer.analysers.Heuristics.get_bin_op_involved": {"tf": 1.4142135623730951}, "scalpel.typeinfer.analysers.Heuristics.in_bin_op": {"tf": 1.7320508075688772}, "scalpel.typeinfer.classes.BinaryOperation": {"tf": 1}}, "df": 6}, "y": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"scalpel.typeinfer.analysers.Heuristics.get_bin_op_involved": {"tf": 1}, "scalpel.typeinfer.analysers.Heuristics.in_bin_op": {"tf": 1}}, "df": 2}}}}}}}}}}}, "d": {"docs": {"scalpel.SSA.alg.immediate_dominators": {"tf": 1}, "scalpel.SSA.alg.dominance_frontiers": {"tf": 1}}, "df": 2, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"scalpel.SSA": {"tf": 1.4142135623730951}}, "df": 1}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"scalpel.SSA": {"tf": 1}, "scalpel.typeinfer.analysers.Heuristics.in_bin_op": {"tf": 1}, "scalpel.typeinfer.utilities.is_camel_case": {"tf": 1}, "scalpel.typeinfer.utilities.is_imported_fun": {"tf": 1}, "scalpel.typeinfer.utilities.is_done": {"tf": 1}}, "df": 5}}}}, "c": {"docs": {}, "df": 0, "t": {"docs": {"scalpel.SSA": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {"scalpel.typeinfer": {"tf": 1}}, "df": 1}}}}, "f": {"docs": {"scalpel.core.func_call_visitor.CallTransformer": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"scalpel.SSA.const.SSA.compute_SSA": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.new_functionCFG": {"tf": 1.4142135623730951}, "scalpel.cfg.builder.CFGBuilder.new_ClassCFG": {"tf": 1.4142135623730951}, "scalpel.core.mnode.MNode.parse_func_defs": {"tf": 1}, "scalpel.import_graph.import_graph.ImportGraph.go_to_that_node": {"tf": 1}, "scalpel.import_graph.import_graph.ImportGraph.extract_class_from_source": {"tf": 1}, "scalpel.typeinfer.analysers.ClassDefinitionMap": {"tf": 1}, "scalpel.typeinfer.analysers.ClassDefinitionMap.map": {"tf": 1}, "scalpel.typeinfer.analysers.FunctionDefinitionMap": {"tf": 1}, "scalpel.typeinfer.analysers.FunctionDefinitionMap.map": {"tf": 1}, "scalpel.typeinfer.analysers.SourceSplitVisitor.visit_Assign": {"tf": 1}}, "df": 11}}}}, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"scalpel.core.class_visitor.ClassVisitor": {"tf": 1}, "scalpel.core.fun_def_visitor.FunDefVisitor": {"tf": 1}, "scalpel.core.func_call_visitor.FuncCallVisitor": {"tf": 1}, "scalpel.core.kw_visitor.KWVisitor": {"tf": 1}, "scalpel.core.source_visitor.SourceVisitor": {"tf": 1}, "scalpel.core.vars_visitor.VarsVisitor": {"tf": 1}}, "df": 6}}}}, "_": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"scalpel.typeinfer.analysers.SourceSplitVisitor.visit_Assign": {"tf": 1}}, "df": 1}}}}}}}}, "l": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"scalpel.SSA.const.SSA.get_stmt_idents_ctx": {"tf": 1.4142135623730951}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {"scalpel.SSA.const.SSA.get_stmt_idents_ctx": {"tf": 1.4142135623730951}}, "df": 1}}}, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"scalpel.call_graph": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"scalpel.import_graph": {"tf": 1}}, "df": 1}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {"scalpel.typeinfer.analysers.Heuristics.heuristic_eight": {"tf": 1}, "scalpel.typeinfer.analysers.Heuristics.heuristic_twelve": {"tf": 1}}, "df": 2}}}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"scalpel.SSA": {"tf": 1}, "scalpel.core.mnode.MNode.parse_import_stmts": {"tf": 1}, "scalpel.import_graph": {"tf": 1}, "scalpel.import_graph.import_graph.ImportGraph": {"tf": 1}, "scalpel.import_graph.import_graph.ImportGraph.parse_import": {"tf": 1}, "scalpel.typeinfer.analysers": {"tf": 1}, "scalpel.typeinfer.classes": {"tf": 1}}, "df": 7, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {"scalpel.SSA.alg": {"tf": 1}, "scalpel.import_graph": {"tf": 1}}, "df": 2}}}}}}}}, "[": {"docs": {}, "df": 0, "'": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {"scalpel.core.func_call_visitor.CallTransformer": {"tf": 1}}, "df": 1}}}}}}}}, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"scalpel.SSA.alg": {"tf": 1}, "scalpel.SSA.alg.immediate_dominators": {"tf": 2.6457513110645907}, "scalpel.SSA.alg.dominance_frontiers": {"tf": 2.23606797749979}, "scalpel.SSA.const.SSA.compute_SSA": {"tf": 1.7320508075688772}, "scalpel.SSA.const.SSA.compute_idom": {"tf": 1}, "scalpel.SSA.const.SSA.compute_DF": {"tf": 1}}, "df": 6, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {"scalpel.SSA.alg.dominance_frontiers": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}, "t": {"docs": {"scalpel.cfg.model.CFG.build_visual": {"tf": 1}, "scalpel.core.mnode.MNode.parse_vars": {"tf": 1}, "scalpel.core.mnode.MNode.parse_func_calls": {"tf": 1}, "scalpel.import_graph.import_graph.ImportGraph.leaf2root": {"tf": 1}}, "df": 4}, "n": {"docs": {}, "df": 0, "'": {"docs": {}, "df": 0, "t": {"docs": {"scalpel.core.class_visitor.ClassVisitor": {"tf": 1}, "scalpel.core.fun_def_visitor.FunDefVisitor": {"tf": 1}, "scalpel.core.func_call_visitor.FuncCallVisitor": {"tf": 1}, "scalpel.core.kw_visitor.KWVisitor": {"tf": 1}, "scalpel.core.source_visitor.SourceVisitor": {"tf": 1}, "scalpel.core.vars_visitor.VarsVisitor": {"tf": 1}}, "df": 6}}}}, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"scalpel.SSA.alg.immediate_dominators": {"tf": 1}, "scalpel.SSA.alg.dominance_frontiers": {"tf": 1}, "scalpel.core.util.iter_child_nodes": {"tf": 1}, "scalpel.core.util.iter_stmt_children": {"tf": 1}}, "df": 4, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {"scalpel.import_graph.import_graph.ImportGraph.build_dir_tree": {"tf": 1}}, "df": 1}}}}}}}, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "h": {"docs": {"scalpel.SSA.alg.immediate_dominators": {"tf": 1.4142135623730951}, "scalpel.SSA.alg.dominance_frontiers": {"tf": 1.4142135623730951}}, "df": 2}}}}}, "c": {"docs": {}, "df": 0, "t": {"docs": {"scalpel.SSA.alg.immediate_dominators": {"tf": 1.4142135623730951}, "scalpel.SSA.alg.dominance_frontiers": {"tf": 1.4142135623730951}}, "df": 2, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {"scalpel.core.mnode.MNode.parse_func_defs": {"tf": 1.4142135623730951}, "scalpel.core.mnode.MNode.parse_import_stmts": {"tf": 1}, "scalpel.typeinfer": {"tf": 1}, "scalpel.typeinfer.analysers.SourceSplitVisitor.visit_Assign": {"tf": 1.4142135623730951}, "scalpel.typeinfer.typeinfer.TypeInference.get_types": {"tf": 1}, "scalpel.typeinfer.utilities.get_built_in_types": {"tf": 1}, "scalpel.typeinfer.utilities.get_type": {"tf": 1}, "scalpel.typeinfer.utilities.is_imported_fun": {"tf": 1}}, "df": 8}}}}}}}}, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {"scalpel.call_graph.pycg": {"tf": 1}}, "df": 1}}}}}, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {"scalpel.call_graph.pycg": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {"scalpel.cfg": {"tf": 1}}, "df": 1}}}}}, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"scalpel.import_graph.import_graph.ImportGraph": {"tf": 1}, "scalpel.import_graph.import_graph.ImportGraph.go_to_that_node": {"tf": 1}}, "df": 2}}}}}, "f": {"docs": {"scalpel.SSA.alg.dominance_frontiers": {"tf": 1.7320508075688772}}, "df": 1}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"scalpel.SSA.const.SSA.compute_SSA": {"tf": 1}, "scalpel.core.class_visitor.ClassVisitor": {"tf": 1}, "scalpel.core.fun_def_visitor.FunDefVisitor": {"tf": 1}, "scalpel.core.func_call_visitor.FuncCallVisitor": {"tf": 1}, "scalpel.core.kw_visitor.KWVisitor": {"tf": 1}, "scalpel.core.source_visitor.SourceVisitor": {"tf": 1}, "scalpel.core.vars_visitor.VarsVisitor": {"tf": 1}}, "df": 7}}}}, "u": {"docs": {"scalpel.SSA.alg.dominance_frontiers": {"tf": 1.4142135623730951}}, "df": 1, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {"scalpel.SSA": {"tf": 1}, "scalpel.typeinfer.utilities": {"tf": 1}}, "df": 2}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"scalpel.SSA.alg.immediate_dominators": {"tf": 1}, "scalpel.SSA.alg.dominance_frontiers": {"tf": 1}}, "df": 2}}}}}, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"scalpel.SSA.ssa.SSA.compute_undefined_names": {"tf": 1}}, "df": 1}}}, "r": {"docs": {"scalpel.import_graph.import_graph.ImportGraph": {"tf": 1}, "scalpel.import_graph.import_graph.ImportGraph.go_to_that_node": {"tf": 1}, "scalpel.typeinfer.analysers.SourceSplitVisitor.visit_Assign": {"tf": 1}}, "df": 3, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"scalpel.import_graph": {"tf": 1}}, "df": 1}}}}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {"scalpel.cfg": {"tf": 1}, "scalpel.core.mnode.MNode.make_unit_walker": {"tf": 1}}, "df": 2}, "q": {"docs": {}, "df": 0, "u": {"docs": {"scalpel.cfg.builder.CFGBuilder.new_block": {"tf": 1}, "scalpel.cfg.model.CFG": {"tf": 1}}, "df": 2}}}}, "s": {"docs": {"scalpel.SSA.const.SSA.compute_SSA": {"tf": 1.4142135623730951}, "scalpel.cfg": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.new_loopguard": {"tf": 1}, "scalpel.cfg.model.CFG.build_visual": {"tf": 1}, "scalpel.core.class_visitor.ClassVisitor": {"tf": 1.4142135623730951}, "scalpel.core.fun_def_visitor.FunDefVisitor": {"tf": 1.4142135623730951}, "scalpel.core.func_call_visitor.CallTransformer": {"tf": 1.4142135623730951}, "scalpel.core.func_call_visitor.FuncCallVisitor": {"tf": 1.4142135623730951}, "scalpel.core.kw_visitor.KWVisitor": {"tf": 1.4142135623730951}, "scalpel.core.source_visitor.SourceVisitor": {"tf": 1.4142135623730951}, "scalpel.core.vars_visitor.VarsVisitor": {"tf": 1.4142135623730951}, "scalpel.import_graph.import_graph.ImportGraph.go_to_that_node": {"tf": 1}, "scalpel.import_graph.import_graph.ImportGraph.find_child_by_name": {"tf": 1}, "scalpel.import_graph.import_graph.ImportGraph.find_node_by_name": {"tf": 1}, "scalpel.typeinfer.visitors": {"tf": 1}}, "df": 15, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"scalpel.cfg.builder.CFGBuilder.clean_cfg": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {"scalpel.core.mnode": {"tf": 1}, "scalpel.import_graph.import_graph.ImportGraph": {"tf": 1}}, "df": 2}}, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"scalpel.core.func_call_visitor.CallTransformer": {"tf": 1}}, "df": 1}}}}}, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "x": {"docs": {"scalpel.SSA.alg": {"tf": 1.7320508075688772}}, "df": 1, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {"scalpel.SSA.alg.immediate_dominators": {"tf": 1}, "scalpel.SSA.alg.dominance_frontiers": {"tf": 1}}, "df": 2}}}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"scalpel.SSA.alg.immediate_dominators": {"tf": 1}, "scalpel.SSA.alg.dominance_frontiers": {"tf": 1}}, "df": 2}}}}}}}}}}}, "g": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"scalpel.cfg.builder.invert": {"tf": 1.4142135623730951}}, "df": 1}}}, "w": {"docs": {"scalpel.cfg.builder.CFGBuilder.new_block": {"tf": 1.7320508075688772}, "scalpel.cfg.builder.CFGBuilder.add_exit": {"tf": 1.4142135623730951}, "scalpel.cfg.builder.CFGBuilder.new_loopguard": {"tf": 1.7320508075688772}, "scalpel.cfg.builder.CFGBuilder.new_functionCFG": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.new_ClassCFG": {"tf": 1}}, "df": 5}, "x": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"scalpel.cfg.builder.CFGBuilder.add_exit": {"tf": 1}}, "df": 1}}}}}}}}, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"scalpel.SSA.alg.immediate_dominators": {"tf": 2.449489742783178}, "scalpel.SSA.alg.dominance_frontiers": {"tf": 2.23606797749979}, "scalpel.SSA.const.SSA": {"tf": 1}, "scalpel.SSA.const.SSA.get_identifiers": {"tf": 1.4142135623730951}, "scalpel.SSA.const.SSA.compute_SSA": {"tf": 2}, "scalpel.SSA.ssa.SSA": {"tf": 1}, "scalpel.SSA.ssa.SSA.get_identifiers": {"tf": 1.4142135623730951}, "scalpel.call_graph": {"tf": 1.4142135623730951}, "scalpel.cfg.builder.invert": {"tf": 2.23606797749979}, "scalpel.cfg.builder.CFGBuilder.add_statement": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.add_exit": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.new_functionCFG": {"tf": 1.4142135623730951}, "scalpel.cfg.builder.CFGBuilder.new_ClassCFG": {"tf": 1.4142135623730951}, "scalpel.core.class_visitor.ClassVisitor": {"tf": 2.6457513110645907}, "scalpel.core.fun_def_visitor.FunDefVisitor": {"tf": 2.6457513110645907}, "scalpel.core.fun_def_visitor.FunDefVisitor.visit": {"tf": 1}, "scalpel.core.func_call_visitor.CallTransformer": {"tf": 3.872983346207417}, "scalpel.core.func_call_visitor.FuncCallVisitor": {"tf": 2.6457513110645907}, "scalpel.core.kw_visitor.KWVisitor": {"tf": 2.6457513110645907}, "scalpel.core.mnode.MNode": {"tf": 1}, "scalpel.core.source_visitor.SourceVisitor": {"tf": 2.6457513110645907}, "scalpel.core.util.iter_fields": {"tf": 1.4142135623730951}, "scalpel.core.util.iter_child_nodes": {"tf": 2}, "scalpel.core.util.iter_stmt_children": {"tf": 2}, "scalpel.core.vars_visitor.VarsVisitor": {"tf": 2.6457513110645907}, "scalpel.import_graph": {"tf": 1.4142135623730951}, "scalpel.import_graph.import_graph.ImportGraph.get_leaf_nodes": {"tf": 1.4142135623730951}, "scalpel.import_graph.import_graph.ImportGraph.go_to_that_node": {"tf": 1.4142135623730951}, "scalpel.import_graph.import_graph.ImportGraph.leaf2root": {"tf": 1.7320508075688772}, "scalpel.import_graph.import_graph.ImportGraph.find_child_by_name": {"tf": 1.4142135623730951}, "scalpel.import_graph.import_graph.ImportGraph.find_node_by_name": {"tf": 1.4142135623730951}, "scalpel.typeinfer.analysers.ImportTypeMap.__init__": {"tf": 1}, "scalpel.typeinfer.analysers.ClassDefinitionMap.__init__": {"tf": 1}, "scalpel.typeinfer.analysers.FunctionDefinitionMap.__init__": {"tf": 1}, "scalpel.typeinfer.analysers.VariableAssignmentMap.__init__": {"tf": 1}, "scalpel.typeinfer.analysers.BinaryOperationMap.__init__": {"tf": 1}, "scalpel.typeinfer.analysers.ClassSplitVisitor": {"tf": 1}, "scalpel.typeinfer.analysers.Heuristics.heuristic_two": {"tf": 1}, "scalpel.typeinfer.analysers.Heuristics.heuristic_five": {"tf": 1}, "scalpel.typeinfer.analysers.Heuristics.heuristic_six": {"tf": 1}, "scalpel.typeinfer.analysers.Heuristics.heuristic_seven": {"tf": 1}, "scalpel.typeinfer.analysers.Heuristics.heuristic_nine": {"tf": 1}, "scalpel.typeinfer.utilities.get_type": {"tf": 2}, "scalpel.typeinfer.utilities.parse_module": {"tf": 2.23606797749979}, "scalpel.typeinfer.utilities.resolve_name": {"tf": 1}, "scalpel.typeinfer.visitors": {"tf": 1}, "scalpel.typeinfer.visitors.get_args": {"tf": 1.7320508075688772}}, "df": 47, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"scalpel.cfg.builder.CFGBuilder": {"tf": 1}, "scalpel.core.class_visitor.ClassVisitor": {"tf": 1}, "scalpel.core.fun_def_visitor.FunDefVisitor": {"tf": 1}, "scalpel.core.func_call_visitor.CallTransformer": {"tf": 1}, "scalpel.core.func_call_visitor.FuncCallVisitor": {"tf": 1}, "scalpel.core.kw_visitor.KWVisitor": {"tf": 1}, "scalpel.core.source_visitor.SourceVisitor": {"tf": 1}, "scalpel.core.vars_visitor.VarsVisitor": {"tf": 1}, "scalpel.typeinfer.analysers.HeuristicParser": {"tf": 1}, "scalpel.typeinfer.analysers.SourceSplitVisitor": {"tf": 1}, "scalpel.typeinfer.analysers.ClassSplitVisitor": {"tf": 1}, "scalpel.typeinfer.utilities.FuncCallVisitor": {"tf": 1}, "scalpel.typeinfer.visitors.FuncCallVisitor": {"tf": 1}}, "df": 13}}}}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {"scalpel.core.class_visitor.ClassVisitor": {"tf": 1}, "scalpel.core.fun_def_visitor.FunDefVisitor": {"tf": 1}, "scalpel.core.func_call_visitor.CallTransformer": {"tf": 1}, "scalpel.core.func_call_visitor.FuncCallVisitor": {"tf": 1}, "scalpel.core.kw_visitor.KWVisitor": {"tf": 1}, "scalpel.core.source_visitor.SourceVisitor": {"tf": 1}, "scalpel.core.vars_visitor.VarsVisitor": {"tf": 1}, "scalpel.typeinfer.utilities.TypeInferCallTransformer": {"tf": 1}, "scalpel.typeinfer.visitors.TypeInferCallTransformer": {"tf": 1}}, "df": 9}}}}}}}}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {"scalpel.SSA.alg.immediate_dominators": {"tf": 1}, "scalpel.call_graph": {"tf": 1}, "scalpel.typeinfer.analysers.Heuristics.heuristic_eight": {"tf": 1}, "scalpel.typeinfer.analysers.Heuristics.heuristic_twelve": {"tf": 1}}, "df": 4}}, "n": {"docs": {}, "df": 0, "e": {"docs": {"scalpel.core.class_visitor.ClassVisitor": {"tf": 1}, "scalpel.core.fun_def_visitor.FunDefVisitor": {"tf": 1}, "scalpel.core.func_call_visitor.CallTransformer": {"tf": 1}, "scalpel.core.func_call_visitor.FuncCallVisitor": {"tf": 1}, "scalpel.core.kw_visitor.KWVisitor": {"tf": 1}, "scalpel.core.source_visitor.SourceVisitor": {"tf": 1}, "scalpel.core.vars_visitor.VarsVisitor": {"tf": 1}, "scalpel.typeinfer.utilities.is_imported_fun": {"tf": 1}}, "df": 8}}}, "x": {"docs": {"scalpel.SSA.alg.immediate_dominators": {"tf": 1.4142135623730951}, "scalpel.SSA.alg.dominance_frontiers": {"tf": 1.4142135623730951}}, "df": 2}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"scalpel.SSA.const": {"tf": 1}, "scalpel.SSA.const.SSA.compute_SSA": {"tf": 1}, "scalpel.SSA.ssa": {"tf": 1}, "scalpel.SSA.ssa.SSA.compute_undefined_names": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.build": {"tf": 1.4142135623730951}, "scalpel.cfg.builder.CFGBuilder.build_from_src": {"tf": 1.4142135623730951}, "scalpel.cfg.builder.CFGBuilder.build_from_file": {"tf": 1.4142135623730951}, "scalpel.cfg.model.Block.get_calls": {"tf": 1}, "scalpel.cfg.model.CFG.__init__": {"tf": 1}, "scalpel.cfg.model.CFG.build_visual": {"tf": 1}, "scalpel.core.class_visitor.ClassVisitor": {"tf": 1}, "scalpel.core.fun_def_visitor.FunDefVisitor": {"tf": 1}, "scalpel.core.func_call_visitor.CallTransformer": {"tf": 1}, "scalpel.core.func_call_visitor.FuncCallVisitor": {"tf": 1}, "scalpel.core.kw_visitor.KWVisitor": {"tf": 1}, "scalpel.core.mnode.MNode.__init__": {"tf": 1}, "scalpel.core.mnode.MNode.parse_vars": {"tf": 1.4142135623730951}, "scalpel.core.mnode.MNode.parse_func_calls": {"tf": 1.4142135623730951}, "scalpel.core.mnode.MNode.parse_import_stmts": {"tf": 1}, "scalpel.core.source_visitor.SourceVisitor": {"tf": 1}, "scalpel.core.vars_visitor.VarsVisitor": {"tf": 1}, "scalpel.import_graph.import_graph.ImportGraph.go_to_that_node": {"tf": 1}, "scalpel.import_graph.import_graph.ImportGraph.leaf2root": {"tf": 1}, "scalpel.import_graph.import_graph.ImportGraph.find_child_by_name": {"tf": 1}, "scalpel.import_graph.import_graph.ImportGraph.find_node_by_name": {"tf": 1}, "scalpel.typeinfer.analysers.ImportTypeMap.get_imported_type": {"tf": 1}, "scalpel.typeinfer.analysers.Heuristics.heuristic_eight": {"tf": 1}, "scalpel.typeinfer.analysers.Heuristics.heuristic_twelve": {"tf": 1}, "scalpel.typeinfer.analysers.Heuristics.get_bin_op_involved": {"tf": 1}, "scalpel.typeinfer.typeinfer": {"tf": 1}, "scalpel.typeinfer.typeinfer.TypeInference.__init__": {"tf": 1.4142135623730951}, "scalpel.typeinfer.utilities.is_imported_fun": {"tf": 1}, "scalpel.typeinfer.utilities.resolve_name": {"tf": 1}}, "df": 33}}}, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"scalpel.cfg.model.Block.at": {"tf": 1}, "scalpel.core.mnode.MNode.parse_vars": {"tf": 1}, "scalpel.core.mnode.MNode.parse_func_calls": {"tf": 1}, "scalpel.typeinfer.analysers.Heuristics.heuristic_eight": {"tf": 1.4142135623730951}, "scalpel.typeinfer.analysers.Heuristics.heuristic_twelve": {"tf": 1.4142135623730951}}, "df": 5}}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"scalpel.SSA.alg": {"tf": 1}, "scalpel.core.func_call_visitor.CallTransformer": {"tf": 1}}, "df": 2}}}}, "g": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"scalpel.SSA.alg": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "j": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "g": {"docs": {"scalpel.call_graph.pycg": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"scalpel.cfg.model.CFG.get_all_blocks": {"tf": 1}}, "df": 1}}}}, "n": {"docs": {"scalpel.SSA.alg": {"tf": 1}, "scalpel.SSA.const.SSA.compute_SSA": {"tf": 1}, "scalpel.cfg.model.Block": {"tf": 1}}, "df": 3}, "b": {"docs": {}, "df": 0, "j": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"scalpel.SSA.ssa.SSA.flatten_tuple": {"tf": 1}, "scalpel.cfg": {"tf": 1}, "scalpel.cfg.builder.invert": {"tf": 1.7320508075688772}, "scalpel.cfg.builder.merge_exitcases": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.new_block": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.add_statement": {"tf": 1}, "scalpel.core.mnode": {"tf": 1}, "scalpel.import_graph.import_graph.ImportGraph.parse_import": {"tf": 1}}, "df": 8}}}}}, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {"scalpel.cfg": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {"scalpel.cfg.builder.invert": {"tf": 1}, "scalpel.core.func_call_visitor.CallTransformer": {"tf": 1}, "scalpel.core.mnode": {"tf": 1}, "scalpel.typeinfer.analysers.BinaryOperatorMap": {"tf": 1}, "scalpel.typeinfer.analysers.BinaryOperationMap": {"tf": 1}, "scalpel.typeinfer.analysers.BinaryOperationMap.map": {"tf": 1}, "scalpel.typeinfer.analysers.Heuristics.get_bin_op_involved": {"tf": 1.4142135623730951}, "scalpel.typeinfer.analysers.Heuristics.in_bin_op": {"tf": 1.7320508075688772}, "scalpel.typeinfer.classes.BinaryOperation": {"tf": 1}}, "df": 9}, "n": {"docs": {"scalpel.cfg.model.CFG.build_visual": {"tf": 1}}, "df": 1}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"scalpel.cfg.model.CFG.build_visual": {"tf": 2}, "scalpel.typeinfer": {"tf": 1}}, "df": 2}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {"scalpel.core.class_visitor.ClassVisitor": {"tf": 1}, "scalpel.core.fun_def_visitor.FunDefVisitor": {"tf": 1}, "scalpel.core.func_call_visitor.FuncCallVisitor": {"tf": 1}, "scalpel.core.kw_visitor.KWVisitor": {"tf": 1}, "scalpel.core.source_visitor.SourceVisitor": {"tf": 1}, "scalpel.core.vars_visitor.VarsVisitor": {"tf": 1}}, "df": 6}}}}}}, "l": {"docs": {}, "df": 0, "d": {"docs": {"scalpel.core.func_call_visitor.CallTransformer": {"tf": 1}}, "df": 1}}, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {"scalpel.core.func_call_visitor.CallTransformer": {"tf": 1}, "scalpel.typeinfer.analysers.Heuristics.in_bin_op": {"tf": 1}, "scalpel.typeinfer.utilities.is_camel_case": {"tf": 1}, "scalpel.typeinfer.utilities.is_done": {"tf": 1}}, "df": 4}}}}}}}, "c": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {"scalpel.core.func_call_visitor.CallTransformer": {"tf": 1}}, "df": 1}}}}}}, "h": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, ":": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "x": {"docs": {"scalpel.SSA.alg": {"tf": 1}}, "df": 1}}}}}}}}, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "b": {"docs": {"scalpel.call_graph.pycg": {"tf": 1}, "scalpel.cfg.builder": {"tf": 1}}, "df": 2}}}}}}, "p": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {"scalpel.call_graph.pycg": {"tf": 1}}, "df": 1}}}}}}}}}}, "m": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "#": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {"scalpel.SSA.alg": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "y": {"docs": {"scalpel.SSA.alg.immediate_dominators": {"tf": 1}, "scalpel.SSA.alg.dominance_frontiers": {"tf": 1}}, "df": 2}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"scalpel.core.func_call_visitor.CallTransformer": {"tf": 1}}, "df": 1}}, "l": {"docs": {}, "df": 0, "p": {"docs": {"scalpel.typeinfer.analysers.ReturnStmtVisitor.infer_actual_return_value": {"tf": 1}, "scalpel.typeinfer.typeinfer.TypeInference": {"tf": 1}}, "df": 2, "e": {"docs": {}, "df": 0, "r": {"docs": {"scalpel.typeinfer.analysers": {"tf": 1}}, "df": 1}}}}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"scalpel.typeinfer.analysers": {"tf": 1}, "scalpel.typeinfer.analysers.HeuristicParser": {"tf": 1}, "scalpel.typeinfer.analysers.Heuristics": {"tf": 1}, "scalpel.typeinfer.analysers.Heuristics.heuristic_eight": {"tf": 1.4142135623730951}, "scalpel.typeinfer.analysers.Heuristics.heuristic_twelve": {"tf": 1.4142135623730951}, "scalpel.typeinfer.typeinfer.TypeInference": {"tf": 1}, "scalpel.typeinfer.typeinfer.TypeInference.process_file": {"tf": 1}}, "df": 7}}}}}, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"scalpel.typeinfer.utilities.get_function_comment": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {"scalpel.import_graph": {"tf": 1}}, "df": 1}}}}}}}}, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"scalpel.typeinfer.classes.TypeWarning": {"tf": 1}, "scalpel.typeinfer.classes.ScalpelVariable": {"tf": 1}, "scalpel.typeinfer.classes.ScalpelFunction": {"tf": 1}, "scalpel.typeinfer.classes.ScalpelClass": {"tf": 1}, "scalpel.typeinfer.classes.BinaryOperation": {"tf": 1}, "scalpel.typeinfer.classes.ProcessedFile": {"tf": 1}}, "df": 6}}}}, "k": {"docs": {"scalpel.SSA.alg.immediate_dominators": {"tf": 1.4142135623730951}, "scalpel.SSA.alg.dominance_frontiers": {"tf": 1.4142135623730951}}, "df": 2, "e": {"docs": {}, "df": 0, "y": {"docs": {"scalpel.SSA.alg.immediate_dominators": {"tf": 1}, "scalpel.SSA.alg.dominance_frontiers": {"tf": 1}}, "df": 2}, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {"scalpel.SSA.alg.immediate_dominators": {"tf": 1}, "scalpel.SSA.alg.dominance_frontiers": {"tf": 1}}, "df": 2}}}}}, "e": {"docs": {}, "df": 0, "p": {"docs": {"scalpel.core.func_call_visitor.CallTransformer": {"tf": 1}}, "df": 1}}}, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "n": {"docs": {"scalpel.typeinfer.utilities.get_type": {"tf": 1}}, "df": 1}}}}}, "j": {"docs": {"scalpel.SSA.alg.immediate_dominators": {"tf": 1}, "scalpel.SSA.alg.dominance_frontiers": {"tf": 1}}, "df": 2, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {"scalpel.cfg": {"tf": 1.7320508075688772}, "scalpel.cfg.builder.CFGBuilder.add_exit": {"tf": 1}, "scalpel.cfg.model.Block": {"tf": 1.4142135623730951}, "scalpel.cfg.model.Link": {"tf": 1.4142135623730951}, "scalpel.cfg.model.CFG": {"tf": 1}}, "df": 5}}}}, "x": {"docs": {"scalpel.SSA.const.SSA.compute_SSA": {"tf": 1.4142135623730951}}, "df": 1}, "w": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"scalpel.call_graph": {"tf": 1}, "scalpel.call_graph.pycg": {"tf": 1}}, "df": 2}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"scalpel.typeinfer.utilities.is_camel_case": {"tf": 1}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"scalpel.cfg": {"tf": 1}, "scalpel.cfg.model.Block": {"tf": 1}}, "df": 2}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {"scalpel.typeinfer.analysers.Heuristics.in_bin_op": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "k": {"docs": {"scalpel.cfg.builder.CFGBuilder": {"tf": 1}, "scalpel.core.class_visitor.ClassVisitor": {"tf": 1}, "scalpel.core.fun_def_visitor.FunDefVisitor": {"tf": 1}, "scalpel.core.func_call_visitor.CallTransformer": {"tf": 1.4142135623730951}, "scalpel.core.func_call_visitor.FuncCallVisitor": {"tf": 1}, "scalpel.core.kw_visitor.KWVisitor": {"tf": 1}, "scalpel.core.source_visitor.SourceVisitor": {"tf": 1}, "scalpel.core.vars_visitor.VarsVisitor": {"tf": 1}}, "df": 8}}, "n": {"docs": {}, "df": 0, "t": {"docs": {"scalpel.core.class_visitor.ClassVisitor": {"tf": 1}, "scalpel.core.fun_def_visitor.FunDefVisitor": {"tf": 1}, "scalpel.core.func_call_visitor.FuncCallVisitor": {"tf": 1}, "scalpel.core.kw_visitor.KWVisitor": {"tf": 1}, "scalpel.core.source_visitor.SourceVisitor": {"tf": 1}, "scalpel.core.vars_visitor.VarsVisitor": {"tf": 1}}, "df": 6}}, "r": {"docs": {}, "df": 0, "n": {"docs": {"scalpel.typeinfer.classes.TypeWarning": {"tf": 1}}, "df": 1}}, "y": {"docs": {"scalpel.typeinfer.typeinfer.TypeInference.print_types": {"tf": 1}}, "df": 1}}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"scalpel.cfg.builder.CFGBuilder.build": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.new_functionCFG": {"tf": 1}, "scalpel.cfg.builder.CFGBuilder.new_ClassCFG": {"tf": 1}, "scalpel.cfg.model.CFG.build_visual": {"tf": 1}, "scalpel.typeinfer.analysers.Heuristics.in_bin_op": {"tf": 1}, "scalpel.typeinfer.utilities.is_camel_case": {"tf": 1}, "scalpel.typeinfer.utilities.is_imported_fun": {"tf": 1}, "scalpel.typeinfer.utilities.is_done": {"tf": 1}}, "df": 8}}}}}, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"scalpel.typeinfer": {"tf": 1}}, "df": 1}}, "s": {"docs": {}, "df": 0, "e": {"docs": {"scalpel.typeinfer.analysers.SourceSplitVisitor.visit_Assign": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {"scalpel.import_graph": {"tf": 1}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "k": {"docs": {"scalpel.typeinfer.analysers.Heuristics.heuristic_eight": {"tf": 1}, "scalpel.typeinfer.analysers.Heuristics.heuristic_twelve": {"tf": 1}}, "df": 2}}}}, "y": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "'": {"docs": {}, "df": 0, "r": {"docs": {"scalpel.core.func_call_visitor.CallTransformer": {"tf": 1}}, "df": 1}}, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "f": {"docs": {"scalpel.core.func_call_visitor.CallTransformer": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {"scalpel.core.func_call_visitor.CallTransformer": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"scalpel.core.util.iter_fields": {"tf": 1}, "scalpel.core.util.iter_child_nodes": {"tf": 1}, "scalpel.core.util.iter_stmt_children": {"tf": 1}}, "df": 3}}}}}, "_": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"scalpel.core.util.iter_fields": {"tf": 1}}, "df": 1}}}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {"scalpel.typeinfer.analysers.ImportTypeMap.get_imported_type": {"tf": 1}}, "df": 1}}}}}}}}}}, "pipeline": ["trimmer", "stopWordFilter", "stemmer"], "_isPrebuiltIndex": true};

    // mirrored in build-search-index.js (part 1)
    // Also split on html tags. this is a cheap heuristic, but good enough.
    elasticlunr.tokenizer.setSeperator(/[\s\-.;&]+|<[^>]*>/);

    let searchIndex;
    if (docs._isPrebuiltIndex) {
        console.info("using precompiled search index");
        searchIndex = elasticlunr.Index.load(docs);
    } else {
        console.time("building search index");
        // mirrored in build-search-index.js (part 2)
        searchIndex = elasticlunr(function () {
            this.addField("qualname");
            this.addField("fullname");
            this.addField("doc");
            this.setRef("fullname");
        });
        for (let doc of docs) {
            searchIndex.addDoc(doc);
        }
        console.timeEnd("building search index");
    }

    return (term) => searchIndex.search(term, {
        fields: {
            qualname: {boost: 4},
            fullname: {boost: 2},
            doc: {boost: 1},
        },
        expand: true
    });
})();